{
  "version": "3.2",
  "log": [
    {
      "AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\interfaces\\AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "3ce9b6bc4daf77a125163de108ab5808306921235fd6575a23c6d9f7a9ca7e72",
          "withoutMetadata": "a79efac318026e90f06e729fb7ccd6b276100841bd23f5a789b4198d885a005e",
          "linkedWithoutMetadata": "a79efac318026e90f06e729fb7ccd6b276100841bd23f5a789b4198d885a005e"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "4457ccfa5ddf86d35647a07a166bfb0c383ccbac15899576b0414e805552bd6e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "1bdc60fd3114538b9901b0ff93713ab6e7cae0452017982888b5adf0e8b5169f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "2d79f61ee77ff046be34f758f6d1c2000879aeb0131fbc29ebc549c2167a59f4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CrossFactory": {
        "src": "contracts\\core\\CrossFactory.sol:9",
        "version": {
          "withMetadata": "20e7fc67bc55fd26575b901b21268d379fc457fc83e6a69fd0d60556b4f898bb",
          "withoutMetadata": "7e14319808fd05564b067c171729d129d0b32cc2d742c641177d13cd483af642",
          "linkedWithoutMetadata": "7e14319808fd05564b067c171729d129d0b32cc2d742c641177d13cd483af642"
        },
        "inherit": [
          "ICrossFactory",
          "IPancakeFactory",
          "Node",
          "INode"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getOwner()",
          "setNode(uint8,address,address)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setOwner(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 3445,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrossFactory",
            "src": "contracts\\core\\CrossFactory.sol:18"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CrossFactory",
              "src": "contracts\\core\\CrossFactory.sol:12"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CrossFactory",
              "src": "contracts\\core\\CrossFactory.sol:13"
            },
            {
              "label": "getPair",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "CrossFactory",
              "src": "contracts\\core\\CrossFactory.sol:15"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "12",
              "type": "t_array(t_address)dyn_storage",
              "contract": "CrossFactory",
              "src": "contracts\\core\\CrossFactory.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CrossPair": {
        "src": "contracts\\core\\CrossPair.sol:15",
        "version": {
          "withMetadata": "ed9f2bf75cf1db7ba6c4dff6186fc72df74674753ed3f693eb75153aa72314ab",
          "withoutMetadata": "7f47d9bb8f27f6558b62900559a5496782e9bdf829e514df1296c2d2e3e21f58",
          "linkedWithoutMetadata": "7f47d9bb8f27f6558b62900559a5496782e9bdf829e514df1296c2d2e3e21f58"
        },
        "inherit": [
          "ICrossPair",
          "IPancakePair"
        ],
        "libraries": [
          "Math",
          "SafeMath",
          "UQ112x112"
        ],
        "methods": [
          "getReserves()",
          "setNodes(address,address,address)",
          "()",
          "tolerableTransfer(address,address,uint256)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrossPair",
            "src": "contracts\\core\\CrossPair.sol:93"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\core\\CrossPair.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:23"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:24"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:25"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:27"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:32"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:37"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:38"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:39"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:41"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:42"
            },
            {
              "label": "blockTimestampLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:43"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:45"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:46"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:47"
            },
            {
              "label": "maker",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:49"
            },
            {
              "label": "taker",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:50"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:51"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:53"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICrossCallee": {
        "src": "contracts\\core\\interfaces\\ICrossCallee.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "crossCall(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICrossFactory": {
        "src": "contracts\\core\\interfaces\\ICrossFactory.sol:6",
        "inherit": [
          "IPancakeFactory"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICrossPair": {
        "src": "contracts\\core\\interfaces\\ICrossPair.sol:6",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "tolerableTransfer(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeFactory": {
        "src": "contracts\\core\\interfaces\\IPancakeFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "owner()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setOwner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseRelayRecipient": {
        "src": "contracts\\farm\\BaseRelayRecipient.sol:10",
        "inherit": [
          "IRelayRecipient"
        ],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaseRelayRecipient",
              "src": "contracts\\farm\\BaseRelayRecipient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CrossFarm": {
        "src": "contracts\\farm\\CrossFarm.sol:28",
        "version": {
          "withMetadata": "06883065ef0e321fba427ee1406274a1e706fd97e93f181515e7cc030b1b16ed",
          "withoutMetadata": "2b205ad15ba1bde85cde41fa28cb5b254dff6a8e3d47ea60e812dcc0d994d968",
          "linkedWithoutMetadata": "2b205ad15ba1bde85cde41fa28cb5b254dff6a8e3d47ea60e812dcc0d994d968"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "BaseRelayRecipient",
          "IRelayRecipient",
          "ICrossFarm",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "WireLibrary",
          "FarmLibrary",
          "CrossLibrary"
        ],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)",
          "getOwner()",
          "()",
          "informOfPair(address,address,address,address)",
          "(address,uint256,uint256)",
          "setNode(uint8,address,address)",
          "setFeeStores((address,address,address,address),address)",
          "setFeeRates(uint8,(uint32,uint32,uint32,uint32),address)",
          "setFeeParams(uint256,uint256,address,uint256)",
          "setCrssReferral(address)",
          "setReferralCommissionRate(uint256)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool,uint256)",
          "set(uint256,uint256,bool,uint256)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "changeReferrer(address,address)",
          "dailyPatrol()",
          "getUserState(uint256,address)",
          "getVestList(uint256,address)",
          "getSubPooledCrss(uint256,address)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "withdrawVest(uint256,uint256)",
          "vestAccumulated(uint256)",
          "harvestAccumulated(uint256)",
          "stakeAccumulated(uint256)",
          "emergencyWithdraw(uint256)",
          "massHarvestRewards()",
          "massStakeRewards()",
          "massCompoundRewards()",
          "switchCollectOption(uint256,uint8)",
          "setTrustedForwarder(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 841,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 1094,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 4556,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 5098,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 5827,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 6091,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 6974,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 7268,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 7542,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 7844,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 8305,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 8650,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 9152,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 9508,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 9706,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 10052,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 10971,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 11151,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 11358,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 11949,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 12725,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 12995,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 13247,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 13507,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 13663,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 14065,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 14240,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 14719,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 15367,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 15516,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 15680,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 15910,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 16352,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 16898,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4818,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11566,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 19809,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrossFarm",
            "src": "contracts\\farm\\CrossFarm.sol:122"
          },
          {
            "kind": "external-library-linking",
            "name": "FarmLibrary",
            "src": "contracts/libraries/FarmLibrary.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "trustedForwarder",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "BaseRelayRecipient",
              "src": "contracts\\farm\\BaseRelayRecipient.sol:14"
            },
            {
              "label": "sessionParams",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(SessionParams)25799_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:10"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(ISessionRegistrar)25996",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:11"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(ISessionFees)25962",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:39"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_struct(Pair)25837_storage)",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:68"
            },
            {
              "label": "getPairQuick",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:69"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "19",
              "type": "t_struct(FeeStores)25817_storage",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:71"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:72"
            },
            {
              "label": "crssPerBlock",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:79"
            },
            {
              "label": "bonusMultiplier",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:80"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "26",
              "type": "t_array(t_struct(PoolInfo)9178_storage)dyn_storage",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:82"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)9111_storage))",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:83"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:85"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:86"
            },
            {
              "label": "lastPatrolDay",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:88"
            },
            {
              "label": "feeParams",
              "offset": 0,
              "slot": "31",
              "type": "t_struct(FarmFeeParams)9193_storage",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:90"
            },
            {
              "label": "migrator",
              "offset": 0,
              "slot": "38",
              "type": "t_contract(IMigratorChef)9313",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:92"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfo)9178_storage)dyn_storage": {
              "label": "struct PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(VestChunk)9085_storage)dyn_storage": {
              "label": "struct VestChunk[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)956": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMigratorChef)9313": {
              "label": "contract IMigratorChef",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)25962": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)25996": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(CollectOption)9093": {
              "label": "enum CollectOption",
              "members": [
                "OffOff",
                "OnOff",
                "OnOn",
                "OffOn"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)25837_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserInfo)9111_storage)": {
              "label": "mapping(address => struct UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)": {
              "label": "mapping(enum SessionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)9111_storage))": {
              "label": "mapping(uint256 => mapping(address => struct UserInfo))",
              "numberOfBytes": "32"
            },
            "t_struct(FarmFeeParams)9193_storage": {
              "label": "struct FarmFeeParams",
              "members": [
                {
                  "label": "crssReferral",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "treasury",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "referralCommissionRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "maximumReferralCommisionRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "nonVestBurnRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakeholders",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "compoundFeeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(FeeRates)25808_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "develop",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "liquidity",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "treasury",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)25817_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "develop",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "liquidity",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "treasury",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Pair)25837_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PoolInfo)9178_storage": {
              "label": "struct PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IERC20)956",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accCrssPerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "depositFeeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "reward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "OnOff",
                  "type": "t_struct(Struct_OnOff)9122_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "OnOn",
                  "type": "t_struct(Struct_OnOn)9131_storage",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "OffOn",
                  "type": "t_struct(Struct_OffOn)9140_storage",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "OffOff",
                  "type": "t_struct(Struct_OffOff)9146_storage",
                  "offset": 0,
                  "slot": "19"
                }
              ],
              "numberOfBytes": "704"
            },
            "t_struct(SessionParams)25799_storage": {
              "label": "struct SessionParams",
              "members": [
                {
                  "label": "sessionType",
                  "type": "t_enum(SessionType)25780",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isOriginAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Struct_OffOff)9146_storage": {
              "label": "struct Struct_OffOff",
              "members": [
                {
                  "label": "sumAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "Accum",
                  "type": "t_struct(SubPool)9116_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Struct_OffOn)9140_storage": {
              "label": "struct Struct_OffOn",
              "members": [
                {
                  "label": "sumAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "Vest",
                  "type": "t_struct(SubPool)9116_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Accum",
                  "type": "t_struct(SubPool)9116_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Struct_OnOff)9122_storage": {
              "label": "struct Struct_OnOff",
              "members": [
                {
                  "label": "sumAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "Comp",
                  "type": "t_struct(SubPool)9116_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Struct_OnOn)9131_storage": {
              "label": "struct Struct_OnOn",
              "members": [
                {
                  "label": "sumAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "Comp",
                  "type": "t_struct(SubPool)9116_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Vest",
                  "type": "t_struct(SubPool)9116_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(SubPool)9116_storage": {
              "label": "struct SubPool",
              "members": [
                {
                  "label": "bulk",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accPerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserInfo)9111_storage": {
              "label": "struct UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "debt1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "debt2",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accumulated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "vestList",
                  "type": "t_array(t_struct(VestChunk)9085_storage)dyn_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "collectOption",
                  "type": "t_enum(CollectOption)9093",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(VestChunk)9085_storage": {
              "label": "struct VestChunk",
              "members": [
                {
                  "label": "principal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "withdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CrssReferral": {
        "src": "contracts\\farm\\CrssReferral.sol:7",
        "version": {
          "withMetadata": "95882e4fd91d0831ffeaa3285c297b64f8f21b15586b5a2c355bc7a9e34116d6",
          "withoutMetadata": "e6579fca67d2e9675e7c9c1ccda499bbd3028dae139d28021fb1f01f317a55ff",
          "linkedWithoutMetadata": "e6579fca67d2e9675e7c9c1ccda499bbd3028dae139d28021fb1f01f317a55ff"
        },
        "inherit": [
          "Ownable",
          "Context",
          "ICrssReferral"
        ],
        "libraries": [],
        "methods": [
          "()",
          "recordReferral(address,address)",
          "recordReferralCommission(address,uint256)",
          "getReferrer(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrssReferral",
            "src": "contracts\\farm\\CrssReferral.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "referrers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "CrssReferral",
              "src": "contracts\\farm\\CrssReferral.sol:8"
            },
            {
              "label": "countReferrals",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CrssReferral",
              "src": "contracts\\farm\\CrssReferral.sol:9"
            },
            {
              "label": "totalReferralCommissions",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CrssReferral",
              "src": "contracts\\farm\\CrssReferral.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CrssToken": {
        "src": "contracts\\farm\\CrssToken.sol:22",
        "version": {
          "withMetadata": "bda8bb9398afbbfe7989f38f79ac5065bfe69f914193341fd45acc7b72cd859f",
          "withoutMetadata": "b611af03f0493ed57d49d753dd3d74975cab7cd32dce2d644675bcd6c2adc893",
          "linkedWithoutMetadata": "b611af03f0493ed57d49d753dd3d74975cab7cd32dce2d644675bcd6c2adc893"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ICrssToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "WireLibrary"
        ],
        "methods": [
          "()",
          "informOfPair(address,address,address,address)",
          "()",
          "getOwner()",
          "setFeeStores((address,address,address,address),address)",
          "setFeeRates(uint8,(uint32,uint32,uint32,uint32),address)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "_decreaseAllowance(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "bury(address,uint256)",
          "transfer(address,uint256)",
          "tolerableTransfer(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "changeMaxTransferAmountRate(uint256)",
          "payFeeCrssLogic(address,uint256,(uint32,uint32,uint32,uint32),bool)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)",
          "getCurrentVotes(address)",
          "getPriorVotes(address,uint256)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5193,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 7942,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8764,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrssToken",
            "src": "contracts\\farm\\CrssToken.sol:83"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:9"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_enum(SessionType)25780,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:10"
            },
            {
              "label": "stackSTypes",
              "offset": 0,
              "slot": "12",
              "type": "t_array(t_enum(SessionType)25780)10_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "sessionParams",
              "offset": 0,
              "slot": "14",
              "type": "t_struct(SessionParams)25799_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:10"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(ISessionRegistrar)25996",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:11"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionFees)25962",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(Pair)25837_storage)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:26"
            },
            {
              "label": "getPairQuick",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:27"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(FeeStores)25817_storage",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:29"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:37"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:38"
            },
            {
              "label": "accTransferAmountSession",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_struct(TransferAmountSession)6341_storage)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:52"
            },
            {
              "label": "maxTransferAmountRate",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:53"
            },
            {
              "label": "maxTransferAmount",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:54"
            },
            {
              "label": "transferUsers",
              "offset": 0,
              "slot": "33",
              "type": "t_array(t_address)dyn_storage",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:55"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_address)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:58"
            },
            {
              "label": "checkpoints",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)6363_storage))",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:63"
            },
            {
              "label": "numCheckpoints",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_uint32)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:64"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "37",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:69"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_enum(SessionType)25780)10_storage": {
              "label": "enum SessionType[10]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)25962": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)25996": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)6363_storage))": {
              "label": "mapping(address => mapping(uint32 => struct CrssToken.Checkpoint))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)25837_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(TransferAmountSession)6341_storage)": {
              "label": "mapping(address => struct CrssToken.TransferAmountSession)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)": {
              "label": "mapping(enum SessionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(SessionType)25780,t_uint256)": {
              "label": "mapping(enum SessionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_struct(Checkpoint)6363_storage)": {
              "label": "mapping(uint32 => struct CrssToken.Checkpoint)",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)6363_storage": {
              "label": "struct CrssToken.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(FeeRates)25808_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "develop",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "liquidity",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "treasury",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)25817_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "develop",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "liquidity",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "treasury",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Pair)25837_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(SessionParams)25799_storage": {
              "label": "struct SessionParams",
              "members": [
                {
                  "label": "sessionType",
                  "type": "t_enum(SessionType)25780",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isOriginAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TransferAmountSession)6341_storage": {
              "label": "struct CrssToken.TransferAmountSession",
              "members": [
                {
                  "label": "sent",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "received",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICrossFarm": {
        "src": "contracts\\farm\\interfaces\\ICrossFarm.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeStores()",
          "feeRates(uint8)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool,uint256)",
          "set(uint256,uint256,bool,uint256)",
          "getMultiplier(uint256,uint256)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "changeReferrer(address,address)",
          "switchCollectOption(uint256,uint8)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "withdrawVest(uint256,uint256)",
          "vestAccumulated(uint256)",
          "harvestAccumulated(uint256)",
          "stakeAccumulated(uint256)",
          "massHarvestRewards()",
          "massStakeRewards()",
          "massCompoundRewards()",
          "emergencyWithdraw(uint256)",
          "setCrssReferral(address)",
          "setReferralCommissionRate(uint256)",
          "dailyPatrol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICrssReferral": {
        "src": "contracts\\farm\\interfaces\\ICrssReferral.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordReferral(address,address)",
          "recordReferralCommission(address,uint256)",
          "getReferrer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICrssToken": {
        "src": "contracts\\farm\\interfaces\\ICrssToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "bury(address,uint256)",
          "maxTransferAmountRate()",
          "changeMaxTransferAmountRate(uint256)",
          "tolerableTransfer(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMigratorChef": {
        "src": "contracts\\farm\\interfaces\\IMigratorChef.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "migrate(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IRelayRecipient": {
        "src": "contracts\\farm\\interfaces\\IRelayRecipient.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXCrssToken": {
        "src": "contracts\\farm\\interfaces\\IXCrssToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "getOwner()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "safeCakeTransfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "xCrssToken": {
        "src": "contracts\\farm\\xCrssToken.sol:13",
        "version": {
          "withMetadata": "d0d5474951fafe34f3eca6f2878e8751aa9336335c9eb9b573024b90b432df06",
          "withoutMetadata": "a9d86eb15ff9741466f6ad4381b9503c07f2f8bd780e9d10a1f3ad11ba2573dc",
          "linkedWithoutMetadata": "a9d86eb15ff9741466f6ad4381b9503c07f2f8bd780e9d10a1f3ad11ba2573dc"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IXCrssToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "safeCakeTransfer(address,uint256)",
          "getOwner()",
          "(string,string)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)",
          "getCurrentVotes(address)",
          "getPriorVotes(address,uint256)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 3845,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "xCrssToken",
            "src": "contracts\\farm\\xCrssToken.sol:45"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_address)",
              "contract": "xCrssToken",
              "src": "contracts\\farm\\xCrssToken.sol:57"
            },
            {
              "label": "checkpoints",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)9541_storage))",
              "contract": "xCrssToken",
              "src": "contracts\\farm\\xCrssToken.sol:66"
            },
            {
              "label": "numCheckpoints",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_uint32)",
              "contract": "xCrssToken",
              "src": "contracts\\farm\\xCrssToken.sol:69"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "xCrssToken",
              "src": "contracts\\farm\\xCrssToken.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)9541_storage))": {
              "label": "mapping(address => mapping(uint32 => struct xCrssToken.Checkpoint))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_struct(Checkpoint)9541_storage)": {
              "label": "mapping(uint32 => struct xCrssToken.Checkpoint)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)9541_storage": {
              "label": "struct xCrssToken.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CrossLibrary": {
        "src": "contracts\\libraries\\CrossLibrary.sol:11",
        "version": {
          "withMetadata": "a74dbdd0cecbdf5f6d806dc32c1f425e11b64469220caead2d4c81455089da77",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CrossOracleLibrary": {
        "src": "contracts\\libraries\\CrossOracleLibrary.sol:8",
        "version": {
          "withMetadata": "3869a96dfd28a6292cbba0a6dc0fb8cb152c91dbedf0272ee1cd6bb4cb367512",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "FixedPoint"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FarmLibrary": {
        "src": "contracts\\libraries\\FarmLibrary.sol:25",
        "version": {
          "withMetadata": "b933e2b129111dd70298eb0821247ff978c2195736b37d8aac90bd756861fd11",
          "withoutMetadata": "48cbc6d8b4eb32b03bb7fc9ea4ecfcb0fd7aa5ea5dd7681c0e6682cd5d60b93e",
          "linkedWithoutMetadata": "48cbc6d8b4eb32b03bb7fc9ea4ecfcb0fd7aa5ea5dd7681c0e6682cd5d60b93e"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "changeLpTokensToCrssInFarm(address,address,address,address,uint256)",
          "changeCrssInXTokenToLpInFarm(address,Nodes storage,uint256,address)",
          "swapExactTokenForToken(address,address,address,address,uint256)",
          "getTotalVestPrincipals(VestChunk[] storage)",
          "getTotalMatureVestPieces(VestChunk[] storage,uint256)",
          "tolerableCrssTransferFromXTokenAccount(address,address,uint256)",
          "takePendingCollectively(PoolInfo storage,FarmFeeParams storage,Nodes storage)",
          "checkConsistency(PoolInfo storage,string)",
          "payCompoundFee(address,FarmFeeParams storage,uint256,Nodes storage)",
          "pyaReferralComission(PoolInfo storage,UserInfo storage,address,FarmFeeParams storage,Nodes storage)",
          "takeIndividualReward(PoolInfo storage,UserInfo storage)",
          "startRewardCycle(PoolInfo storage,UserInfo storage,uint256,FarmFeeParams storage,bool)",
          "getRewardPayroll(PoolInfo storage,UserInfo storage)",
          "migratePool(PoolInfo storage,address)",
          "switchCollectOption(PoolInfo storage,UserInfo storage,uint8,address,FarmFeeParams storage,Nodes storage,uint256,uint256,uint256)",
          "collectAccumulated(address,PoolInfo[] storage,mapping(uint256 => mapping(address => struct UserInfo)) storage,FarmFeeParams storage,Nodes storage,uint256,uint256,uint256)",
          "massCompoundRewards(address,PoolInfo[] storage,mapping(uint256 => mapping(address => struct UserInfo)) storage,Nodes storage,FarmFeeParams storage)",
          "setPool(PoolInfo[] storage,uint256,uint256,uint256)",
          "addPool(uint256,address,uint256,uint256,PoolInfo[] storage)",
          "getMultiplier(uint256,uint256,uint256)",
          "updatePool(PoolInfo storage,uint256,uint256,uint256,Nodes storage)",
          "pendingCrss(PoolInfo storage,UserInfo storage,uint256,uint256,uint256)",
          "finishRewardCycle(PoolInfo storage,UserInfo storage,address,FarmFeeParams storage,Nodes storage,uint256,uint256,uint256)",
          "getUserState(address,uint256,PoolInfo[] storage,mapping(uint256 => mapping(address => struct UserInfo)) storage,Nodes storage,uint256,uint256,uint256,uint256)",
          "getSubPooledCrss(PoolInfo storage,UserInfo storage)",
          "payDepositFeeLPFromFarm(PoolInfo storage,uint256,FeeStores storage)",
          "payDepositFeeCrssFromXCrss(PoolInfo storage,address,uint256,FeeStores storage)",
          "dailyPatrol(PoolInfo[] storage,uint256,uint256,uint256,FarmFeeParams storage,Nodes storage,uint256)",
          "pullFromUser(PoolInfo storage,address,uint256)",
          "buildStandardPool(address,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:7",
        "version": {
          "withMetadata": "3f1b963c8e6dae509880a04c83a808422a3ce19e5e776f9ed0a1f517522174bc",
          "withoutMetadata": "b28926e1286d0af8310539bbd00df0d42a511eaac9e767ee97842c8a76c16074",
          "linkedWithoutMetadata": "b28926e1286d0af8310539bbd00df0d42a511eaac9e767ee97842c8a76c16074"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address,address,address,address))",
          "setFeeRates(uint8,mapping(enum SessionType => struct FeeRates) storage,(uint32,uint32,uint32,uint32))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "4cdcb8b11330b2bee855acfaef57e6c9bce34605bb76587b700b3ef8c2e484a9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\math\\UQ112x112.sol:9",
        "version": {
          "withMetadata": "26221f29140fd2e0a2831329bddbbf4a6b2471548e02b7f27b92c6a15a956095",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FixedPoint": {
        "src": "contracts\\libraries\\utils\\FixedPoint.sol:8",
        "version": {
          "withMetadata": "9e23647cdaec6a3a495abebb5f6673056a98d4d44244889f75329c6d4b2dc2c8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "b9f008f000decf21bf7f74cdb0c0468cbdd587e44364d63d111479d3cae62a2b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UpgradableOwnable": {
        "src": "contracts\\libraries\\utils\\UpgradableOwnable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradableOwnable",
              "src": "contracts\\libraries\\utils\\UpgradableOwnable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MockToken": {
        "src": "contracts\\mock\\MockToken.sol:7",
        "version": {
          "withMetadata": "a0fdfa02a8e49f6f5ced25b9f839eb40128c344d921281c82b4558ce88e5fced",
          "withoutMetadata": "02849d46f72ee63425f5a50dc0c10d20d7ddfd622b3f427bf4e655740cddd2dd",
          "linkedWithoutMetadata": "02849d46f72ee63425f5a50dc0c10d20d7ddfd622b3f427bf4e655740cddd2dd"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts\\mock\\MockToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MockTransfer": {
        "src": "contracts\\mock\\MockTransfer.sol:9",
        "version": {
          "withMetadata": "a6ff0b881a301a8a2d7e42657492464a0d6bace6f92fa3d0410396d84242e9d7",
          "withoutMetadata": "905ff29c29fea9fbd382ae54f8eb7507d29e5539af630101b893d7ae46f3beb7",
          "linkedWithoutMetadata": "905ff29c29fea9fbd382ae54f8eb7507d29e5539af630101b893d7ae46f3beb7"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "transferTo(address,uint256)",
          "transferFrom(address,address,uint256)",
          "transferCross(address,address,address,uint256,uint256)",
          "()",
          "withdrawVest(address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockTransfer",
            "src": "contracts\\mock\\MockTransfer.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_crssToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ICrssToken)9299",
              "contract": "MockTransfer",
              "src": "contracts\\mock\\MockTransfer.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ICrssToken)9299": {
              "label": "contract ICrssToken",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ChainLinkControl": {
        "src": "contracts\\periphery\\ChainLinkControl.sol:16",
        "version": {
          "withMetadata": "69ea1b6deeb5147e4eeaba08136dfacbdd3c349c1458bbe6548b986cce9420a8",
          "withoutMetadata": "2e63d7bb96ab4a4804fa1ffd02c2a6e18d91002abe9e76842ace4e3e31ef7eb8",
          "linkedWithoutMetadata": "2e63d7bb96ab4a4804fa1ffd02c2a6e18d91002abe9e76842ace4e3e31ef7eb8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "zValuePerRuleOutPercent",
            "src": "contracts\\periphery\\ChainLinkControl.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ruleOutPercent",
            "src": "contracts\\periphery\\ChainLinkControl.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "zValuePerRuleOutPercent",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_int32)dyn_storage",
              "contract": "ChainLinkControl",
              "src": "contracts\\periphery\\ChainLinkControl.sol:22"
            },
            {
              "label": "chainlinkFeeds",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(CLFeed)16482_storage)",
              "contract": "ChainLinkControl",
              "src": "contracts\\periphery\\ChainLinkControl.sol:23"
            },
            {
              "label": "ruleOutPercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ChainLinkControl",
              "src": "contracts\\periphery\\ChainLinkControl.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_int32)dyn_storage": {
              "label": "int32[]",
              "numberOfBytes": "32"
            },
            "t_int32": {
              "label": "int32",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_struct(CLFeed)16482_storage)": {
              "label": "mapping(address => struct CLFeed)",
              "numberOfBytes": "32"
            },
            "t_struct(CLFeed)16482_storage": {
              "label": "struct CLFeed",
              "members": [
                {
                  "label": "deviation",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "heartbeat",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "decimal",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "gap",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "proxy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CrossMaker": {
        "src": "contracts\\periphery\\CrossMaker.sol:24",
        "version": {
          "withMetadata": "1d726676aa4ba71c57a221787ee0aaf9f43322ecb18a33932c9fe9c7f79821f6",
          "withoutMetadata": "1d726676aa4ba71c57a221787ee0aaf9f43322ecb18a33932c9fe9c7f79821f6",
          "linkedWithoutMetadata": "1d726676aa4ba71c57a221787ee0aaf9f43322ecb18a33932c9fe9c7f79821f6"
        },
        "inherit": [
          "LiquidityControl",
          "BaseControl",
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "WireLibrary",
          "CrossLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "setFeeStores((address,address,address,address),address)",
          "setFeeRates(uint8,(uint32,uint32,uint32,uint32),address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 2907,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4448,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8985,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrossMaker",
            "src": "contracts\\periphery\\CrossMaker.sol:45"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\CrossMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\CrossMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\CrossMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\CrossMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\CrossMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\CrossMaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\CrossMaker.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\CrossMaker.sol:38"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "sessionParams",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(SessionParams)25799_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:10"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(ISessionRegistrar)25996",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:11"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(ISessionFees)25962",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "pairStateAtSessionBirth",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)",
              "contract": "BaseControl",
              "src": "contracts\\session\\BaseControl.sol:19"
            },
            {
              "label": "sessionLiquidityChangeLimit",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "LiquidityControl",
              "src": "contracts\\session\\LiquidityControl.sol:11"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(FeeStores)25817_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:27"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:28"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:32"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:33"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:34"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:35"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:36"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "28",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:37"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "29",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)25962": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)25996": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)": {
              "label": "mapping(address => struct BaseControl.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)": {
              "label": "mapping(enum SessionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)25808_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "develop",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "liquidity",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "treasury",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)25817_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "develop",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "liquidity",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "treasury",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(PairStateSessionTagged)24831_storage": {
              "label": "struct BaseControl.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(SessionParams)25799_storage": {
              "label": "struct SessionParams",
              "members": [
                {
                  "label": "sessionType",
                  "type": "t_enum(SessionType)25780",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isOriginAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\CrossTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CrossTaker": {
        "src": "contracts\\periphery\\CrossTaker.sol:26",
        "version": {
          "withMetadata": "b0171d807dbc37ddcbdcab2772ecd7b9adb6924d5bc13f9479a663abe870af97",
          "withoutMetadata": "b0171d807dbc37ddcbdcab2772ecd7b9adb6924d5bc13f9479a663abe870af97",
          "linkedWithoutMetadata": "b0171d807dbc37ddcbdcab2772ecd7b9adb6924d5bc13f9479a663abe870af97"
        },
        "inherit": [
          "ChainLinkControl",
          "PriceControl",
          "BaseControl",
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "ITaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "WireLibrary",
          "CrossLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "setFeeStores((address,address,address,address),address)",
          "setFeeRates(uint8,(uint32,uint32,uint32,uint32),address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])",
          "getReserveOnETHPair(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 30165,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 35710,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 42524,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrossTaker",
            "src": "contracts\\periphery\\CrossTaker.sol:47"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\CrossTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\CrossTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\CrossTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\CrossTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\CrossTaker.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\CrossTaker.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\CrossTaker.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\CrossTaker.sol:40"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "sessionParams",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(SessionParams)25799_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:10"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(ISessionRegistrar)25996",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:11"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(ISessionFees)25962",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "pairStateAtSessionBirth",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)",
              "contract": "BaseControl",
              "src": "contracts\\session\\BaseControl.sol:19"
            },
            {
              "label": "sessionPriceChangeLimit",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "PriceControl",
              "src": "contracts\\session\\PriceControl.sol:8"
            },
            {
              "label": "zValuePerRuleOutPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_int32)dyn_storage",
              "contract": "ChainLinkControl",
              "src": "contracts\\periphery\\ChainLinkControl.sol:22"
            },
            {
              "label": "chainlinkFeeds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_struct(CLFeed)16482_storage)",
              "contract": "ChainLinkControl",
              "src": "contracts\\periphery\\ChainLinkControl.sol:23"
            },
            {
              "label": "ruleOutPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ChainLinkControl",
              "src": "contracts\\periphery\\ChainLinkControl.sol:24"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(FeeStores)25817_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:29"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:30"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:34"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:35"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "28",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:36"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "29",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:37"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "30",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:38"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "31",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:39"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "32",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_int32)dyn_storage": {
              "label": "int32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)25962": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)25996": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_int32": {
              "label": "int32",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_struct(CLFeed)16482_storage)": {
              "label": "mapping(address => struct CLFeed)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)": {
              "label": "mapping(address => struct BaseControl.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)": {
              "label": "mapping(enum SessionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CLFeed)16482_storage": {
              "label": "struct CLFeed",
              "members": [
                {
                  "label": "deviation",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "heartbeat",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "decimal",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "gap",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "proxy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(FeeRates)25808_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "develop",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "liquidity",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "treasury",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)25817_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "develop",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "liquidity",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "treasury",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(PairStateSessionTagged)24831_storage": {
              "label": "struct BaseControl.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(SessionParams)25799_storage": {
              "label": "struct SessionParams",
              "members": [
                {
                  "label": "sessionType",
                  "type": "t_enum(SessionType)25780",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isOriginAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICrossRouter": {
        "src": "contracts\\periphery\\interfaces\\ICrossRouter.sol:6",
        "inherit": [
          "IPancakeRouter02",
          "IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "getReserveOnETHPair(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMaker": {
        "src": "contracts\\periphery\\interfaces\\IMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeStores()",
          "feeRates(uint8)",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter01": {
        "src": "contracts\\periphery\\interfaces\\IPancakeRouter01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter02": {
        "src": "contracts\\periphery\\interfaces\\IPancakeRouter02.sol:6",
        "inherit": [
          "IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITaker": {
        "src": "contracts\\periphery\\interfaces\\ITaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeStores()",
          "feeRates(uint8)",
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])",
          "getReserveOnETHPair(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RCrssToken": {
        "src": "contracts\\repay\\RCrssToken.sol:10",
        "version": {
          "withMetadata": "57925f974bb4eeb27f744ff47a7c08daef1d699ba39172045dbf23fe81ff1cf8",
          "withoutMetadata": "f0a60f0e498ace1f00810b020145dfe6c0ea9f7ef296a11cb9c0fece64bc1319",
          "linkedWithoutMetadata": "f0a60f0e498ace1f00810b020145dfe6c0ea9f7ef296a11cb9c0fece64bc1319"
        },
        "inherit": [
          "Initializable",
          "Ownable",
          "Context",
          "IRCrssToken",
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "changeRepay(address)",
          "victimsLen()",
          "()",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RCrssToken",
            "src": "contracts\\repay\\RCrssToken.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "RCrssToken",
              "src": "contracts\\repay\\RCrssToken.sol:16"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RCrssToken",
              "src": "contracts\\repay\\RCrssToken.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RCrssToken",
              "src": "contracts\\repay\\RCrssToken.sol:18"
            },
            {
              "label": "victims",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "RCrssToken",
              "src": "contracts\\repay\\RCrssToken.sol:114"
            },
            {
              "label": "repay",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RCrssToken",
              "src": "contracts\\repay\\RCrssToken.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RSyrupBar": {
        "src": "contracts\\repay\\RSyrupBar.sol:12",
        "version": {
          "withMetadata": "48db4178d96143873308250722665a2ef98e4718d111f33084c9714de36b282f",
          "withoutMetadata": "a76c5506cf644edd03be527090ca012c732a2f3f51266251004774a2bc7547fc",
          "linkedWithoutMetadata": "a76c5506cf644edd03be527090ca012c732a2f3f51266251004774a2bc7547fc"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "(address payable)",
          "saferCrssTransfer(address,uint256)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)",
          "getCurrentVotes(address)",
          "getPriorVotes(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RSyrupBar",
            "src": "contracts\\repay\\RSyrupBar.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "crss",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(CrssToken)8770",
              "contract": "RSyrupBar",
              "src": "contracts\\repay\\RSyrupBar.sol:25"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_address)",
              "contract": "RSyrupBar",
              "src": "contracts\\repay\\RSyrupBar.sol:49"
            },
            {
              "label": "checkpoints",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)22954_storage))",
              "contract": "RSyrupBar",
              "src": "contracts\\repay\\RSyrupBar.sol:58"
            },
            {
              "label": "numCheckpoints",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint32)",
              "contract": "RSyrupBar",
              "src": "contracts\\repay\\RSyrupBar.sol:61"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RSyrupBar",
              "src": "contracts\\repay\\RSyrupBar.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(CrssToken)8770": {
              "label": "contract CrssToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)22954_storage))": {
              "label": "mapping(address => mapping(uint32 => struct RSyrupBar.Checkpoint))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_struct(Checkpoint)22954_storage)": {
              "label": "mapping(uint32 => struct RSyrupBar.Checkpoint)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)22954_storage": {
              "label": "struct RSyrupBar.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Repay": {
        "src": "contracts\\repay\\Repay.sol:18",
        "version": {
          "withMetadata": "e75e11b4d911941ebdbfcf01212063e36691e6aea8408e74f6efd254823cdb58",
          "withoutMetadata": "baacdbeb07e84a30fd3898f78376d42e1be13fcb140e7d3e22f918ba87b41a6e",
          "linkedWithoutMetadata": "baacdbeb07e84a30fd3898f78376d42e1be13fcb140e7d3e22f918ba87b41a6e"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "(address payable,address,address,uint256,uint256)",
          "updatgeCrssPerBlock(uint256)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "setMigrator(address)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingCake(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "enterStaking(uint256)",
          "leaveStaking(uint256)",
          "emergencyWithdraw(uint256)",
          "setNode(uint8,address,address)",
          "getOwner()",
          "pause()",
          "resume()",
          "setUpRepayPool()",
          "getUserState(address)",
          "harvestRepay(uint256)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8922,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Repay",
            "src": "contracts\\repay\\Repay.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "BONUS_MULTIPLIER",
            "src": "contracts\\repay\\Repay.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalAllocPoint",
            "src": "contracts\\repay\\Repay.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sZeroAddress",
            "src": "contracts\\repay\\Repay.sol:54"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "sessionParams",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(SessionParams)25799_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:10"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(ISessionRegistrar)25996",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:11"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(ISessionFees)25962",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "crss",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(CrssToken)8770",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:36"
            },
            {
              "label": "rCrss",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(RCrssToken)22823",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:37"
            },
            {
              "label": "rSyrup",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(RSyrupBar)23547",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:38"
            },
            {
              "label": "cakePerBlock",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:39"
            },
            {
              "label": "BONUS_MULTIPLIER",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:40"
            },
            {
              "label": "migrator",
              "offset": 0,
              "slot": "21",
              "type": "t_contract(IMigratorChef)9313",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:41"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_array(t_struct(PoolInfoRepay)23588_storage)dyn_storage",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:43"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfoRepay)23578_storage))",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:44"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:45"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:46"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "26",
              "type": "t_bool",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:48"
            },
            {
              "label": "sZeroAddress",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfoRepay)23588_storage)dyn_storage": {
              "label": "struct Repay.PoolInfoRepay[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(CrssToken)8770": {
              "label": "contract CrssToken",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)956": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMigratorChef)9313": {
              "label": "contract IMigratorChef",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)25962": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)25996": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(RCrssToken)22823": {
              "label": "contract RCrssToken",
              "numberOfBytes": "20"
            },
            "t_contract(RSyrupBar)23547": {
              "label": "contract RSyrupBar",
              "numberOfBytes": "20"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(UserInfoRepay)23578_storage)": {
              "label": "mapping(address => struct Repay.UserInfoRepay)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfoRepay)23578_storage))": {
              "label": "mapping(uint256 => mapping(address => struct Repay.UserInfoRepay))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(PoolInfoRepay)23588_storage": {
              "label": "struct Repay.PoolInfoRepay",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IERC20)956",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accCakePerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(SessionParams)25799_storage": {
              "label": "struct SessionParams",
              "members": [
                {
                  "label": "sessionType",
                  "type": "t_enum(SessionType)25780",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isOriginAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UserInfoRepay)23578_storage": {
              "label": "struct Repay.UserInfoRepay",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IRCrssToken": {
        "src": "contracts\\repay\\interfaces\\IRCrssToken.sol:5",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "victims(uint256)",
          "victimsLen()",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseControl": {
        "src": "contracts\\session\\BaseControl.sol:12",
        "version": {
          "withMetadata": "adff4bdb2052708f258f84fcee7d711568bc51f958a2d568c42f7a1cb5ceb985",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "pairStateAtSessionBirth",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)",
              "contract": "BaseControl",
              "src": "contracts\\session\\BaseControl.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)": {
              "label": "mapping(address => struct BaseControl.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_struct(PairStateSessionTagged)24831_storage": {
              "label": "struct BaseControl.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITokenMetadata": {
        "src": "contracts\\session\\BaseControl.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LiquidityControl": {
        "src": "contracts\\session\\LiquidityControl.sol:7",
        "inherit": [
          "BaseControl"
        ],
        "libraries": [],
        "methods": [
          "setLiquidityChangeLimit(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "sessionLiquidityChangeLimit",
            "src": "contracts\\session\\LiquidityControl.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pairStateAtSessionBirth",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)",
              "contract": "BaseControl",
              "src": "contracts\\session\\BaseControl.sol:19"
            },
            {
              "label": "sessionLiquidityChangeLimit",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "LiquidityControl",
              "src": "contracts\\session\\LiquidityControl.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)": {
              "label": "mapping(address => struct BaseControl.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_struct(PairStateSessionTagged)24831_storage": {
              "label": "struct BaseControl.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "informOfPair(address,address,address,address)",
          "setNode(uint8,address,address)",
          "setFeeStores((address,address,address,address),address)",
          "setFeeRates(uint8,(uint32,uint32,uint32,uint32),address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PriceControl": {
        "src": "contracts\\session\\PriceControl.sol:6",
        "inherit": [
          "BaseControl"
        ],
        "libraries": [],
        "methods": [
          "setPriceChangeLimit(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "sessionPriceChangeLimit",
            "src": "contracts\\session\\PriceControl.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pairStateAtSessionBirth",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)",
              "contract": "BaseControl",
              "src": "contracts\\session\\BaseControl.sol:19"
            },
            {
              "label": "sessionPriceChangeLimit",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "PriceControl",
              "src": "contracts\\session\\PriceControl.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)": {
              "label": "mapping(address => struct BaseControl.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_struct(PairStateSessionTagged)24831_storage": {
              "label": "struct BaseControl.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:10",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeCrssLogic(address,uint256,(uint32,uint32,uint32,uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:8",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "sessionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(SessionParams)25799_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:10"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)25996",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:11"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)25962",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)25962": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)25996": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(SessionParams)25799_storage": {
              "label": "struct SessionParams",
              "members": [
                {
                  "label": "sessionType",
                  "type": "t_enum(SessionType)25780",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isOriginAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:7",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "registerSession(uint8)",
          "unregisterSession()",
          "getInnermostSType()",
          "getOutermostSType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:9"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_enum(SessionType)25780,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:10"
            },
            {
              "label": "stackSTypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_enum(SessionType)25780)10_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            }
          ],
          "types": {
            "t_array(t_enum(SessionType)25780)10_storage": {
              "label": "enum SessionType[10]",
              "numberOfBytes": "32"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(SessionType)25780,t_uint256)": {
              "label": "mapping(enum SessionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "informOfPair(address,address,address,address)",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "setFeeStores((address,address,address,address),address)",
          "setFeeRates(uint8,(uint32,uint32,uint32,uint32),address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeCrssLogic(address,uint256,(uint32,uint32,uint32,uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerSession(uint8)",
          "unregisterSession()",
          "getInnermostSType()",
          "getOutermostSType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "72c080ec9a09e58cd02d125ec9563941e90cc010bcd5775b575898f38ce229de",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink\\contracts\\src\\v0.8\\interfaces\\AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:35",
        "version": {
          "withMetadata": "3ce9b6bc4daf77a125163de108ab5808306921235fd6575a23c6d9f7a9ca7e72",
          "withoutMetadata": "a79efac318026e90f06e729fb7ccd6b276100841bd23f5a789b4198d885a005e",
          "linkedWithoutMetadata": "a79efac318026e90f06e729fb7ccd6b276100841bd23f5a789b4198d885a005e"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "4457ccfa5ddf86d35647a07a166bfb0c383ccbac15899576b0414e805552bd6e",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin\\contracts\\utils\\Address.sol:9",
        "version": {
          "withMetadata": "1bdc60fd3114538b9901b0ff93713ab6e7cae0452017982888b5adf0e8b5169f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin\\contracts\\utils\\Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Math": {
        "src": "@openzeppelin\\contracts\\utils\\math\\Math.sol:9",
        "version": {
          "withMetadata": "2d79f61ee77ff046be34f758f6d1c2000879aeb0131fbc29ebc549c2167a59f4",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CrossFactory": {
        "src": "contracts\\core\\CrossFactory.sol:9",
        "version": {
          "withMetadata": "20e7fc67bc55fd26575b901b21268d379fc457fc83e6a69fd0d60556b4f898bb",
          "withoutMetadata": "7e14319808fd05564b067c171729d129d0b32cc2d742c641177d13cd483af642",
          "linkedWithoutMetadata": "7e14319808fd05564b067c171729d129d0b32cc2d742c641177d13cd483af642"
        },
        "inherit": [
          "ICrossFactory",
          "IPancakeFactory",
          "Node",
          "INode"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "getOwner()",
          "setNode(uint8,address,address)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setOwner(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 3445,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrossFactory",
            "src": "contracts\\core\\CrossFactory.sol:18"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CrossFactory",
              "src": "contracts\\core\\CrossFactory.sol:12"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "CrossFactory",
              "src": "contracts\\core\\CrossFactory.sol:13"
            },
            {
              "label": "getPair",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "CrossFactory",
              "src": "contracts\\core\\CrossFactory.sol:15"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "12",
              "type": "t_array(t_address)dyn_storage",
              "contract": "CrossFactory",
              "src": "contracts\\core\\CrossFactory.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CrossPair": {
        "src": "contracts\\core\\CrossPair.sol:15",
        "version": {
          "withMetadata": "ed9f2bf75cf1db7ba6c4dff6186fc72df74674753ed3f693eb75153aa72314ab",
          "withoutMetadata": "7f47d9bb8f27f6558b62900559a5496782e9bdf829e514df1296c2d2e3e21f58",
          "linkedWithoutMetadata": "7f47d9bb8f27f6558b62900559a5496782e9bdf829e514df1296c2d2e3e21f58"
        },
        "inherit": [
          "ICrossPair",
          "IPancakePair"
        ],
        "libraries": [
          "Math",
          "SafeMath",
          "UQ112x112"
        ],
        "methods": [
          "getReserves()",
          "setNodes(address,address,address)",
          "()",
          "tolerableTransfer(address,address,uint256)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrossPair",
            "src": "contracts\\core\\CrossPair.sol:93"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts\\core\\CrossPair.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:23"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:24"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:25"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:27"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:32"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:37"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:38"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:39"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:41"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:42"
            },
            {
              "label": "blockTimestampLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:43"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:45"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:46"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:47"
            },
            {
              "label": "maker",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:49"
            },
            {
              "label": "taker",
              "offset": 0,
              "slot": "13",
              "type": "t_address",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:50"
            },
            {
              "label": "farm",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:51"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "CrossPair",
              "src": "contracts\\core\\CrossPair.sol:53"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICrossCallee": {
        "src": "contracts\\core\\interfaces\\ICrossCallee.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "crossCall(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICrossFactory": {
        "src": "contracts\\core\\interfaces\\ICrossFactory.sol:6",
        "inherit": [
          "IPancakeFactory"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICrossPair": {
        "src": "contracts\\core\\interfaces\\ICrossPair.sol:6",
        "inherit": [
          "IPancakePair"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setNodes(address,address,address)",
          "tolerableTransfer(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeFactory": {
        "src": "contracts\\core\\interfaces\\IPancakeFactory.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "owner()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setOwner(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakePair": {
        "src": "contracts\\core\\interfaces\\IPancakePair.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseRelayRecipient": {
        "src": "contracts\\farm\\BaseRelayRecipient.sol:10",
        "inherit": [
          "IRelayRecipient"
        ],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "trustedForwarder",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BaseRelayRecipient",
              "src": "contracts\\farm\\BaseRelayRecipient.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CrossFarm": {
        "src": "contracts\\farm\\CrossFarm.sol:28",
        "version": {
          "withMetadata": "8bbc1075e03178c2358be7f9b80630eb5ab5daef1e6033e9873d8c07fce17392",
          "withoutMetadata": "2b205ad15ba1bde85cde41fa28cb5b254dff6a8e3d47ea60e812dcc0d994d968",
          "linkedWithoutMetadata": "2b205ad15ba1bde85cde41fa28cb5b254dff6a8e3d47ea60e812dcc0d994d968"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "BaseRelayRecipient",
          "IRelayRecipient",
          "ICrossFarm",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "WireLibrary",
          "FarmLibrary",
          "CrossLibrary"
        ],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)",
          "getOwner()",
          "()",
          "informOfPair(address,address,address,address)",
          "(address,uint256,uint256)",
          "setNode(uint8,address,address)",
          "setFeeStores((address,address,address,address),address)",
          "setFeeRates(uint8,(uint32,uint32,uint32,uint32),address)",
          "setFeeParams(uint256,uint256,address,uint256)",
          "setCrssReferral(address)",
          "setReferralCommissionRate(uint256)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool,uint256)",
          "set(uint256,uint256,bool,uint256)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "changeReferrer(address,address)",
          "dailyPatrol()",
          "getUserState(uint256,address)",
          "getVestList(uint256,address)",
          "getSubPooledCrss(uint256,address)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "withdrawVest(uint256,uint256)",
          "vestAccumulated(uint256)",
          "harvestAccumulated(uint256)",
          "stakeAccumulated(uint256)",
          "emergencyWithdraw(uint256)",
          "massHarvestRewards()",
          "massStakeRewards()",
          "massCompoundRewards()",
          "switchCollectOption(uint256,uint8)",
          "setTrustedForwarder(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 841,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 1094,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 4556,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 5098,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 5827,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 6091,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 6974,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 7268,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 7542,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 7844,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 8305,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 8650,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 9152,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 9508,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 9706,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 10052,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 10971,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 11151,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 11358,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 11949,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 12725,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 12995,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 13247,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 13507,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 13663,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 14065,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 14240,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 14719,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 15367,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 15516,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 15680,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 15910,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 16352,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/FarmLibrary.sol",
            "name": "FarmLibrary",
            "length": 20,
            "start": 16898,
            "placeholder": "__$70a8301df1591ea57daa3a3395102354b6$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4818,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 11566,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 19809,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrossFarm",
            "src": "contracts\\farm\\CrossFarm.sol:122"
          },
          {
            "kind": "external-library-linking",
            "name": "FarmLibrary",
            "src": "contracts/libraries/FarmLibrary.sol"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "trustedForwarder",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "BaseRelayRecipient",
              "src": "contracts\\farm\\BaseRelayRecipient.sol:14"
            },
            {
              "label": "sessionParams",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(SessionParams)25799_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:10"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(ISessionRegistrar)25996",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:11"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(ISessionFees)25962",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:39"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_struct(Pair)25837_storage)",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:68"
            },
            {
              "label": "getPairQuick",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:69"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "19",
              "type": "t_struct(FeeStores)25817_storage",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:71"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:72"
            },
            {
              "label": "crssPerBlock",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:79"
            },
            {
              "label": "bonusMultiplier",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:80"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "26",
              "type": "t_array(t_struct(PoolInfo)9178_storage)dyn_storage",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:82"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)9111_storage))",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:83"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:85"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "29",
              "type": "t_uint256",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:86"
            },
            {
              "label": "lastPatrolDay",
              "offset": 0,
              "slot": "30",
              "type": "t_uint256",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:88"
            },
            {
              "label": "feeParams",
              "offset": 0,
              "slot": "31",
              "type": "t_struct(FarmFeeParams)9193_storage",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:90"
            },
            {
              "label": "migrator",
              "offset": 0,
              "slot": "38",
              "type": "t_contract(IMigratorChef)9313",
              "contract": "CrossFarm",
              "src": "contracts\\farm\\CrossFarm.sol:92"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfo)9178_storage)dyn_storage": {
              "label": "struct PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(VestChunk)9085_storage)dyn_storage": {
              "label": "struct VestChunk[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)956": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMigratorChef)9313": {
              "label": "contract IMigratorChef",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)25962": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)25996": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(CollectOption)9093": {
              "label": "enum CollectOption",
              "members": [
                "OffOff",
                "OnOff",
                "OnOn",
                "OffOn"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)25837_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserInfo)9111_storage)": {
              "label": "mapping(address => struct UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)": {
              "label": "mapping(enum SessionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)9111_storage))": {
              "label": "mapping(uint256 => mapping(address => struct UserInfo))",
              "numberOfBytes": "32"
            },
            "t_struct(FarmFeeParams)9193_storage": {
              "label": "struct FarmFeeParams",
              "members": [
                {
                  "label": "crssReferral",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "treasury",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "referralCommissionRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "maximumReferralCommisionRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "nonVestBurnRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "stakeholders",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "compoundFeeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(FeeRates)25808_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "develop",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "liquidity",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "treasury",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)25817_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "develop",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "liquidity",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "treasury",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Pair)25837_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PoolInfo)9178_storage": {
              "label": "struct PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IERC20)956",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accCrssPerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "depositFeeRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "reward",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "OnOff",
                  "type": "t_struct(Struct_OnOff)9122_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "OnOn",
                  "type": "t_struct(Struct_OnOn)9131_storage",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "OffOn",
                  "type": "t_struct(Struct_OffOn)9140_storage",
                  "offset": 0,
                  "slot": "14"
                },
                {
                  "label": "OffOff",
                  "type": "t_struct(Struct_OffOff)9146_storage",
                  "offset": 0,
                  "slot": "19"
                }
              ],
              "numberOfBytes": "704"
            },
            "t_struct(SessionParams)25799_storage": {
              "label": "struct SessionParams",
              "members": [
                {
                  "label": "sessionType",
                  "type": "t_enum(SessionType)25780",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isOriginAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Struct_OffOff)9146_storage": {
              "label": "struct Struct_OffOff",
              "members": [
                {
                  "label": "sumAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "Accum",
                  "type": "t_struct(SubPool)9116_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Struct_OffOn)9140_storage": {
              "label": "struct Struct_OffOn",
              "members": [
                {
                  "label": "sumAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "Vest",
                  "type": "t_struct(SubPool)9116_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Accum",
                  "type": "t_struct(SubPool)9116_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Struct_OnOff)9122_storage": {
              "label": "struct Struct_OnOff",
              "members": [
                {
                  "label": "sumAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "Comp",
                  "type": "t_struct(SubPool)9116_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Struct_OnOn)9131_storage": {
              "label": "struct Struct_OnOn",
              "members": [
                {
                  "label": "sumAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "Comp",
                  "type": "t_struct(SubPool)9116_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "Vest",
                  "type": "t_struct(SubPool)9116_storage",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(SubPool)9116_storage": {
              "label": "struct SubPool",
              "members": [
                {
                  "label": "bulk",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accPerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserInfo)9111_storage": {
              "label": "struct UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "debt1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "debt2",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "accumulated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "vestList",
                  "type": "t_array(t_struct(VestChunk)9085_storage)dyn_storage",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "collectOption",
                  "type": "t_enum(CollectOption)9093",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(VestChunk)9085_storage": {
              "label": "struct VestChunk",
              "members": [
                {
                  "label": "principal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "withdrawn",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CrssReferral": {
        "src": "contracts\\farm\\CrssReferral.sol:7",
        "version": {
          "withMetadata": "95882e4fd91d0831ffeaa3285c297b64f8f21b15586b5a2c355bc7a9e34116d6",
          "withoutMetadata": "e6579fca67d2e9675e7c9c1ccda499bbd3028dae139d28021fb1f01f317a55ff",
          "linkedWithoutMetadata": "e6579fca67d2e9675e7c9c1ccda499bbd3028dae139d28021fb1f01f317a55ff"
        },
        "inherit": [
          "Ownable",
          "Context",
          "ICrssReferral"
        ],
        "libraries": [],
        "methods": [
          "()",
          "recordReferral(address,address)",
          "recordReferralCommission(address,uint256)",
          "getReferrer(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrssReferral",
            "src": "contracts\\farm\\CrssReferral.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "referrers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "CrssReferral",
              "src": "contracts\\farm\\CrssReferral.sol:8"
            },
            {
              "label": "countReferrals",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CrssReferral",
              "src": "contracts\\farm\\CrssReferral.sol:9"
            },
            {
              "label": "totalReferralCommissions",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CrssReferral",
              "src": "contracts\\farm\\CrssReferral.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CrssToken": {
        "src": "contracts\\farm\\CrssToken.sol:22",
        "version": {
          "withMetadata": "bda8bb9398afbbfe7989f38f79ac5065bfe69f914193341fd45acc7b72cd859f",
          "withoutMetadata": "b611af03f0493ed57d49d753dd3d74975cab7cd32dce2d644675bcd6c2adc893",
          "linkedWithoutMetadata": "b611af03f0493ed57d49d753dd3d74975cab7cd32dce2d644675bcd6c2adc893"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "SessionFees",
          "ISessionFees",
          "SessionRegistrar",
          "ISessionRegistrar",
          "ICrssToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "WireLibrary"
        ],
        "methods": [
          "()",
          "informOfPair(address,address,address,address)",
          "()",
          "getOwner()",
          "setFeeStores((address,address,address,address),address)",
          "setFeeRates(uint8,(uint32,uint32,uint32,uint32),address)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "_decreaseAllowance(address,address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "bury(address,uint256)",
          "transfer(address,uint256)",
          "tolerableTransfer(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "changeMaxTransferAmountRate(uint256)",
          "payFeeCrssLogic(address,uint256,(uint32,uint32,uint32,uint32),bool)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)",
          "getCurrentVotes(address)",
          "getPriorVotes(address,uint256)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 5193,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 7942,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8764,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrssToken",
            "src": "contracts\\farm\\CrssToken.sol:83"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "session",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:9"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_enum(SessionType)25780,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:10"
            },
            {
              "label": "stackSTypes",
              "offset": 0,
              "slot": "12",
              "type": "t_array(t_enum(SessionType)25780)10_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            },
            {
              "label": "sessionParams",
              "offset": 0,
              "slot": "14",
              "type": "t_struct(SessionParams)25799_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:10"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(ISessionRegistrar)25996",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:11"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "19",
              "type": "t_contract(ISessionFees)25962",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "20",
              "type": "t_mapping(t_address,t_struct(Pair)25837_storage)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:26"
            },
            {
              "label": "getPairQuick",
              "offset": 0,
              "slot": "21",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:27"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "22",
              "type": "t_struct(FeeStores)25817_storage",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:29"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "26",
              "type": "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "27",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:36"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "28",
              "type": "t_uint256",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:37"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:38"
            },
            {
              "label": "accTransferAmountSession",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_struct(TransferAmountSession)6341_storage)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:52"
            },
            {
              "label": "maxTransferAmountRate",
              "offset": 0,
              "slot": "31",
              "type": "t_uint256",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:53"
            },
            {
              "label": "maxTransferAmount",
              "offset": 0,
              "slot": "32",
              "type": "t_uint256",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:54"
            },
            {
              "label": "transferUsers",
              "offset": 0,
              "slot": "33",
              "type": "t_array(t_address)dyn_storage",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:55"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "34",
              "type": "t_mapping(t_address,t_address)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:58"
            },
            {
              "label": "checkpoints",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)6363_storage))",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:63"
            },
            {
              "label": "numCheckpoints",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_address,t_uint32)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:64"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "37",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CrssToken",
              "src": "contracts\\farm\\CrssToken.sol:69"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_enum(SessionType)25780)10_storage": {
              "label": "enum SessionType[10]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)25962": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)25996": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)6363_storage))": {
              "label": "mapping(address => mapping(uint32 => struct CrssToken.Checkpoint))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Pair)25837_storage)": {
              "label": "mapping(address => struct Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(TransferAmountSession)6341_storage)": {
              "label": "mapping(address => struct CrssToken.TransferAmountSession)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)": {
              "label": "mapping(enum SessionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(SessionType)25780,t_uint256)": {
              "label": "mapping(enum SessionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_struct(Checkpoint)6363_storage)": {
              "label": "mapping(uint32 => struct CrssToken.Checkpoint)",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)6363_storage": {
              "label": "struct CrssToken.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(FeeRates)25808_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "develop",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "liquidity",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "treasury",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)25817_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "develop",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "liquidity",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "treasury",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Pair)25837_storage": {
              "label": "struct Pair",
              "members": [
                {
                  "label": "token0",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(SessionParams)25799_storage": {
              "label": "struct SessionParams",
              "members": [
                {
                  "label": "sessionType",
                  "type": "t_enum(SessionType)25780",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isOriginAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(TransferAmountSession)6341_storage": {
              "label": "struct CrssToken.TransferAmountSession",
              "members": [
                {
                  "label": "sent",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "received",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICrossFarm": {
        "src": "contracts\\farm\\interfaces\\ICrossFarm.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeStores()",
          "feeRates(uint8)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "add(uint256,address,bool,uint256)",
          "set(uint256,uint256,bool,uint256)",
          "getMultiplier(uint256,uint256)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "changeReferrer(address,address)",
          "switchCollectOption(uint256,uint8)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "withdrawVest(uint256,uint256)",
          "vestAccumulated(uint256)",
          "harvestAccumulated(uint256)",
          "stakeAccumulated(uint256)",
          "massHarvestRewards()",
          "massStakeRewards()",
          "massCompoundRewards()",
          "emergencyWithdraw(uint256)",
          "setCrssReferral(address)",
          "setReferralCommissionRate(uint256)",
          "dailyPatrol()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICrssReferral": {
        "src": "contracts\\farm\\interfaces\\ICrssReferral.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "recordReferral(address,address)",
          "recordReferralCommission(address,uint256)",
          "getReferrer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ICrssToken": {
        "src": "contracts\\farm\\interfaces\\ICrssToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "maxSupply()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "bury(address,uint256)",
          "maxTransferAmountRate()",
          "changeMaxTransferAmountRate(uint256)",
          "tolerableTransfer(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMigratorChef": {
        "src": "contracts\\farm\\interfaces\\IMigratorChef.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "migrate(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IRelayRecipient": {
        "src": "contracts\\farm\\interfaces\\IRelayRecipient.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTrustedForwarder(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IXCrssToken": {
        "src": "contracts\\farm\\interfaces\\IXCrssToken.sol:6",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "getOwner()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "safeCakeTransfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "xCrssToken": {
        "src": "contracts\\farm\\xCrssToken.sol:13",
        "version": {
          "withMetadata": "d0d5474951fafe34f3eca6f2878e8751aa9336335c9eb9b573024b90b432df06",
          "withoutMetadata": "a9d86eb15ff9741466f6ad4381b9503c07f2f8bd780e9d10a1f3ad11ba2573dc",
          "linkedWithoutMetadata": "a9d86eb15ff9741466f6ad4381b9503c07f2f8bd780e9d10a1f3ad11ba2573dc"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IXCrssToken",
          "IERC20",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "safeCakeTransfer(address,uint256)",
          "getOwner()",
          "(string,string)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)",
          "getCurrentVotes(address)",
          "getPriorVotes(address,uint256)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 3845,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "xCrssToken",
            "src": "contracts\\farm\\xCrssToken.sol:45"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "13",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "14",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_address,t_address)",
              "contract": "xCrssToken",
              "src": "contracts\\farm\\xCrssToken.sol:57"
            },
            {
              "label": "checkpoints",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)9541_storage))",
              "contract": "xCrssToken",
              "src": "contracts\\farm\\xCrssToken.sol:66"
            },
            {
              "label": "numCheckpoints",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_address,t_uint32)",
              "contract": "xCrssToken",
              "src": "contracts\\farm\\xCrssToken.sol:69"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "xCrssToken",
              "src": "contracts\\farm\\xCrssToken.sol:80"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)9541_storage))": {
              "label": "mapping(address => mapping(uint32 => struct xCrssToken.Checkpoint))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_struct(Checkpoint)9541_storage)": {
              "label": "mapping(uint32 => struct xCrssToken.Checkpoint)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)9541_storage": {
              "label": "struct xCrssToken.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CrossLibrary": {
        "src": "contracts\\libraries\\CrossLibrary.sol:11",
        "version": {
          "withMetadata": "cb7775b648e3a5f8ebc229f381afcf2728645c08a8bdb9f1621758e9f5a9cf61",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "TransferHelper"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CrossOracleLibrary": {
        "src": "contracts\\libraries\\CrossOracleLibrary.sol:8",
        "version": {
          "withMetadata": "3869a96dfd28a6292cbba0a6dc0fb8cb152c91dbedf0272ee1cd6bb4cb367512",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "FixedPoint"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FarmLibrary": {
        "src": "contracts\\libraries\\FarmLibrary.sol:25",
        "version": {
          "withMetadata": "b933e2b129111dd70298eb0821247ff978c2195736b37d8aac90bd756861fd11",
          "withoutMetadata": "48cbc6d8b4eb32b03bb7fc9ea4ecfcb0fd7aa5ea5dd7681c0e6682cd5d60b93e",
          "linkedWithoutMetadata": "48cbc6d8b4eb32b03bb7fc9ea4ecfcb0fd7aa5ea5dd7681c0e6682cd5d60b93e"
        },
        "inherit": [],
        "libraries": [
          "SafeMath",
          "SafeERC20",
          "TransferHelper",
          "console"
        ],
        "methods": [
          "changeLpTokensToCrssInFarm(address,address,address,address,uint256)",
          "changeCrssInXTokenToLpInFarm(address,Nodes storage,uint256,address)",
          "swapExactTokenForToken(address,address,address,address,uint256)",
          "getTotalVestPrincipals(VestChunk[] storage)",
          "getTotalMatureVestPieces(VestChunk[] storage,uint256)",
          "tolerableCrssTransferFromXTokenAccount(address,address,uint256)",
          "takePendingCollectively(PoolInfo storage,FarmFeeParams storage,Nodes storage)",
          "checkConsistency(PoolInfo storage,string)",
          "payCompoundFee(address,FarmFeeParams storage,uint256,Nodes storage)",
          "pyaReferralComission(PoolInfo storage,UserInfo storage,address,FarmFeeParams storage,Nodes storage)",
          "takeIndividualReward(PoolInfo storage,UserInfo storage)",
          "startRewardCycle(PoolInfo storage,UserInfo storage,uint256,FarmFeeParams storage,bool)",
          "getRewardPayroll(PoolInfo storage,UserInfo storage)",
          "migratePool(PoolInfo storage,address)",
          "switchCollectOption(PoolInfo storage,UserInfo storage,uint8,address,FarmFeeParams storage,Nodes storage,uint256,uint256,uint256)",
          "collectAccumulated(address,PoolInfo[] storage,mapping(uint256 => mapping(address => struct UserInfo)) storage,FarmFeeParams storage,Nodes storage,uint256,uint256,uint256)",
          "massCompoundRewards(address,PoolInfo[] storage,mapping(uint256 => mapping(address => struct UserInfo)) storage,Nodes storage,FarmFeeParams storage)",
          "setPool(PoolInfo[] storage,uint256,uint256,uint256)",
          "addPool(uint256,address,uint256,uint256,PoolInfo[] storage)",
          "getMultiplier(uint256,uint256,uint256)",
          "updatePool(PoolInfo storage,uint256,uint256,uint256,Nodes storage)",
          "pendingCrss(PoolInfo storage,UserInfo storage,uint256,uint256,uint256)",
          "finishRewardCycle(PoolInfo storage,UserInfo storage,address,FarmFeeParams storage,Nodes storage,uint256,uint256,uint256)",
          "getUserState(address,uint256,PoolInfo[] storage,mapping(uint256 => mapping(address => struct UserInfo)) storage,Nodes storage,uint256,uint256,uint256,uint256)",
          "getSubPooledCrss(PoolInfo storage,UserInfo storage)",
          "payDepositFeeLPFromFarm(PoolInfo storage,uint256,FeeStores storage)",
          "payDepositFeeCrssFromXCrss(PoolInfo storage,address,uint256,FeeStores storage)",
          "dailyPatrol(PoolInfo[] storage,uint256,uint256,uint256,FarmFeeParams storage,Nodes storage,uint256)",
          "pullFromUser(PoolInfo storage,address,uint256)",
          "buildStandardPool(address,uint256,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "WireLibrary": {
        "src": "contracts\\libraries\\WireLibrary.sol:7",
        "version": {
          "withMetadata": "3f1b963c8e6dae509880a04c83a808422a3ce19e5e776f9ed0a1f517522174bc",
          "withoutMetadata": "b28926e1286d0af8310539bbd00df0d42a511eaac9e767ee97842c8a76c16074",
          "linkedWithoutMetadata": "b28926e1286d0af8310539bbd00df0d42a511eaac9e767ee97842c8a76c16074"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setNode(uint8,address,Nodes storage)",
          "isWiredCall(Nodes storage)",
          "setFeeStores(FeeStores storage,(address,address,address,address))",
          "setFeeRates(uint8,mapping(enum SessionType => struct FeeRates) storage,(uint32,uint32,uint32,uint32))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMath": {
        "src": "contracts\\libraries\\math\\SafeMath.sol:18",
        "version": {
          "withMetadata": "4cdcb8b11330b2bee855acfaef57e6c9bce34605bb76587b700b3ef8c2e484a9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UQ112x112": {
        "src": "contracts\\libraries\\math\\UQ112x112.sol:9",
        "version": {
          "withMetadata": "26221f29140fd2e0a2831329bddbbf4a6b2471548e02b7f27b92c6a15a956095",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "FixedPoint": {
        "src": "contracts\\libraries\\utils\\FixedPoint.sol:8",
        "version": {
          "withMetadata": "9e23647cdaec6a3a495abebb5f6673056a98d4d44244889f75329c6d4b2dc2c8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TransferHelper": {
        "src": "contracts\\libraries\\utils\\TransferHelper.sol:6",
        "version": {
          "withMetadata": "b9f008f000decf21bf7f74cdb0c0468cbdd587e44364d63d111479d3cae62a2b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "UpgradableOwnable": {
        "src": "contracts\\libraries\\utils\\UpgradableOwnable.sol:20",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UpgradableOwnable",
              "src": "contracts\\libraries\\utils\\UpgradableOwnable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MockToken": {
        "src": "contracts\\mock\\MockToken.sol:7",
        "version": {
          "withMetadata": "a0fdfa02a8e49f6f5ced25b9f839eb40128c344d921281c82b4558ce88e5fced",
          "withoutMetadata": "02849d46f72ee63425f5a50dc0c10d20d7ddfd622b3f427bf4e655740cddd2dd",
          "linkedWithoutMetadata": "02849d46f72ee63425f5a50dc0c10d20d7ddfd622b3f427bf4e655740cddd2dd"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockToken",
            "src": "contracts\\mock\\MockToken.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MockTransfer": {
        "src": "contracts\\mock\\MockTransfer.sol:9",
        "version": {
          "withMetadata": "a6ff0b881a301a8a2d7e42657492464a0d6bace6f92fa3d0410396d84242e9d7",
          "withoutMetadata": "905ff29c29fea9fbd382ae54f8eb7507d29e5539af630101b893d7ae46f3beb7",
          "linkedWithoutMetadata": "905ff29c29fea9fbd382ae54f8eb7507d29e5539af630101b893d7ae46f3beb7"
        },
        "inherit": [
          "Ownable",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "()",
          "transferTo(address,uint256)",
          "transferFrom(address,address,uint256)",
          "transferCross(address,address,address,uint256,uint256)",
          "()",
          "withdrawVest(address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockTransfer",
            "src": "contracts\\mock\\MockTransfer.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_crssToken",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ICrssToken)9299",
              "contract": "MockTransfer",
              "src": "contracts\\mock\\MockTransfer.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(ICrssToken)9299": {
              "label": "contract ICrssToken",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ChainLinkControl": {
        "src": "contracts\\periphery\\ChainLinkControl.sol:16",
        "version": {
          "withMetadata": "69ea1b6deeb5147e4eeaba08136dfacbdd3c349c1458bbe6548b986cce9420a8",
          "withoutMetadata": "2e63d7bb96ab4a4804fa1ffd02c2a6e18d91002abe9e76842ace4e3e31ef7eb8",
          "linkedWithoutMetadata": "2e63d7bb96ab4a4804fa1ffd02c2a6e18d91002abe9e76842ace4e3e31ef7eb8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "zValuePerRuleOutPercent",
            "src": "contracts\\periphery\\ChainLinkControl.sol:22"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ruleOutPercent",
            "src": "contracts\\periphery\\ChainLinkControl.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "zValuePerRuleOutPercent",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_int32)dyn_storage",
              "contract": "ChainLinkControl",
              "src": "contracts\\periphery\\ChainLinkControl.sol:22"
            },
            {
              "label": "chainlinkFeeds",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(CLFeed)16482_storage)",
              "contract": "ChainLinkControl",
              "src": "contracts\\periphery\\ChainLinkControl.sol:23"
            },
            {
              "label": "ruleOutPercent",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ChainLinkControl",
              "src": "contracts\\periphery\\ChainLinkControl.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_int32)dyn_storage": {
              "label": "int32[]",
              "numberOfBytes": "32"
            },
            "t_int32": {
              "label": "int32",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_struct(CLFeed)16482_storage)": {
              "label": "mapping(address => struct CLFeed)",
              "numberOfBytes": "32"
            },
            "t_struct(CLFeed)16482_storage": {
              "label": "struct CLFeed",
              "members": [
                {
                  "label": "deviation",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "heartbeat",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "decimal",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "gap",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "proxy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "CrossMaker": {
        "src": "contracts\\periphery\\CrossMaker.sol:24",
        "version": {
          "withMetadata": "95deacb5c70d559a9f6dd612cc083eb88debed50e1e52bb64ecb07f415b85262",
          "withoutMetadata": "95deacb5c70d559a9f6dd612cc083eb88debed50e1e52bb64ecb07f415b85262",
          "linkedWithoutMetadata": "95deacb5c70d559a9f6dd612cc083eb88debed50e1e52bb64ecb07f415b85262"
        },
        "inherit": [
          "LiquidityControl",
          "BaseControl",
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "IMaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "WireLibrary",
          "CrossLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "setFeeStores((address,address,address,address),address)",
          "setFeeRates(uint8,(uint32,uint32,uint32,uint32),address)",
          "getReserveOnETHPair(address)",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "quote(uint256,uint256,uint256)",
          "getPair(address,address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 2907,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 4448,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8985,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrossMaker",
            "src": "contracts\\periphery\\CrossMaker.sol:45"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\CrossMaker.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\CrossMaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\CrossMaker.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\CrossMaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\CrossMaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\CrossMaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\CrossMaker.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\CrossMaker.sol:38"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "sessionParams",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(SessionParams)25799_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:10"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(ISessionRegistrar)25996",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:11"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(ISessionFees)25962",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "pairStateAtSessionBirth",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)",
              "contract": "BaseControl",
              "src": "contracts\\session\\BaseControl.sol:19"
            },
            {
              "label": "sessionLiquidityChangeLimit",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "LiquidityControl",
              "src": "contracts\\session\\LiquidityControl.sol:11"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "18",
              "type": "t_struct(FeeStores)25817_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:27"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "22",
              "type": "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:28"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "23",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:32"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "24",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:33"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "25",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:34"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:35"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:36"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "28",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:37"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "29",
              "type": "t_string_storage",
              "contract": "CrossMaker",
              "src": "contracts\\periphery\\CrossMaker.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)25962": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)25996": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)": {
              "label": "mapping(address => struct BaseControl.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)": {
              "label": "mapping(enum SessionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(FeeRates)25808_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "develop",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "liquidity",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "treasury",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)25817_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "develop",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "liquidity",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "treasury",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(PairStateSessionTagged)24831_storage": {
              "label": "struct BaseControl.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(SessionParams)25799_storage": {
              "label": "struct SessionParams",
              "members": [
                {
                  "label": "sessionType",
                  "type": "t_enum(SessionType)25780",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isOriginAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBalanceLedger": {
        "src": "contracts\\periphery\\CrossTaker.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "CrossTaker": {
        "src": "contracts\\periphery\\CrossTaker.sol:26",
        "version": {
          "withMetadata": "8fa5c1dfa7cdd52a5b2b292ccb8384a8abf5fade0e1b92ba33cd17f363be35e4",
          "withoutMetadata": "8fa5c1dfa7cdd52a5b2b292ccb8384a8abf5fade0e1b92ba33cd17f363be35e4",
          "linkedWithoutMetadata": "8fa5c1dfa7cdd52a5b2b292ccb8384a8abf5fade0e1b92ba33cd17f363be35e4"
        },
        "inherit": [
          "ChainLinkControl",
          "PriceControl",
          "BaseControl",
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "ITaker",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "WireLibrary",
          "CrossLibrary",
          "TransferHelper"
        ],
        "methods": [
          "(address)",
          "()",
          "getOwner()",
          "setNode(uint8,address,address)",
          "setFeeStores((address,address,address,address),address)",
          "setFeeRates(uint8,(uint32,uint32,uint32,uint32),address)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])",
          "getReserveOnETHPair(address)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 30165,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 35710,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          },
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 42524,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CrossTaker",
            "src": "contracts\\periphery\\CrossTaker.sol:47"
          },
          {
            "kind": "state-variable-immutable",
            "name": "WETH",
            "src": "contracts\\periphery\\CrossTaker.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sForbidden",
            "src": "contracts\\periphery\\CrossTaker.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInvalidPath",
            "src": "contracts\\periphery\\CrossTaker.sol:35"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientOutput",
            "src": "contracts\\periphery\\CrossTaker.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientA",
            "src": "contracts\\periphery\\CrossTaker.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sInsufficientB",
            "src": "contracts\\periphery\\CrossTaker.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExcessiveInput",
            "src": "contracts\\periphery\\CrossTaker.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sExpired",
            "src": "contracts\\periphery\\CrossTaker.sol:40"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "sessionParams",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(SessionParams)25799_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:10"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(ISessionRegistrar)25996",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:11"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(ISessionFees)25962",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "pairStateAtSessionBirth",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)",
              "contract": "BaseControl",
              "src": "contracts\\session\\BaseControl.sol:19"
            },
            {
              "label": "sessionPriceChangeLimit",
              "offset": 0,
              "slot": "17",
              "type": "t_uint256",
              "contract": "PriceControl",
              "src": "contracts\\session\\PriceControl.sol:8"
            },
            {
              "label": "zValuePerRuleOutPercent",
              "offset": 0,
              "slot": "18",
              "type": "t_array(t_int32)dyn_storage",
              "contract": "ChainLinkControl",
              "src": "contracts\\periphery\\ChainLinkControl.sol:22"
            },
            {
              "label": "chainlinkFeeds",
              "offset": 0,
              "slot": "19",
              "type": "t_mapping(t_address,t_struct(CLFeed)16482_storage)",
              "contract": "ChainLinkControl",
              "src": "contracts\\periphery\\ChainLinkControl.sol:23"
            },
            {
              "label": "ruleOutPercent",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "ChainLinkControl",
              "src": "contracts\\periphery\\ChainLinkControl.sol:24"
            },
            {
              "label": "feeStores",
              "offset": 0,
              "slot": "21",
              "type": "t_struct(FeeStores)25817_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:29"
            },
            {
              "label": "feeRates",
              "offset": 0,
              "slot": "25",
              "type": "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:30"
            },
            {
              "label": "sForbidden",
              "offset": 0,
              "slot": "26",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:34"
            },
            {
              "label": "sInvalidPath",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:35"
            },
            {
              "label": "sInsufficientOutput",
              "offset": 0,
              "slot": "28",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:36"
            },
            {
              "label": "sInsufficientA",
              "offset": 0,
              "slot": "29",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:37"
            },
            {
              "label": "sInsufficientB",
              "offset": 0,
              "slot": "30",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:38"
            },
            {
              "label": "sExcessiveInput",
              "offset": 0,
              "slot": "31",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:39"
            },
            {
              "label": "sExpired",
              "offset": 0,
              "slot": "32",
              "type": "t_string_storage",
              "contract": "CrossTaker",
              "src": "contracts\\periphery\\CrossTaker.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_int32)dyn_storage": {
              "label": "int32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)25962": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)25996": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_int32": {
              "label": "int32",
              "numberOfBytes": "4"
            },
            "t_mapping(t_address,t_struct(CLFeed)16482_storage)": {
              "label": "mapping(address => struct CLFeed)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)": {
              "label": "mapping(address => struct BaseControl.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(SessionType)25780,t_struct(FeeRates)25808_storage)": {
              "label": "mapping(enum SessionType => struct FeeRates)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(CLFeed)16482_storage": {
              "label": "struct CLFeed",
              "members": [
                {
                  "label": "deviation",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "heartbeat",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "decimal",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "gap",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "proxy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(FeeRates)25808_storage": {
              "label": "struct FeeRates",
              "members": [
                {
                  "label": "develop",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "liquidity",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "treasury",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(FeeStores)25817_storage": {
              "label": "struct FeeStores",
              "members": [
                {
                  "label": "develop",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "buyback",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "liquidity",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "treasury",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(PairStateSessionTagged)24831_storage": {
              "label": "struct BaseControl.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(SessionParams)25799_storage": {
              "label": "struct SessionParams",
              "members": [
                {
                  "label": "sessionType",
                  "type": "t_enum(SessionType)25780",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isOriginAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ICrossRouter": {
        "src": "contracts\\periphery\\interfaces\\ICrossRouter.sol:6",
        "inherit": [
          "IPancakeRouter02",
          "IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "getReserveOnETHPair(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IMaker": {
        "src": "contracts\\periphery\\interfaces\\IMaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeStores()",
          "feeRates(uint8)",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "quote(uint256,uint256,uint256)",
          "getReserveOnETHPair(address)",
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter01": {
        "src": "contracts\\periphery\\interfaces\\IPancakeRouter01.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IPancakeRouter02": {
        "src": "contracts\\periphery\\interfaces\\IPancakeRouter02.sol:6",
        "inherit": [
          "IPancakeRouter01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ITaker": {
        "src": "contracts\\periphery\\interfaces\\ITaker.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeStores()",
          "feeRates(uint8)",
          "WETH()",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])",
          "getReserveOnETHPair(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IWETH": {
        "src": "contracts\\periphery\\interfaces\\IWETH.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "RCrssToken": {
        "src": "contracts\\repay\\RCrssToken.sol:10",
        "version": {
          "withMetadata": "57925f974bb4eeb27f744ff47a7c08daef1d699ba39172045dbf23fe81ff1cf8",
          "withoutMetadata": "f0a60f0e498ace1f00810b020145dfe6c0ea9f7ef296a11cb9c0fece64bc1319",
          "linkedWithoutMetadata": "f0a60f0e498ace1f00810b020145dfe6c0ea9f7ef296a11cb9c0fece64bc1319"
        },
        "inherit": [
          "Initializable",
          "Ownable",
          "Context",
          "IRCrssToken",
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "changeRepay(address)",
          "victimsLen()",
          "()",
          "initialize()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RCrssToken",
            "src": "contracts\\repay\\RCrssToken.sol:140"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "_initialized",
              "offset": 20,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin\\contracts\\proxy\\utils\\Initializable.sol:67"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "RCrssToken",
              "src": "contracts\\repay\\RCrssToken.sol:16"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "RCrssToken",
              "src": "contracts\\repay\\RCrssToken.sol:17"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RCrssToken",
              "src": "contracts\\repay\\RCrssToken.sol:18"
            },
            {
              "label": "victims",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "RCrssToken",
              "src": "contracts\\repay\\RCrssToken.sol:114"
            },
            {
              "label": "repay",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "RCrssToken",
              "src": "contracts\\repay\\RCrssToken.sol:118"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "RSyrupBar": {
        "src": "contracts\\repay\\RSyrupBar.sol:12",
        "version": {
          "withMetadata": "48db4178d96143873308250722665a2ef98e4718d111f33084c9714de36b282f",
          "withoutMetadata": "a76c5506cf644edd03be527090ca012c732a2f3f51266251004774a2bc7547fc",
          "linkedWithoutMetadata": "a76c5506cf644edd03be527090ca012c732a2f3f51266251004774a2bc7547fc"
        },
        "inherit": [
          "Ownable",
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(address,uint256)",
          "(address payable)",
          "saferCrssTransfer(address,uint256)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)",
          "getCurrentVotes(address)",
          "getPriorVotes(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RSyrupBar",
            "src": "contracts\\repay\\RSyrupBar.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:43"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "crss",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(CrssToken)8770",
              "contract": "RSyrupBar",
              "src": "contracts\\repay\\RSyrupBar.sol:25"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_address)",
              "contract": "RSyrupBar",
              "src": "contracts\\repay\\RSyrupBar.sol:49"
            },
            {
              "label": "checkpoints",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)22954_storage))",
              "contract": "RSyrupBar",
              "src": "contracts\\repay\\RSyrupBar.sol:58"
            },
            {
              "label": "numCheckpoints",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint32)",
              "contract": "RSyrupBar",
              "src": "contracts\\repay\\RSyrupBar.sol:61"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "RSyrupBar",
              "src": "contracts\\repay\\RSyrupBar.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(CrssToken)8770": {
              "label": "contract CrssToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)22954_storage))": {
              "label": "mapping(address => mapping(uint32 => struct RSyrupBar.Checkpoint))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_struct(Checkpoint)22954_storage)": {
              "label": "mapping(uint32 => struct RSyrupBar.Checkpoint)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Checkpoint)22954_storage": {
              "label": "struct RSyrupBar.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Repay": {
        "src": "contracts\\repay\\Repay.sol:18",
        "version": {
          "withMetadata": "e75e11b4d911941ebdbfcf01212063e36691e6aea8408e74f6efd254823cdb58",
          "withoutMetadata": "baacdbeb07e84a30fd3898f78376d42e1be13fcb140e7d3e22f918ba87b41a6e",
          "linkedWithoutMetadata": "baacdbeb07e84a30fd3898f78376d42e1be13fcb140e7d3e22f918ba87b41a6e"
        },
        "inherit": [
          "SessionManager",
          "ISessionManager",
          "Ownable",
          "Context",
          "Node",
          "INode"
        ],
        "libraries": [
          "SafeMath",
          "SafeERC20"
        ],
        "methods": [
          "(address payable,address,address,uint256,uint256)",
          "updatgeCrssPerBlock(uint256)",
          "updateMultiplier(uint256)",
          "poolLength()",
          "setMigrator(address)",
          "migrate(uint256)",
          "getMultiplier(uint256,uint256)",
          "pendingCake(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "enterStaking(uint256)",
          "leaveStaking(uint256)",
          "emergencyWithdraw(uint256)",
          "setNode(uint8,address,address)",
          "getOwner()",
          "pause()",
          "resume()",
          "setUpRepayPool()",
          "getUserState(address)",
          "harvestRepay(uint256)"
        ],
        "linkReferences": [
          {
            "src": "contracts/libraries/WireLibrary.sol",
            "name": "WireLibrary",
            "length": 20,
            "start": 8922,
            "placeholder": "__$88bebae22a3ad6e62b56c303176513ecf8$__"
          }
        ],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Repay",
            "src": "contracts\\repay\\Repay.sol:56"
          },
          {
            "kind": "state-variable-assignment",
            "name": "BONUS_MULTIPLIER",
            "src": "contracts\\repay\\Repay.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "totalAllocPoint",
            "src": "contracts\\repay\\Repay.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "sZeroAddress",
            "src": "contracts\\repay\\Repay.sol:54"
          },
          {
            "kind": "external-library-linking",
            "name": "WireLibrary",
            "src": "contracts/libraries/WireLibrary.sol"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "sessionParams",
              "offset": 0,
              "slot": "10",
              "type": "t_struct(SessionParams)25799_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:10"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(ISessionRegistrar)25996",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:11"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(ISessionFees)25962",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            },
            {
              "label": "crss",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(CrssToken)8770",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:36"
            },
            {
              "label": "rCrss",
              "offset": 0,
              "slot": "17",
              "type": "t_contract(RCrssToken)22823",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:37"
            },
            {
              "label": "rSyrup",
              "offset": 0,
              "slot": "18",
              "type": "t_contract(RSyrupBar)23547",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:38"
            },
            {
              "label": "cakePerBlock",
              "offset": 0,
              "slot": "19",
              "type": "t_uint256",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:39"
            },
            {
              "label": "BONUS_MULTIPLIER",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:40"
            },
            {
              "label": "migrator",
              "offset": 0,
              "slot": "21",
              "type": "t_contract(IMigratorChef)9313",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:41"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "22",
              "type": "t_array(t_struct(PoolInfoRepay)23588_storage)dyn_storage",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:43"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "23",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfoRepay)23578_storage))",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:44"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:45"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:46"
            },
            {
              "label": "paused",
              "offset": 0,
              "slot": "26",
              "type": "t_bool",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:48"
            },
            {
              "label": "sZeroAddress",
              "offset": 0,
              "slot": "27",
              "type": "t_string_storage",
              "contract": "Repay",
              "src": "contracts\\repay\\Repay.sol:54"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PoolInfoRepay)23588_storage)dyn_storage": {
              "label": "struct Repay.PoolInfoRepay[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(CrssToken)8770": {
              "label": "contract CrssToken",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)956": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMigratorChef)9313": {
              "label": "contract IMigratorChef",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionFees)25962": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)25996": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_contract(RCrssToken)22823": {
              "label": "contract RCrssToken",
              "numberOfBytes": "20"
            },
            "t_contract(RSyrupBar)23547": {
              "label": "contract RSyrupBar",
              "numberOfBytes": "20"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(UserInfoRepay)23578_storage)": {
              "label": "mapping(address => struct Repay.UserInfoRepay)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfoRepay)23578_storage))": {
              "label": "mapping(uint256 => mapping(address => struct Repay.UserInfoRepay))",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(PoolInfoRepay)23588_storage": {
              "label": "struct Repay.PoolInfoRepay",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IERC20)956",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accCakePerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(SessionParams)25799_storage": {
              "label": "struct SessionParams",
              "members": [
                {
                  "label": "sessionType",
                  "type": "t_enum(SessionType)25780",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isOriginAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(UserInfoRepay)23578_storage": {
              "label": "struct Repay.UserInfoRepay",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IRCrssToken": {
        "src": "contracts\\repay\\interfaces\\IRCrssToken.sol:5",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "victims(uint256)",
          "victimsLen()",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "BaseControl": {
        "src": "contracts\\session\\BaseControl.sol:12",
        "version": {
          "withMetadata": "adff4bdb2052708f258f84fcee7d711568bc51f958a2d568c42f7a1cb5ceb985",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "pairStateAtSessionBirth",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)",
              "contract": "BaseControl",
              "src": "contracts\\session\\BaseControl.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)": {
              "label": "mapping(address => struct BaseControl.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_struct(PairStateSessionTagged)24831_storage": {
              "label": "struct BaseControl.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ITokenMetadata": {
        "src": "contracts\\session\\BaseControl.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "LiquidityControl": {
        "src": "contracts\\session\\LiquidityControl.sol:7",
        "inherit": [
          "BaseControl"
        ],
        "libraries": [],
        "methods": [
          "setLiquidityChangeLimit(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "sessionLiquidityChangeLimit",
            "src": "contracts\\session\\LiquidityControl.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pairStateAtSessionBirth",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)",
              "contract": "BaseControl",
              "src": "contracts\\session\\BaseControl.sol:19"
            },
            {
              "label": "sessionLiquidityChangeLimit",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "LiquidityControl",
              "src": "contracts\\session\\LiquidityControl.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)": {
              "label": "mapping(address => struct BaseControl.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_struct(PairStateSessionTagged)24831_storage": {
              "label": "struct BaseControl.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Node": {
        "src": "contracts\\session\\Node.sol:9",
        "inherit": [
          "INode"
        ],
        "libraries": [
          "WireLibrary"
        ],
        "methods": [
          "getOwner()",
          "wire(address,address)",
          "informOfPair(address,address,address,address)",
          "setNode(uint8,address,address)",
          "setFeeStores((address,address,address,address),address)",
          "setFeeRates(uint8,(uint32,uint32,uint32,uint32),address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "prevNode",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:10"
            },
            {
              "label": "nextNode",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:11"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "2",
              "type": "t_struct(Nodes)25866_storage",
              "contract": "Node",
              "src": "contracts\\session\\Node.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_struct(Nodes)25866_storage": {
              "label": "struct Nodes",
              "members": [
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "maker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "taker",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "farm",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "repay",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "factory",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "xToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "PriceControl": {
        "src": "contracts\\session\\PriceControl.sol:6",
        "inherit": [
          "BaseControl"
        ],
        "libraries": [],
        "methods": [
          "setPriceChangeLimit(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "sessionPriceChangeLimit",
            "src": "contracts\\session\\PriceControl.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pairStateAtSessionBirth",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)",
              "contract": "BaseControl",
              "src": "contracts\\session\\BaseControl.sol:19"
            },
            {
              "label": "sessionPriceChangeLimit",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "PriceControl",
              "src": "contracts\\session\\PriceControl.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(PairStateSessionTagged)24831_storage)": {
              "label": "mapping(address => struct BaseControl.PairStateSessionTagged)",
              "numberOfBytes": "32"
            },
            "t_struct(PairStateSessionTagged)24831_storage": {
              "label": "struct BaseControl.PairStateSessionTagged",
              "members": [
                {
                  "label": "reserve0",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "reserve1",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "sessionTag",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionFees": {
        "src": "contracts\\session\\SessionFees.sol:10",
        "inherit": [
          "ISessionFees"
        ],
        "libraries": [],
        "methods": [
          "payFeeCrssLogic(address,uint256,(uint32,uint32,uint32,uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SessionManager": {
        "src": "contracts\\session\\SessionManager.sol:8",
        "inherit": [
          "ISessionManager"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "sessionParams",
              "offset": 0,
              "slot": "0",
              "type": "t_struct(SessionParams)25799_storage",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:10"
            },
            {
              "label": "sessionRegistrar",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(ISessionRegistrar)25996",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:11"
            },
            {
              "label": "sessionFees",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(ISessionFees)25962",
              "contract": "SessionManager",
              "src": "contracts\\session\\SessionManager.sol:12"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(ISessionFees)25962": {
              "label": "contract ISessionFees",
              "numberOfBytes": "20"
            },
            "t_contract(ISessionRegistrar)25996": {
              "label": "contract ISessionRegistrar",
              "numberOfBytes": "20"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_struct(SessionParams)25799_storage": {
              "label": "struct SessionParams",
              "members": [
                {
                  "label": "sessionType",
                  "type": "t_enum(SessionType)25780",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "session",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastSession",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "isOriginAction",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SessionRegistrar": {
        "src": "contracts\\session\\SessionRegistrar.sol:7",
        "inherit": [
          "ISessionRegistrar"
        ],
        "libraries": [],
        "methods": [
          "registerSession(uint8)",
          "unregisterSession()",
          "getInnermostSType()",
          "getOutermostSType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "session",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:9"
            },
            {
              "label": "sessionsLastSeenBySType",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_enum(SessionType)25780,t_uint256)",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:10"
            },
            {
              "label": "stackSTypes",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_enum(SessionType)25780)10_storage",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:12"
            },
            {
              "label": "stackPointer",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SessionRegistrar",
              "src": "contracts\\session\\SessionRegistrar.sol:13"
            }
          ],
          "types": {
            "t_array(t_enum(SessionType)25780)10_storage": {
              "label": "enum SessionType[10]",
              "numberOfBytes": "32"
            },
            "t_enum(SessionType)25780": {
              "label": "enum SessionType",
              "members": [
                "None",
                "Transfer",
                "Swap",
                "AddLiquidity",
                "RemoveLiquidity",
                "Deposit",
                "Withdraw",
                "CompoundAccumulated",
                "VestAccumulated",
                "HarvestAccumulated",
                "StakeAccumulated",
                "MassHarvestRewards",
                "MassStakeRewards",
                "MassCompoundRewards",
                "WithdrawVest",
                "UpdatePool",
                "EmergencyWithdraw",
                "SwitchCollectOption",
                "HarvestRepay"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_enum(SessionType)25780,t_uint256)": {
              "label": "mapping(enum SessionType => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "INode": {
        "src": "contracts\\session\\interfaces\\INode.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [
          "informOfPair(address,address,address,address)",
          "wire(address,address)",
          "setNode(uint8,address,address)",
          "setFeeStores((address,address,address,address),address)",
          "setFeeRates(uint8,(uint32,uint32,uint32,uint32),address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionFees": {
        "src": "contracts\\session\\interfaces\\ISessionFees.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "payFeeCrssLogic(address,uint256,(uint32,uint32,uint32,uint32),bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionManager": {
        "src": "contracts\\session\\interfaces\\ISessionManager.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ISessionRegistrar": {
        "src": "contracts\\session\\interfaces\\ISessionRegistrar.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerSession(uint8)",
          "unregisterSession()",
          "getInnermostSType()",
          "getOutermostSType()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "console": {
        "src": "hardhat\\console.sol:4",
        "version": {
          "withMetadata": "72c080ec9a09e58cd02d125ec9563941e90cc010bcd5775b575898f38ce229de",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "IStrategy": {
        "src": "contracts\\farm\\interfaces\\IStrategy.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "wantLockedTotal()",
          "sharesTotal()",
          "earn()",
          "deposit(address,uint256)",
          "withdraw(address,uint256)",
          "inCaseTokensGetStuck(address,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "WBNB": {
        "src": "contracts\\libraries\\token\\WBNB.sol:4",
        "version": {
          "withMetadata": "079fd3168f328230d45d44e88f283b5623e683e34df8fd514ba6c37c6d74039f",
          "withoutMetadata": "8af1590c2c17d5c0dcbf09da0913d47ac77e1e8da40b07b186ee5cce45a53797",
          "linkedWithoutMetadata": "8af1590c2c17d5c0dcbf09da0913d47ac77e1e8da40b07b186ee5cce45a53797"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "a()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts\\libraries\\token\\WBNB.sol:5"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts\\libraries\\token\\WBNB.sol:6"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts\\libraries\\token\\WBNB.sol:7"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:5"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:6"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:7"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:14"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "WBNB",
              "src": "contracts\\libraries\\token\\WBNB.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    }
  ]
}