/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CrossPair, CrossPairInterface } from "../CrossPair";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "_reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "_reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "_blockTimestampLast",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_maker",
        type: "address",
      },
      {
        internalType: "address",
        name: "_taker",
        type: "address",
      },
      {
        internalType: "address",
        name: "_farm",
        type: "address",
      },
    ],
    name: "setNodes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "tolerableTransfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001600f5534801561001557600080fd5b50600580546001600160a01b03191633179055604080518082018252600981526843726f7373204c507360b81b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd7a44029b10540500d21d13b698b64263433a1c598c84cc4052d7b58a8328004818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c090910190925281519101206003556124ea806101076000396000f3fe608060405234801561001057600080fd5b506004361061015f5760003560e01c8063022c0d9f1461016457806306fdde03146101795780630902f1ac146101b7578063095ea7b3146101eb5780630dfe16811461020e57806318160ddd1461022e57806323b872dd1461024557806330adf81f14610258578063313ce5671461026d5780633644e51514610287578063485cc955146102905780635909c0d5146102a35780635a3d5493146102ac5780636a627842146102b557806370a08231146102c85780637464fc3d146102e85780637ecebe00146102f157806389afcb441461031157806395d89b4114610339578063a9059cbb14610360578063ba9a7a5614610373578063bc25cf771461037c578063c45a01551461038f578063d21220a7146103a2578063d505accf146103b5578063dd62ed3e146103c8578063e22925d8146103f3578063e98732a514610406578063fff6cae914610419575b600080fd5b61017761017236600461218f565b610421565b005b6101a16040518060400160405280600981526020016843726f7373204c507360b81b81525081565b6040516101ae919061229b565b60405180910390f35b6101bf61092e565b604080516001600160701b03948516815293909216602084015263ffffffff16908201526060016101ae565b6101fe6101f936600461212c565b610958565b60405190151581526020016101ae565b600654610221906001600160a01b031681565b6040516101ae919061223b565b61023760005481565b6040519081526020016101ae565b6101fe610253366004612077565b61096f565b61023760008051602061249583398151915281565b610275601281565b60405160ff90911681526020016101ae565b61023760035481565b61017761029e366004611ff5565b610a03565b61023760095481565b610237600a5481565b6102376102c3366004611fbd565b610a7e565b6102376102d6366004611fbd565b60016020526000908152604090205481565b610237600b5481565b6102376102ff366004611fbd565b60046020526000908152604090205481565b61032461031f366004611fbd565b610d66565b604080519283526020830191909152016101ae565b6101a160405180604001604052806008815260200167043726f73732d4c560c41b81525081565b6101fe61036e36600461212c565b611115565b6102376103e881565b61017761038a366004611fbd565b611122565b600554610221906001600160a01b031681565b600754610221906001600160a01b031681565b6101776103c33660046120b7565b61124f565b6102376103d6366004611ff5565b600260209081526000928352604080842090915290825290205481565b6101fe610401366004612077565b611448565b61017761041436600461202d565b611575565b610177611605565b600f5460011461044c5760405162461bcd60e51b8152600401610443906122ce565b60405180910390fd5b6000600f558415158061045f5750600084115b6104b55760405162461bcd60e51b815260206004820152602160248201527f43726f73733a20494e53554646494349454e545f4f55545055545f414d4f554e6044820152601560fa1b6064820152608401610443565b6000806104c061092e565b5091509150816001600160701b0316871080156104e55750806001600160701b031686105b6105315760405162461bcd60e51b815260206004820152601d60248201527f43726f73733a20494e53554646494349454e545f4c49515549444954590000006044820152606401610443565b60065460075460009182916001600160a01b0391821691908116908916821480159061056f5750806001600160a01b0316896001600160a01b031614155b6105af5760405162461bcd60e51b815260206004820152601160248201527043726f73733a20494e56414c49445f544f60781b6044820152606401610443565b8a156105c0576105c0828a8d611751565b89156105d1576105d1818a8c611751565b861561063e576040516366b7358560e11b81526001600160a01b038a169063cd6e6b0a9061060b9033908f908f908e908e9060040161224f565b600060405180830381600087803b15801561062557600080fd5b505af1158015610639573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81526001600160a01b038316906370a082319061066a90309060040161223b565b60206040518083038186803b15801561068257600080fd5b505afa158015610696573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ba9190612177565b6040516370a0823160e01b81529094506001600160a01b038216906370a08231906106e990309060040161223b565b60206040518083038186803b15801561070157600080fd5b505afa158015610715573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107399190612177565b92505050600089856001600160701b03166107549190612395565b831161076157600061077e565b6107748a6001600160701b038716612395565b61077e9084612395565b905060006107958a6001600160701b038716612395565b83116107a25760006107bf565b6107b58a6001600160701b038716612395565b6107bf9084612395565b905060008211806107d05750600081115b61081c5760405162461bcd60e51b815260206004820181905260248201527f43726f73733a20494e53554646494349454e545f494e5055545f414d4f554e546044820152606401610443565b600061083e61082c846011611891565b61083887612710611891565b90611917565b9050600061085061082c846011611891565b90506108766305f5e1006108706001600160701b038b8116908b16611891565b90611891565b6108808383611891565b10156108b95760405162461bcd60e51b815260206004820152600860248201526743726f73733a204b60c01b6044820152606401610443565b50506108c784848888611959565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600f55505050505050505050565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610965338484611b40565b5060015b92915050565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146109ee576001600160a01b03841660009081526002602090815260408083203384529091529020546109c99083611917565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6109f9848484611ba2565b5060019392505050565b6005546001600160a01b03163314610a505760405162461bcd60e51b815260206004820152601060248201526f21b937b9b99d102327a92124a22222a760811b6044820152606401610443565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b6000600f54600114610aa25760405162461bcd60e51b8152600401610443906122ce565b6000600f81905580610ab261092e565b506006546040516370a0823160e01b81529294509092506000916001600160a01b03909116906370a0823190610aec90309060040161223b565b60206040518083038186803b158015610b0457600080fd5b505afa158015610b18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3c9190612177565b6007546040516370a0823160e01b81529192506000916001600160a01b03909116906370a0823190610b7290309060040161223b565b60206040518083038186803b158015610b8a57600080fd5b505afa158015610b9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc29190612177565b90506000610bd9836001600160701b038716611917565b90506000610bf0836001600160701b038716611917565b90506000610bfe8787611c31565b60005490915080610c3557610c216103e8610838610c1c8787611891565b611d7d565b9850610c3060006103e8611ded565b610c7c565b610c796001600160701b038916610c4c8684611891565b610c569190612333565b6001600160701b038916610c6a8685611891565b610c749190612333565b611e6a565b98505b60008911610cd85760405162461bcd60e51b8152602060048201526024808201527f43726f73733a20494e53554646494349454e545f4c49515549444954595f4d496044820152631395115160e21b6064820152608401610443565b610ce28a8a611ded565b610cee86868a8a611959565b8115610d1857600854610d14906001600160701b0380821691600160701b900416611891565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600f5550949695505050505050565b600080600f54600114610d8b5760405162461bcd60e51b8152600401610443906122ce565b6000600f81905580610d9b61092e565b506006546007546040516370a0823160e01b81529395509193506001600160a01b039081169291169060009083906370a0823190610ddd90309060040161223b565b60206040518083038186803b158015610df557600080fd5b505afa158015610e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2d9190612177565b90506000826001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610e5d919061223b565b60206040518083038186803b158015610e7557600080fd5b505afa158015610e89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ead9190612177565b30600090815260016020526040812054919250610eca8888611c31565b60005490915080610edb8487611891565b610ee59190612333565b9a5080610ef28486611891565b610efc9190612333565b995060008b118015610f0e575060008a115b610f665760405162461bcd60e51b8152602060048201526024808201527f43726f73733a20494e53554646494349454e545f4c49515549444954595f42556044820152631493915160e21b6064820152608401610443565b610f703084611e80565b610f7b878d8d611751565b610f86868d8c611751565b6040516370a0823160e01b81526001600160a01b038816906370a0823190610fb290309060040161223b565b60206040518083038186803b158015610fca57600080fd5b505afa158015610fde573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110029190612177565b6040516370a0823160e01b81529095506001600160a01b038716906370a082319061103190309060040161223b565b60206040518083038186803b15801561104957600080fd5b505afa15801561105d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110819190612177565b935061108f85858b8b611959565b81156110b9576008546110b5906001600160701b0380821691600160701b900416611891565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600f81905550915091565b6000610965338484611ba2565b600f546001146111445760405162461bcd60e51b8152600401610443906122ce565b6000600f556006546007546008546040516370a0823160e01b81526001600160a01b0393841693909216916111f291849186916111ed916001600160701b039091169084906370a082319061119d90309060040161223b565b60206040518083038186803b1580156111b557600080fd5b505afa1580156111c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108389190612177565b611751565b61124581846111ed6008600e9054906101000a90046001600160701b03166001600160701b0316856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161119d919061223b565b50506001600f5550565b428410156112905760405162461bcd60e51b815260206004820152600e60248201526d10dc9bdcdcce881156141254915160921b6044820152606401610443565b6003546001600160a01b03881660009081526004602052604081208054919291600080516020612495833981519152918b918b918b9190876112d183612401565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161134a92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156113b5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906113eb5750886001600160a01b0316816001600160a01b0316145b6114325760405162461bcd60e51b815260206004820152601860248201527743726f73733a20494e56414c49445f5349474e415455524560401b6044820152606401610443565b61143d898989611b40565b505050505050505050565b600e546000906001600160a01b031633146114985760405162461bcd60e51b815260206004820152601060248201526f21b937b9b99d102337b93134b23232b760811b6044820152606401610443565b6001600160a01b0384166000908152600160205260409020548211156114d4576001600160a01b03841660009081526001602052604090205491505b6001600160a01b038416600090815260016020526040812080548492906114fc908490612395565b90915550506001600160a01b038316600090815260016020526040812080548492906115299084906122f5565b92505081905550826001600160a01b0316846001600160a01b03166000805160206124758339815191528460405161156391815260200190565b60405180910390a35060019392505050565b6005546001600160a01b031633146115c65760405162461bcd60e51b815260206004820152601460248201527321b939b99d1034b73b30b634b21031b0b63632b960611b6044820152606401610443565b600c80546001600160a01b039485166001600160a01b031991821617909155600d805493851693821693909317909255600e8054919093169116179055565b600f546001146116275760405162461bcd60e51b8152600401610443906122ce565b6000600f556006546040516370a0823160e01b815261174a916001600160a01b0316906370a082319061165e90309060040161223b565b60206040518083038186803b15801561167657600080fd5b505afa15801561168a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ae9190612177565b6007546040516370a0823160e01b81526001600160a01b03909116906370a08231906116de90309060040161223b565b60206040518083038186803b1580156116f657600080fd5b505afa15801561170a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172e9190612177565b6008546001600160701b0380821691600160701b900416611959565b6001600f55565b60408051808201825260198152787472616e7366657228616464726573732c75696e743235362960381b60209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b179052915160009283928716916117d9919061221f565b6000604051808303816000865af19150503d8060008114611816576040519150601f19603f3d011682016040523d82523d6000602084013e61181b565b606091505b50915091508180156118455750805115806118455750808060200190518101906118459190612157565b61188a5760405162461bcd60e51b815260206004820152601660248201527510dc9bdcdcce881514905394d1915497d1905253115160521b6044820152606401610443565b5050505050565b6000826118a057506000610969565b60006118ac8385612376565b9050826118b98583612333565b146119105760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610443565b9392505050565b600061191083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611ef8565b6001600160701b03841180159061197757506001600160701b038311155b6119b55760405162461bcd60e51b815260206004820152600f60248201526e43726f73733a204f564552464c4f5760881b6044820152606401610443565b60006119c5600160201b4261241c565b6008549091506000906119e590600160e01b900463ffffffff16836123ac565b905060008163ffffffff16118015611a0557506001600160701b03841615155b8015611a1957506001600160701b03831615155b15611aa8578063ffffffff16611a4185611a3286611f32565b6001600160e01b031690611f4b565b6001600160e01b0316611a549190612376565b60096000828254611a6591906122f5565b909155505063ffffffff8116611a7e84611a3287611f32565b6001600160e01b0316611a919190612376565b600a6000828254611aa291906122f5565b90915550505b6008805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831660009081526001602052604081208054839290611bca908490612395565b90915550506001600160a01b03821660009081526001602052604081208054839290611bf79084906122f5565b92505081905550816001600160a01b0316836001600160a01b031660008051602061247583398151915283604051611b9591815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611c8257600080fd5b505afa158015611c96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cba9190611fd9565b600b546001600160a01b038216158015945091925090611d69578015611d64576000611cf5610c1c6001600160701b03888116908816611891565b90506000611d0283611d7d565b905080821115611d61576000611d24611d1b8484611917565b60005490611891565b90506000611d3d83611d37866003611891565b90611f60565b90506000611d4b8284612333565b90508015611d5d57611d5d8782611ded565b5050505b50505b611d75565b8015611d75576000600b555b505092915050565b60006003821115611dde5750806000611d97600283612333565b611da29060016122f5565b90505b81811015611dd857905080600281611dbd8186612333565b611dc791906122f5565b611dd19190612333565b9050611da5565b50611de8565b8115611de8575060015b919050565b600054611dfa9082611f60565b60009081556001600160a01b038316815260016020526040902054611e1f9082611f60565b6001600160a01b03831660008181526001602052604080822093909355915190919060008051602061247583398151915290611e5e9085815260200190565b60405180910390a35050565b6000818310611e795781611910565b5090919050565b6001600160a01b038216600090815260016020526040902054611ea39082611917565b6001600160a01b03831660009081526001602052604081209190915554611eca9082611917565b60009081556040518281526001600160a01b0384169060008051602061247583398151915290602001611e5e565b60008184841115611f1c5760405162461bcd60e51b8152600401610443919061229b565b506000611f298486612395565b95945050505050565b6000610969600160701b6001600160701b038416612347565b60006119106001600160701b0383168461230d565b600080611f6d83856122f5565b9050838110156119105760405162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b6044820152606401610443565b600060208284031215611fce578081fd5b81356119108161245c565b600060208284031215611fea578081fd5b81516119108161245c565b60008060408385031215612007578081fd5b82356120128161245c565b915060208301356120228161245c565b809150509250929050565b600080600060608486031215612041578081fd5b833561204c8161245c565b9250602084013561205c8161245c565b9150604084013561206c8161245c565b809150509250925092565b60008060006060848603121561208b578283fd5b83356120968161245c565b925060208401356120a68161245c565b929592945050506040919091013590565b600080600080600080600060e0888a0312156120d1578283fd5b87356120dc8161245c565b965060208801356120ec8161245c565b95506040880135945060608801359350608088013560ff8116811461210f578384fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561213e578182fd5b82356121498161245c565b946020939093013593505050565b600060208284031215612168578081fd5b81518015158114611910578182fd5b600060208284031215612188578081fd5b5051919050565b6000806000806000608086880312156121a6578081fd5b853594506020860135935060408601356121bf8161245c565b925060608601356001600160401b03808211156121da578283fd5b818801915088601f8301126121ed578283fd5b8135818111156121fb578384fd5b89602082850101111561220c578384fd5b9699959850939650602001949392505050565b600082516122318184602087016123d1565b9190910192915050565b6001600160a01b0391909116815260200190565b600060018060a01b038716825285602083015284604083015260806060830152826080830152828460a084013781830160a090810191909152601f909201601f19160101949350505050565b60006020825282518060208401526122ba8160408501602087016123d1565b601f01601f19169190910160400192915050565b6020808252600d908201526c10dc9bdcdcce881313d0d2d151609a1b604082015260600190565b6000821982111561230857612308612430565b500190565b60006001600160e01b038381168061232757612327612446565b92169190910492915050565b60008261234257612342612446565b500490565b60006001600160e01b038281168482168115158284048211161561236d5761236d612430565b02949350505050565b600081600019048311821515161561239057612390612430565b500290565b6000828210156123a7576123a7612430565b500390565b600063ffffffff838116908316818110156123c9576123c9612430565b039392505050565b60005b838110156123ec5781810151838201526020016123d4565b838111156123fb576000848401525b50505050565b600060001982141561241557612415612430565b5060010190565b60008261242b5761242b612446565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461247157600080fd5b5056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9a2646970667358221220caac024118eb9f604ae9ed11ce81dcd5c92f272a2fbf604bab384c4677019b7a64736f6c63430008030033";

export class CrossPair__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrossPair> {
    return super.deploy(overrides || {}) as Promise<CrossPair>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CrossPair {
    return super.attach(address) as CrossPair;
  }
  connect(signer: Signer): CrossPair__factory {
    return super.connect(signer) as CrossPair__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossPairInterface {
    return new utils.Interface(_abi) as CrossPairInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossPair {
    return new Contract(address, _abi, signerOrProvider) as CrossPair;
  }
}
