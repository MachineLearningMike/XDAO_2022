/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CrossFarm, CrossFarmInterface } from "../CrossFarm";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "crss",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_crssPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "ChangeReferer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "crssAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lpAmount",
        type: "uint256",
      },
    ],
    name: "CompoundAccumulated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "crssAmount",
        type: "uint256",
      },
    ],
    name: "HarvestAccumulated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "crssAmount",
        type: "uint256",
      },
    ],
    name: "MassCompoundRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "crssAmount",
        type: "uint256",
      },
    ],
    name: "MassHarvestRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "crssAmount",
        type: "uint256",
      },
    ],
    name: "MassStakeRewards",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum SessionType",
        name: "_sessionType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "develop",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "buyback",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidity",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "treasury",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct FeeRates",
        name: "_feeRates",
        type: "tuple",
      },
    ],
    name: "SetFeeRates",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "develop",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyback",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidity",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct FeeStores",
        name: "_feeStores",
        type: "tuple",
      },
    ],
    name: "SetFeeStores",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "migrator",
        type: "address",
      },
    ],
    name: "SetMigrator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum NodeType",
        name: "nodeType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "SetNode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "referralCommissionRate",
        type: "uint256",
      },
    ],
    name: "SetReferralCommissionRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousTreasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newTreeausery",
        type: "address",
      },
    ],
    name: "SetTreasuryAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_trustedForwarder",
        type: "address",
      },
    ],
    name: "SetTrustedForwarder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "crssReferral",
        type: "address",
      },
    ],
    name: "SetcrssReferral",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeAccumulated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum CollectOption",
        name: "option",
        type: "uint8",
      },
    ],
    name: "SwitchCollectOption",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "crssAmount",
        type: "uint256",
      },
    ],
    name: "VestAccumulated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawVest",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_depositFeeRate",
        type: "uint256",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bonusMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "referrer",
        type: "address",
      },
    ],
    name: "changeReferrer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "crssPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dailyPatrol",
    outputs: [
      {
        internalType: "bool",
        name: "done",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "deposited",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SessionType",
        name: "",
        type: "uint8",
      },
    ],
    name: "feeRates",
    outputs: [
      {
        internalType: "uint32",
        name: "develop",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "buyback",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "liquidity",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "treasury",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeStores",
    outputs: [
      {
        internalType: "address",
        name: "develop",
        type: "address",
      },
      {
        internalType: "address",
        name: "buyback",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidity",
        type: "address",
      },
      {
        internalType: "address",
        name: "treasury",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getPairQuick",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getSubPooledCrss",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "toVest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toAccumulate",
            type: "uint256",
          },
        ],
        internalType: "struct SubPooledCrss",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "collectOption",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accRewards",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalVest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalMatureVest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pendingCrss",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rewardPayroll",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lpBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "crssBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalAccRewards",
            type: "uint256",
          },
        ],
        internalType: "struct UserState",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getVestList",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "principal",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
        ],
        internalType: "struct VestChunk[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "harvestAccumulated",
    outputs: [
      {
        internalType: "uint256",
        name: "harvested",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "informOfPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastPatrolDay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massCompoundRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massHarvestRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massStakeRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrator",
    outputs: [
      {
        internalType: "contract IMigratorChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextNode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pairs",
    outputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accCrssPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositFeeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "sumAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "bulk",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "accPerShare",
                type: "uint256",
              },
            ],
            internalType: "struct SubPool",
            name: "Comp",
            type: "tuple",
          },
        ],
        internalType: "struct Struct_OnOff",
        name: "OnOff",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "sumAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "bulk",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "accPerShare",
                type: "uint256",
              },
            ],
            internalType: "struct SubPool",
            name: "Comp",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "bulk",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "accPerShare",
                type: "uint256",
              },
            ],
            internalType: "struct SubPool",
            name: "Vest",
            type: "tuple",
          },
        ],
        internalType: "struct Struct_OnOn",
        name: "OnOn",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "sumAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "bulk",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "accPerShare",
                type: "uint256",
              },
            ],
            internalType: "struct SubPool",
            name: "Vest",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "bulk",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "accPerShare",
                type: "uint256",
              },
            ],
            internalType: "struct SubPool",
            name: "Accum",
            type: "tuple",
          },
        ],
        internalType: "struct Struct_OffOn",
        name: "OffOn",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "sumAmount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "bulk",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "accPerShare",
                type: "uint256",
              },
            ],
            internalType: "struct SubPool",
            name: "Accum",
            type: "tuple",
          },
        ],
        internalType: "struct Struct_OffOff",
        name: "OffOff",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prevNode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_depositFeeRate",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_crssReferral",
        type: "address",
      },
    ],
    name: "setCrssReferral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_referralCommissionRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nonVestBurnRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_stakeholders",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_compoundFeeRate",
        type: "uint256",
      },
    ],
    name: "setFeeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SessionType",
        name: "_sessionType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "develop",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "buyback",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidity",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "treasury",
            type: "uint32",
          },
        ],
        internalType: "struct FeeRates",
        name: "_feeRates",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setFeeRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "develop",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyback",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidity",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
        ],
        internalType: "struct FeeStores",
        name: "_feeStores",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setFeeStores",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMigratorChef",
        name: "_migrator",
        type: "address",
      },
    ],
    name: "setMigrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NodeType",
        name: "nodeType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_referralCommissionRate",
        type: "uint256",
      },
    ],
    name: "setReferralCommissionRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_trustedForwarder",
        type: "address",
      },
    ],
    name: "setTrustedForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "stakeAccumulated",
    outputs: [
      {
        internalType: "uint256",
        name: "staked",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "enum CollectOption",
        name: "newOption",
        type: "uint8",
      },
    ],
    name: "switchCollectOption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debt1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "debt2",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accumulated",
        type: "uint256",
      },
      {
        internalType: "enum CollectOption",
        name: "collectOption",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "vestAccumulated",
    outputs: [
      {
        internalType: "uint256",
        name: "vested",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_prevNode",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nextNode",
        type: "address",
      },
    ],
    name: "wire",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "withdrawn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawVest",
    outputs: [
      {
        internalType: "uint256",
        name: "withdrawn",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162006280380380620062808339810160408190526200003491620004ae565b620000486200004262000102565b6200013c565b60188290556040805180820190915260098152682337b93134b23232b760b91b6020820152438211620000995760405162461bcd60e51b81526004016200009091906200050a565b60405180910390fd5b50601d819055601f80546001600160a01b031990811690915560646021556161a8602355611388602555602480549091167323c6d84c09523032b08f9124a349760721af64f6179055620000f46103e884600160006200018e565b505060016019555062000588565b6000601836108015906200012057506009546001600160a01b031633145b1562000136575060131936013560601c62000139565b50335b90565b601080546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200019862000102565b6001600160a01b0316620001b46010546001600160a01b031690565b6001600160a01b0316146200020c5760405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e6572000000000000000000604482015260640162000090565b60408051808201909152600b81526a496e76616c69642066656560a81b6020820152611388821115620002545760405162461bcd60e51b81526004016200009091906200050a565b508115620002665762000266620003c4565b8260005b601a548110156200030a57816001600160a01b0316601a8281548110620002a157634e487b7160e01b600052603260045260246000fd5b60009182526020909120601690910201546001600160a01b03161415620002f55760405162461bcd60e51b8152602060048201526007602482015266055736564204c560cc1b604482015260640162000090565b80620003018162000560565b9150506200026a565b50601d54604051631742bc9f60e31b8152600481018790526001600160a01b0386166024820152604481018490526064810191909152601a608482015273__$70a8301df1591ea57daa3a3395102354b6$__9063ba15e4f89060a40160206040518083038186803b1580156200037f57600080fd5b505af415801562000394573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003ba9190620004f1565b601c555050505050565b601a5460005b81811015620004aa576000601a8281548110620003f757634e487b7160e01b600052603260045260246000fd5b60009182526020909120601c54601854601954604051637e508f8160e01b815260169095029093016004850181905260248501929092526044840152606483019190915260026084830152915073__$70a8301df1591ea57daa3a3395102354b6$__90637e508f819060a40160006040518083038186803b1580156200047c57600080fd5b505af415801562000491573d6000803e3d6000fd5b505050505080620004a29062000560565b9050620003ca565b5050565b600080600060608486031215620004c3578283fd5b83516001600160a01b0381168114620004da578384fd5b602085015160409095015190969495509392505050565b60006020828403121562000503578081fd5b5051919050565b6000602080835283518082850152825b8181101562000538578581018301518582016040015282016200051a565b818111156200054a5783604083870101525b50601f01601f1916929092016040019392505050565b60006000198214156200058157634e487b7160e01b81526011600452602481fd5b5060010190565b615ce880620005986000396000f3fe6080604052600436106102695760003560e01c8063081e3eda14610275578063102247111461029d5780631526fe271461031f57806317caf6f1146103555780631df9246c1461036b57806323cf311814610390578063249dfad7146103b257806328fd8cda146103df5780632bf7bfad146103ff5780633b38bf72146104145780633c1a308014610434578063441a3e7014610475578063454b06081461049557806348cd4cb1146104b55780634b85e059146104cb5780634eabd61b146104e057806351eb05a6146105005780635312ea8e14610520578063572b6c05146105405780635ffe6146146105605780636161293914610580578063630b5ba1146105a05780636495a0a6146105b557806365715c56146105d5578063715018a6146105f55780637977107a1461060a5780637cd07e47146106375780637da0a87714610657578063893d20e8146106775780638da5cb5b1461068c5780638dbb1e3a146106a157806390e3677f146106c1578063928879d6146106e157806393f1a40b1461070157806396805e5414610771578063a8b973a114610791578063b5f3296b146107a7578063b8d05b11146107bc578063bcdc4146146107dc578063c34df95f146107fc578063c693390e14610829578063cf8c645c14610849578063d6e1aa881461085f578063d74d3d781461087f578063d838f43e1461089f578063da742228146108bf578063e271c113146108df578063e2bbb158146108f5578063ed79213514610915578063f28fadb814610935578063f2fde38b14610955578063f9a21e8a14610975578063fdc53551146109b8578063fe33b30214610a5157610270565b3661027057005b600080fd5b34801561028157600080fd5b5061028a610aa0565b6040519081526020015b60405180910390f35b3480156102a957600080fd5b506102ef6102b836600461506b565b60176020526000908152604090205463ffffffff80821691600160201b8104821691600160401b8204811691600160601b90041684565b6040805163ffffffff95861681529385166020850152918416918301919091529091166060820152608001610294565b34801561032b57600080fd5b5061033f61033a3660046152ac565b610aa7565b6040516102949a99989796959493929190615679565b34801561036157600080fd5b5061028a601c5481565b34801561037757600080fd5b50610380610be5565b6040519015158152602001610294565b34801561039c57600080fd5b506103b06103ab366004614f37565b610cb7565b005b3480156103be57600080fd5b506000546103d2906001600160a01b031681565b6040516102949190615514565b3480156103eb57600080fd5b506103b06103fa366004615116565b610d21565b34801561040b57600080fd5b506103b0610df5565b34801561042057600080fd5b506103b061042f366004614f53565b610f10565b34801561044057600080fd5b506103d261044f366004614f53565b60126020908152600092835260408084209091529082529020546001600160a01b031681565b34801561048157600080fd5b5061028a61049036600461536e565b61104d565b3480156104a157600080fd5b506103b06104b03660046152ac565b6112a9565b3480156104c157600080fd5b5061028a601d5481565b3480156104d757600080fd5b5061028a611569565b3480156104ec57600080fd5b506103b06104fb3660046153b2565b6119c2565b34801561050c57600080fd5b506103b061051b3660046152ac565b611a5d565b34801561052c57600080fd5b506103b061053b3660046152ac565b611b52565b34801561054c57600080fd5b5061038061055b366004614f37565b611cea565b34801561056c57600080fd5b506103b061057b3660046152ac565b611d01565b34801561058c57600080fd5b506103b061059b366004614f8b565b611d45565b3480156105ac57600080fd5b506103b0611de5565b3480156105c157600080fd5b5061028a6105d036600461536e565b611eae565b3480156105e157600080fd5b506001546103d2906001600160a01b031681565b34801561060157600080fd5b506103b0612104565b34801561061657600080fd5b5061062a6106253660046152dc565b61214f565b6040516102949190615994565b34801561064357600080fd5b506026546103d2906001600160a01b031681565b34801561066357600080fd5b506009546103d2906001600160a01b031681565b34801561068357600080fd5b506103d2612296565b34801561069857600080fd5b506103d26122a5565b3480156106ad57600080fd5b5061028a6106bc36600461536e565b6122b4565b3480156106cd57600080fd5b506103b06106dc366004614f53565b6122d7565b3480156106ed57600080fd5b506103b06106fc36600461501e565b612360565b34801561070d57600080fd5b5061075f61071c3660046152dc565b601b602090815260009283526040808420909152908252902080546001820154600283015460038401546004850154600690950154939492939192909160ff1686565b604051610294969594939291906159bf565b34801561077d57600080fd5b506103b061078c366004615300565b6123d4565b34801561079d57600080fd5b5061028a60195481565b3480156107b357600080fd5b5061028a6125ba565b3480156107c857600080fd5b506103b06107d7366004615087565b612777565b3480156107e857600080fd5b5061028a6107f73660046152ac565b612837565b34801561080857600080fd5b5061081c6108173660046152dc565b612a5a565b6040516102949190615620565b34801561083557600080fd5b5061028a6108443660046152ac565b612b3f565b34801561085557600080fd5b5061028a60185481565b34801561086b57600080fd5b5061028a61087a3660046152ac565b61307b565b34801561088b57600080fd5b506103b061089a3660046152ac565b6132b2565b3480156108ab57600080fd5b506103b06108ba366004615347565b61331b565b3480156108cb57600080fd5b506103b06108da366004614f37565b6134bf565b3480156108eb57600080fd5b5061028a601e5481565b34801561090157600080fd5b5061028a61091036600461536e565b613591565b34801561092157600080fd5b506103b0610930366004614f37565b6138c0565b34801561094157600080fd5b506103b06109503660046153e0565b613949565b34801561096157600080fd5b506103b0610970366004614f37565b613abe565b34801561098157600080fd5b506013546014546015546016546109a8936001600160a01b03908116938116928116911684565b6040516102949493929190615542565b3480156109c457600080fd5b506109d86109d33660046152dc565b613b6e565b6040516102949190600061014082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e083015261010080840151818401525061012080840151818401525092915050565b348015610a5d57600080fd5b50610a92610a6c366004614f37565b601160205260009081526040902080546001909101546001600160a01b03918216911682565b604051610294929190615528565b601a545b90565b601a8181548110610ab757600080fd5b6000918252602091829020601690910201805460018201546002830154600384015460048501546005860154604080518082018252600689015481528151808301835260078a0154815260088a0154818c0152818b015281516060808201845260098b0154825283518085018552600a8c01548152600b8c0154818e0152828d015283518085018552600c8c01548152600d8c0154818e01528285015283519081018452600e8b0154815283518085018552600f8c0154815260108c0154818e0152818d01528351808501855260118c0154815260128c0154818e0152818501528351808501855260138c01548152845180860190955260148c015485526015909b0154848d01529a8a01929092526001600160a01b0390971699509497939692959194909391929091908a565b601c54601854601954601e54604051632b4d9bb560e21b8152601a6004820152602481019490945260448401929092526064830152601f6084830152600260a483015260c4820152600090819073__$70a8301df1591ea57daa3a3395102354b6$__9063ad366ed49060e40160206040518083038186803b158015610c6957600080fd5b505af4158015610c7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca191906152c4565b90508015610cb357601e819055600191505b5090565b610cbf613cd9565b6001600160a01b0316610cd06122a5565b6001600160a01b031614610cff5760405162461bcd60e51b8152600401610cf6906157fc565b60405180910390fd5b602680546001600160a01b0319166001600160a01b0392909216919091179055565b610d2b8282613d0b565b604051633d8d54b760e11b815273__$88bebae22a3ad6e62b56c303176513ecf8$__90637b1aa96e90610d6590601390869060040161588b565b60006040518083038186803b158015610d7d57600080fd5b505af4158015610d91573d6000803e3d6000fd5b505050506060820151602080546001600160a01b0319166001600160a01b039092169190911790556040517f119d2e55d36ac1023a728780d56fc7adb4fa783aa7d7972035442c6e7c9dbbba90610de9908490615857565b60405180910390a15050565b610dff600d613df5565b610e07610be5565b506000610e12613cd9565b60405163dd6ff48f60e01b81526001600160a01b0382166004820152601a6024820152601b604482015260026064820152601f608482015290915060009073__$70a8301df1591ea57daa3a3395102354b6$__9063dd6ff48f9060a401604080518083038186803b158015610e8657600080fd5b505af4158015610e9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebe919061538f565b509050816001600160a01b03167fe8d66d10fff274a961292009640bd1ebdd01ab213e8277a1c1d9ead133eea37282604051610efc91815260200190565b60405180910390a2610f0c613ede565b5050565b610f18613cd9565b6001600160a01b0316610f296122a5565b6001600160a01b031614610f4f5760405162461bcd60e51b8152600401610cf6906157fc565b816001600160a01b0316816001600160a01b03161415610fa45760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103932b332b93932b960811b6044820152606401610cf6565b601f54604051630c7f7b6b60e01b81526001600160a01b0390911690630c7f7b6b90610fd69085908590600401615528565b600060405180830381600087803b158015610ff057600080fd5b505af1158015611004573d6000803e3d6000fd5b50505050816001600160a01b03167f38b0934f8eed89a05b4790475c223e24697d8c8c2aafaed33838eeb7b6ce7329826040516110419190615514565b60405180910390a25050565b601a5460408051808201909152600f8152600080516020615c53833981519152602082015260009184919082106110975760405162461bcd60e51b8152600401610cf691906157c9565b506110a26006613df5565b60006110ac610be5565b905060006110b8613cd9565b90506000601a87815481106110dd57634e487b7160e01b600052603260045260246000fd5b600091825260208083208a8452601b825260408085206001600160a01b03881686529092529220601690910290910191508361118e57601c54601854601954604051632efd8a2b60e11b815273__$70a8301df1591ea57daa3a3395102354b6$__93635dfb14569361115d93889388938b93601f9360029360040161589f565b60006040518083038186803b15801561117557600080fd5b505af4158015611189573d6000803e3d6000fd5b505050505b805487111561119c57805496505b86156112965781548796506111bd906001600160a01b031630886000613f48565b6111c79088615b98565b82549097506111e0906001600160a01b0316848961411e565b87836001600160a01b03167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688860405161121c91815260200190565b60405180910390a360405163d9df3bb560e01b815273__$70a8301df1591ea57daa3a3395102354b6$__9063d9df3bb59061126590859085908b90601f90600090600401615936565b60006040518083038186803b15801561127d57600080fd5b505af4158015611291573d6000803e3d6000fd5b505050505b61129e613ede565b505050505092915050565b6112b1613cd9565b6001600160a01b03166112c26122a5565b6001600160a01b0316146112e85760405162461bcd60e51b8152600401610cf6906157fc565b6026546001600160a01b03166113375760405162461bcd60e51b815260206004820152601460248201527336b4b3b930ba329d1037379036b4b3b930ba37b960611b6044820152606401610cf6565b6000601a828154811061135a57634e487b7160e01b600052603260045260246000fd5b60009182526020822060169091020180546040516370a0823160e01b81529193506001600160a01b0316919082906370a082319061139c903090600401615514565b60206040518083038186803b1580156113b457600080fd5b505afa1580156113c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ec91906152c4565b602654909150611409906001600160a01b03848116911683614174565b60265460405163ce5494bb60e01b81526000916001600160a01b03169063ce5494bb9061143a908690600401615514565b602060405180830381600087803b15801561145457600080fd5b505af1158015611468573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061148c9190615002565b6040516370a0823160e01b81529091506001600160a01b038216906370a08231906114bb903090600401615514565b60206040518083038186803b1580156114d357600080fd5b505afa1580156114e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061150b91906152c4565b82146115485760405162461bcd60e51b815260206004820152600c60248201526b1b5a59dc985d194e8818985960a21b6044820152606401610cf6565b83546001600160a01b0319166001600160a01b039190911617909255505050565b6000611575600c613df5565b61157d610be5565b506000611588613cd9565b601c5460185460195460405163067e1ebf60e21b815293945060009373__$70a8301df1591ea57daa3a3395102354b6$__936319f87afc936115da938893601a93601b93601f93600293600401615591565b60206040518083038186803b1580156115f257600080fd5b505af4158015611606573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061162a91906152c4565b905080156119b557600254600854611651916001600160a01b039081169116836000613f48565b61165b9082615b98565b90506000601a60008154811061168157634e487b7160e01b600052603260045260246000fd5b6000918252602090912060085460405163518e55f960e11b81526016909302909101600483018190526001600160a01b0390911660248301526044820184905260136064830152915073__$70a8301df1591ea57daa3a3395102354b6$__9063a31cabf29060840160206040518083038186803b15801561170157600080fd5b505af4158015611715573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173991906152c4565b6117439083615b98565b6002546040516370a0823160e01b81529193506000916001600160a01b03909116906370a0823190611779903090600401615514565b60206040518083038186803b15801561179157600080fd5b505afa1580156117a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c991906152c4565b600854604051631e5c024d60e01b815291925073__$70a8301df1591ea57daa3a3395102354b6$__91631e5c024d91611814916001600160a01b03909116903090889060040161556d565b60006040518083038186803b15801561182c57600080fd5b505af4158015611840573d6000803e3d6000fd5b50506002546040516370a0823160e01b81528493506001600160a01b0390911691506370a0823190611876903090600401615514565b60206040518083038186803b15801561188e57600080fd5b505afa1580156118a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118c691906152c4565b6118d09190615b98565b6001600160a01b0385166000908152600080516020615c73833981519152602052604090819020905163d9df3bb560e01b81529196508694509073__$70a8301df1591ea57daa3a3395102354b6$__9063d9df3bb59061193e90869085908990601f90600190600401615936565b60006040518083038186803b15801561195657600080fd5b505af415801561196a573d6000803e3d6000fd5b50505050846001600160a01b03167f16989eb9073f795386d3e9c3c944c43e65ad9668875042b7d01cc6f87c1b9d83876040516119a991815260200190565b60405180910390a25050505b6119bd613ede565b505090565b6119ca613cd9565b6001600160a01b03166119db6122a5565b6001600160a01b031614611a015760405162461bcd60e51b8152600401610cf6906157fc565b6021849055604051848152600080516020615c938339815191529060200160405180910390a16023839055611a3582614286565b602480546001600160a01b0319166001600160a01b0393909316929092179091556025555050565b601a5460408051808201909152600f8152600080516020615c53833981519152602082015282918210611aa35760405162461bcd60e51b8152600401610cf691906157c9565b506000601a8381548110611ac757634e487b7160e01b600052603260045260246000fd5b9060005260206000209060160201905073__$70a8301df1591ea57daa3a3395102354b6$__637e508f8182601c5460185460195460026040518663ffffffff1660e01b8152600401611b1d959493929190615971565b60006040518083038186803b158015611b3557600080fd5b505af4158015611b49573d6000803e3d6000fd5b50505050505050565b601a5460408051808201909152600f8152600080516020615c53833981519152602082015282918210611b985760405162461bcd60e51b8152600401610cf691906157c9565b50611ba36010613df5565b6000611bad613cd9565b90506000601a8481548110611bd257634e487b7160e01b600052603260045260246000fd5b60009182526020808320878452601b825260408085206001600160a01b038816865290925292208054601690920290920192508015611cda5782548190611c23906001600160a01b0316868361411e565b60405163d9df3bb560e01b815273__$70a8301df1591ea57daa3a3395102354b6$__9063d9df3bb590611c6490879087908690601f90600090600401615936565b60006040518083038186803b158015611c7c57600080fd5b505af4158015611c90573d6000803e3d6000fd5b5050505086856001600160a01b03167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059583604051611cd091815260200190565b60405180910390a3505b611ce2613ede565b505050505050565b6009546001600160a01b038281169116145b919050565b611d09613cd9565b6001600160a01b0316611d1a6122a5565b6001600160a01b031614611d405760405162461bcd60e51b8152600401610cf6906157fc565b601955565b611d51848484846142d0565b506040805180820182526001600160a01b039384168082529284166020808301828152968616600081815260118352858120945185549089166001600160a01b03199182161786559851600190950180549590981694891694909417909655848352601280825284842092845291815283832080548816871790559081528282209382529290925290208054909216179055565b601a5460005b81811015610f0c576000601a8281548110611e1657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060160201905073__$70a8301df1591ea57daa3a3395102354b6$__637e508f8182601c5460185460195460026040518663ffffffff1660e01b8152600401611e6c959493929190615971565b60006040518083038186803b158015611e8457600080fd5b505af4158015611e98573d6000803e3d6000fd5b505050505080611ea790615bdb565b9050611deb565b601a5460408051808201909152600f8152600080516020615c5383398151915260208201526000918491908210611ef85760405162461bcd60e51b8152600401610cf691906157c9565b50611f03600e613df5565b6000611f0d610be5565b90506000611f19613cd9565b90506000601a8781548110611f3e57634e487b7160e01b600052603260045260246000fd5b600091825260208083208a8452601b825260408085206001600160a01b038816865290925292206016909102909101915083611fef57601c54601854601954604051632efd8a2b60e11b815273__$70a8301df1591ea57daa3a3395102354b6$__93635dfb145693611fbe93889388938b93601f9360029360040161589f565b60006040518083038186803b158015611fd657600080fd5b505af4158015611fea573d6000803e3d6000fd5b505050505b861561129657612004816005016005896143b6565b61200e9088615b98565b600254600854919850889750612033916001600160a01b039182169116886000613f48565b61203d9088615b98565b600854604051631e5c024d60e01b815291985073__$70a8301df1591ea57daa3a3395102354b6$__91631e5c024d91612088916001600160a01b039091169087908c9060040161556d565b60006040518083038186803b1580156120a057600080fd5b505af41580156120b4573d6000803e3d6000fd5b5050505087836001600160a01b03167fc77de961bff87a335a505b2376f2de3694be653dea89bcfd78fc457dddfc8546886040516120f491815260200190565b60405180910390a361129e613ede565b61210c613cd9565b6001600160a01b031661211d6122a5565b6001600160a01b0316146121435760405162461bcd60e51b8152600401610cf6906157fc565b61214d600061470b565b565b6040805180820190915260008082526020820152601a5460408051808201909152600f8152600080516020615c538339815191526020820152849182106121a95760405162461bcd60e51b8152600401610cf691906157c9565b5073__$70a8301df1591ea57daa3a3395102354b6$__633417d5a2601a86815481106121e557634e487b7160e01b600052603260045260246000fd5b60009182526020808320898452601b825260408085206001600160a01b038b1686529092529281902090516001600160e01b031960e086901b16815261223f93601690930290920191600401918252602082015260400190565b604080518083038186803b15801561225657600080fd5b505af415801561226a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228e91906151ef565b949350505050565b60006122a06122a5565b905090565b6010546001600160a01b031690565b6019546000906122c48484615b98565b6122ce9190615b79565b90505b92915050565b6122df612296565b6001600160a01b0316336001600160a01b0316146123325760405162461bcd60e51b815260206004820152601060248201526f496e76616c69642063616c6c6572203360801b6044820152606401610cf6565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055565b6001600160a01b03811630146123cf57600083600681111561239257634e487b7160e01b600052602160045260246000fd5b14156123c457600e80546001600160a01b0384166001600160a01b03199182168117909255600f805490911690911790555b6123cf83838361475d565b505050565b6123dc613cd9565b6001600160a01b03166123ed6122a5565b6001600160a01b0316146124135760405162461bcd60e51b8152600401610cf6906157fc565b60408051808201909152600b81526a496e76616c69642066656560a81b60208201526113888211156124585760405162461bcd60e51b8152600401610cf691906157c9565b50811561246757612467611de5565b8260005b601a5481101561250457816001600160a01b0316601a82815481106124a057634e487b7160e01b600052603260045260246000fd5b60009182526020909120601690910201546001600160a01b031614156124f25760405162461bcd60e51b8152602060048201526007602482015266055736564204c560cc1b6044820152606401610cf6565b806124fc81615bdb565b91505061246b565b50601d54604051631742bc9f60e31b8152600481018790526001600160a01b0386166024820152604481018490526064810191909152601a608482015273__$70a8301df1591ea57daa3a3395102354b6$__9063ba15e4f89060a40160206040518083038186803b15801561257857600080fd5b505af415801561258c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125b091906152c4565b601c555050505050565b60006125c6600b613df5565b6125ce610be5565b5060006125d9613cd9565b601c5460185460195460405163067e1ebf60e21b815293945060009373__$70a8301df1591ea57daa3a3395102354b6$__936319f87afc9361262b938893601a93601b93601f93600293600401615591565b60206040518083038186803b15801561264357600080fd5b505af4158015612657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061267b91906152c4565b905080156119b55760025460085491935083916126a7916001600160a01b039081169116836000613f48565b6126b19082615b98565b600854604051631e5c024d60e01b815291925073__$70a8301df1591ea57daa3a3395102354b6$__91631e5c024d916126fc916001600160a01b03909116908690869060040161556d565b60006040518083038186803b15801561271457600080fd5b505af4158015612728573d6000803e3d6000fd5b50505050816001600160a01b03167fe76fcec0d187f2217e3673f1cbfb8ef3c09dedb09b2857986f3bf6b60b35483c8460405161276791815260200190565b60405180910390a26119bd613ede565b6001600160a01b03811630146123cf5760405163b1f2df4360e01b815273__$88bebae22a3ad6e62b56c303176513ecf8$__9063b1f2df43906127c39086906017908790600401615759565b60006040518083038186803b1580156127db57600080fd5b505af41580156127ef573d6000803e3d6000fd5b505050507f029d9f0c8658b2b4deb9a71c950bd17f92125b77885562de42477ea2ea40b839838360405161282492919061577a565b60405180910390a16123cf8383836148fa565b601a5460408051808201909152600f8152600080516020615c53833981519152602082015260009183919082106128815760405162461bcd60e51b8152600401610cf691906157c9565b5061288c6008613df5565b6000612896610be5565b905060006128a2613cd9565b90506000601a86815481106128c757634e487b7160e01b600052603260045260246000fd5b60009182526020808320898452601b825260408085206001600160a01b03881686529092529220601690910290910191508361297857601c54601854601954604051632efd8a2b60e11b815273__$70a8301df1591ea57daa3a3395102354b6$__93635dfb14569361294793889388938b93601f9360029360040161589f565b60006040518083038186803b15801561295f57600080fd5b505af4158015612973573d6000803e3d6000fd5b505050505b60048101548015612a47576002546008546129a2916001600160a01b039081169116836000613f48565b6129ac9082615b98565b6040805160608101825282815260006020808301828152428486019081526005890180546001808201835591865284862096516003909102909601958655915191850191909155516002909301929092556004860155905182815291985088925089916001600160a01b038716917ffd05f38b7adc0899d3b1f0851df984f0263828d0b21615a6e2ae6cf7e22e9a6991015b60405180910390a35b612a4f613ede565b505050505050919050565b601a5460408051808201909152600f8152600080516020615c5383398151915260208201526060918491908210612aa45760405162461bcd60e51b8152600401610cf691906157c9565b506000848152601b602090815260408083206001600160a01b0387168452825280832060050180548251818502810185019093528083529193909284015b82821015612b325783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190612ae2565b5050505091505092915050565b601a5460408051808201909152600f8152600080516020615c5383398151915260208201526000918391908210612b895760405162461bcd60e51b8152600401610cf691906157c9565b50612b94600a613df5565b6000612b9e610be5565b90506000612baa613cd9565b90506000601a8681548110612bcf57634e487b7160e01b600052603260045260246000fd5b60009182526020808320898452601b825260408085206001600160a01b038816865290925292206016909102909101915083612c8057601c54601854601954604051632efd8a2b60e11b815273__$70a8301df1591ea57daa3a3395102354b6$__93635dfb145693612c4f93889388938b93601f9360029360040161589f565b60006040518083038186803b158015612c6757600080fd5b505af4158015612c7b573d6000803e3d6000fd5b505050505b60048101548015612a4757600254600854612caa916001600160a01b039081169116836000613f48565b612cb49082615b98565b90506000601a600081548110612cda57634e487b7160e01b600052603260045260246000fd5b600091825260208083206001600160a01b0389168452600080516020615c73833981519152909152604092839020601c546018546019549551632efd8a2b60e11b815260169095029093019550909373__$70a8301df1591ea57daa3a3395102354b6$__93635dfb145693612d5f93889388938e93601f93600293909260040161589f565b60006040518083038186803b158015612d7757600080fd5b505af4158015612d8b573d6000803e3d6000fd5b50506002546040516370a0823160e01b8152600093506001600160a01b0390911691506370a0823190612dc2903090600401615514565b60206040518083038186803b158015612dda57600080fd5b505afa158015612dee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e1291906152c4565b600854604051631e5c024d60e01b815291925073__$70a8301df1591ea57daa3a3395102354b6$__91631e5c024d91612e5d916001600160a01b03909116903090899060040161556d565b60006040518083038186803b158015612e7557600080fd5b505af4158015612e89573d6000803e3d6000fd5b50506002546040516370a0823160e01b81528493506001600160a01b0390911691506370a0823190612ebf903090600401615514565b60206040518083038186803b158015612ed757600080fd5b505afa158015612eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f0f91906152c4565b612f199190615b98565b60405163046ee55f60e51b815290945073__$70a8301df1591ea57daa3a3395102354b6$__90638ddcabe090612f58908690889060139060040161595b565b60206040518083038186803b158015612f7057600080fd5b505af4158015612f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fa891906152c4565b612fb29085615b98565b60405163d9df3bb560e01b8152909a508a945073__$70a8301df1591ea57daa3a3395102354b6$__9063d9df3bb590612ff990869086908990601f90600190600401615936565b60006040518083038186803b15801561301157600080fd5b505af4158015613025573d6000803e3d6000fd5b50506000600485015550506040518481528b906001600160a01b038916907fbcfe5f02a2564c2694c8305295f77c0162f6892236ecf70159c367a13b9396cd9060200160405180910390a3505050612a4f613ede565b601a5460408051808201909152600f8152600080516020615c53833981519152602082015260009183919082106130c55760405162461bcd60e51b8152600401610cf691906157c9565b506130d06009613df5565b60006130da610be5565b905060006130e6613cd9565b90506000601a868154811061310b57634e487b7160e01b600052603260045260246000fd5b60009182526020808320898452601b825260408085206001600160a01b0388168652909252922060169091029091019150836131bc57601c54601854601954604051632efd8a2b60e11b815273__$70a8301df1591ea57daa3a3395102354b6$__93635dfb14569361318b93889388938b93601f9360029360040161589f565b60006040518083038186803b1580156131a357600080fd5b505af41580156131b7573d6000803e3d6000fd5b505050505b60048101548015612a47576002546008546131e6916001600160a01b039081169116836000613f48565b6131f09082615b98565b600854604051631e5c024d60e01b815291985088925073__$70a8301df1591ea57daa3a3395102354b6$__91631e5c024d9161323e916001600160a01b03909116908890869060040161556d565b60006040518083038186803b15801561325657600080fd5b505af415801561326a573d6000803e3d6000fd5b505060006004850155505060405181815288906001600160a01b038616907f67c784b6702ebe22776ccc295ad0405729f41e9351f6a7d0746da88eea0066ce90602001612a3e565b6132ba613cd9565b6001600160a01b03166132cb6122a5565b6001600160a01b0316146132f15760405162461bcd60e51b8152600401610cf6906157fc565b6021819055604051818152600080516020615c93833981519152906020015b60405180910390a150565b601a5460408051808201909152600f8152600080516020615c538339815191526020820152839182106133615760405162461bcd60e51b8152600401610cf691906157c9565b5061336c6011613df5565b6000613376613cd9565b90506000601a858154811061339b57634e487b7160e01b600052603260045260246000fd5b60009182526020808320888452601b825260408085206001600160a01b038816865290925292819020601c546018546019549351632e4d9e8f60e21b815260169095029095019550909373__$70a8301df1591ea57daa3a3395102354b6$__9363b9367a3c9361341f93889388938d938c93601f93600293919290916004016158de565b60206040518083038186803b15801561343757600080fd5b505af415801561344b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061346f9190614fe6565b15611cda57826001600160a01b03167fd110e49478fb844bed47b2decc6a7487f83ef74fafcd9098a57135b250a0b2af87876040516134af9291906159ab565b60405180910390a2611ce2613ede565b6134c7613cd9565b6001600160a01b03166134d86122a5565b6001600160a01b0316146134fe5760405162461bcd60e51b8152600401610cf6906157fc565b6040805180820190915260098152682337b93134b23232b760b91b60208201526001600160a01b0382166135455760405162461bcd60e51b8152600401610cf691906157c9565b50600980546001600160a01b0319166001600160a01b0383161790556040517f8c2bee8063bb4464870b7dfa415ebb2fe80bfa73ba20d6fbf0d42791274667ff90613310908390615514565b601a5460408051808201909152600f8152600080516020615c53833981519152602082015260009184919082106135db5760405162461bcd60e51b8152600401610cf691906157c9565b506135e66005613df5565b60006135f0610be5565b905060006135fc613cd9565b90506000601a878154811061362157634e487b7160e01b600052603260045260246000fd5b600091825260208083208a8452601b825260408085206001600160a01b0388168652909252922060169091029091019150836136d257601c54601854601954604051632efd8a2b60e11b815273__$70a8301df1591ea57daa3a3395102354b6$__93635dfb1456936136a193889388938b93601f9360029360040161589f565b60006040518083038186803b1580156136b957600080fd5b505af41580156136cd573d6000803e3d6000fd5b505050505b861561129657604051634a9cd24b60e11b8152600481018390526001600160a01b03841660248201526044810188905273__$70a8301df1591ea57daa3a3395102354b6$__90639539a4969060640160206040518083038186803b15801561373957600080fd5b505af415801561374d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061377191906152c4565b825490975061378c906001600160a01b031630896000613f48565b6137969088615b98565b60405163046ee55f60e51b815290975073__$70a8301df1591ea57daa3a3395102354b6$__90638ddcabe0906137d59085908b9060139060040161595b565b60206040518083038186803b1580156137ed57600080fd5b505af4158015613801573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061382591906152c4565b61382f9088615b98565b96508695508761383d613cd9565b6001600160a01b03167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a158860405161387791815260200190565b60405180910390a360405163d9df3bb560e01b815273__$70a8301df1591ea57daa3a3395102354b6$__9063d9df3bb59061126590859085908b90601f90600190600401615936565b6138c8613cd9565b6001600160a01b03166138d96122a5565b6001600160a01b0316146138ff5760405162461bcd60e51b8152600401610cf6906157fc565b601f80546001600160a01b0319166001600160a01b0383169081179091556040517f064d113b0320648c1daeae09fd3ef54b6fb8973a98fc5b0239958672e2fc623390600090a250565b613951613cd9565b6001600160a01b03166139626122a5565b6001600160a01b0316146139885760405162461bcd60e51b8152600401610cf6906157fc565b60408051808201909152600f8152600080516020615c538339815191526020820152846139c85760405162461bcd60e51b8152600401610cf691906157c9565b5060408051808201909152600b81526a496e76616c69642066656560a81b6020820152611388821115613a0e5760405162461bcd60e51b8152600401610cf691906157c9565b508115613a1d57613a1d611de5565b604051631658eba760e21b8152601a600482015260248101859052604481018490526064810182905273__$70a8301df1591ea57daa3a3395102354b6$__90635963ae9c9060840160206040518083038186803b158015613a7d57600080fd5b505af4158015613a91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ab591906152c4565b601c5550505050565b613ac6613cd9565b6001600160a01b0316613ad76122a5565b6001600160a01b031614613afd5760405162461bcd60e51b8152600401610cf6906157fc565b6001600160a01b038116613b625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610cf6565b613b6b8161470b565b50565b613bc4604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b601a5460408051808201909152600f8152600080516020615c53833981519152602082015284918210613c0a5760405162461bcd60e51b8152600401610cf691906157c9565b50601c54601854601954604051621d07fd60e81b81526001600160a01b038716600482015260248101889052601a6044820152601b60648201526002608482015260a481019390935260c483019190915260e4820152600561010482015273__$70a8301df1591ea57daa3a3395102354b6$__90631d07fd0090610124016101406040518083038186803b158015613ca157600080fd5b505af4158015613cb5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061228e9190615222565b600060183610801590613cf05750613cf033611cea565b15613d04575060131936013560601c610aa4565b5033610aa4565b6000546001600160a01b0316331480613d3c5750613d27612296565b6001600160a01b0316336001600160a01b0316145b613d585760405162461bcd60e51b8152600401610cf69061582d565b6001600160a01b0381163014610f0c5760006001600160a01b03821615613d7f5781613d81565b305b6001549091506001600160a01b0316156123cf5760015460405163147ec66d60e11b81526001600160a01b03909116906328fd8cda90613dc79086908590600401615865565b600060405180830381600087803b158015613de157600080fd5b505af1158015611b49573d6000803e3d6000fd5b600e54604051630ed4fac360e41b81526001600160a01b039091169063ed4fac3090613e2590849060040161574b565b608060405180830381600087803b158015613e3f57600080fd5b505af1158015613e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613e779190615197565b8051600a8054909190829060ff19166001836012811115613ea857634e487b7160e01b600052602160045260246000fd5b021790555060208201516001820155604082015160028201556060909101516003909101805460ff191691151591909117905550565b600e60009054906101000a90046001600160a01b03166001600160a01b031663b9d91aea6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015613f2e57600080fd5b505af1158015613f42573d6000803e3d6000fd5b50505050565b600d5460009060ff168015613f5d5750600083115b1561228e576002546001600160a01b038681169116141561402e57600a54614027908590859060179060009060ff166012811115613fab57634e487b7160e01b600052602160045260246000fd5b6012811115613fca57634e487b7160e01b600052602160045260246000fd5b815260208082019290925260409081016000208151608081018352905463ffffffff8082168352600160201b8204811694830194909452600160401b8104841692820192909252600160601b9091049091166060820152856149b8565b905061228e565b600a54614115908690859060179060009060ff16601281111561406157634e487b7160e01b600052602160045260246000fd5b601281111561408057634e487b7160e01b600052602160045260246000fd5b81526020808201929092526040908101600020815160808082018452915463ffffffff8082168352600160201b8204811683870152600160401b8204811683860152600160601b90910416606080830191909152835192830184526013546001600160a01b03908116845260145481169584019590955260155485169383019390935260165490931691810191909152614a41565b95945050505050565b6123cf8363a9059cbb60e01b848460405160240161413d9291906155d2565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614bb1565b8015806141fc5750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e906141aa9030908690600401615528565b60206040518083038186803b1580156141c257600080fd5b505afa1580156141d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141fa91906152c4565b155b6142675760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610cf6565b6123cf8363095ea7b360e01b848460405160240161413d9291906155d2565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038216610f0c5760405162461bcd60e51b8152600401610cf691906157c9565b6000546001600160a01b031633148061430157506142ec612296565b6001600160a01b0316336001600160a01b0316145b61431d5760405162461bcd60e51b8152600401610cf69061582d565b6001600160a01b0381163014613f425760006001600160a01b038216156143445781614346565b305b600154604051636161293960e01b81529192506001600160a01b03169063616129399061437d908890889088908790600401615542565b600060405180830381600087803b15801561439757600080fd5b505af11580156143ab573d6000803e3d6000fd5b505050505050505050565b8060005b6000821180156143ca5750845481105b156147035760008582815481106143f157634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600201544261440e9190615b98565b61441a90610258615b79565b614425906018615b79565b61443090601e615b79565b905060008561444262278d0084615a45565b101561445a5761445562278d0083615a45565b61445c565b855b9050600087848154811061448057634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016001015487838a87815481106144b457634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600001546144d09190615b79565b6144da9190615a45565b6144e49190615b98565b90508481111561453e578488858154811061450f57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600101600082825461452f9190615a2d565b90915550600095506145919050565b6145488186615b98565b94508088858154811061456b57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600101600082825461458b9190615a2d565b90915550505b8784815481106145b157634e487b7160e01b600052603260045260246000fd5b9060005260206000209060030201600001548885815481106145e357634e487b7160e01b600052603260045260246000fd5b90600052602060002090600302016001015414156146ed57835b885461460b90600190615b98565b8110156146a4578861461e826001615a2d565b8154811061463c57634e487b7160e01b600052603260045260246000fd5b906000526020600020906003020189828154811061466a57634e487b7160e01b600052603260045260246000fd5b600091825260209091208254600390920201908155600180830154908201556002918201549101558061469c81615bdb565b9150506145fd565b50878054806146c357634e487b7160e01b600052603160045260246000fd5b600082815260208120600360001990930192830201818155600181018290556002015590556146fb565b836146f781615bdb565b9450505b5050506143ba565b509392505050565b601080546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000546001600160a01b031633148061478e5750614779612296565b6001600160a01b0316336001600160a01b0316145b6147aa5760405162461bcd60e51b8152600401610cf69061582d565b6001600160a01b03811630146123cf5760405163085b199160e11b815273__$88bebae22a3ad6e62b56c303176513ecf8$__906310b63322906147f69086908690600290600401615723565b60006040518083038186803b15801561480e57600080fd5b505af4158015614822573d6000803e3d6000fd5b505050507fb38e5ed9c964a80c4cf1080ee37772ec4a2552b0d5b9713873d3d6efb38e6fd8838333604051614859939291906156f3565b60405180910390a160006001600160a01b03821615614878578161487a565b305b6001549091506001600160a01b031615613f42576001546040516349443ceb60e11b81526001600160a01b039091169063928879d6906148c2908790879086906004016156f3565b600060405180830381600087803b1580156148dc57600080fd5b505af11580156148f0573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633148061492b5750614916612296565b6001600160a01b0316336001600160a01b0316145b6149475760405162461bcd60e51b8152600401610cf69061582d565b6001600160a01b03811630146123cf5760006001600160a01b0382161561496e5781614970565b305b6001549091506001600160a01b031615613f425760015460405163b8d05b1160e01b81526001600160a01b039091169063b8d05b11906148c290879087908690600401615795565b600f54604051632f12478f60e01b81526000916001600160a01b031690632f12478f906149ef9088908890889088906004016155eb565b602060405180830381600087803b158015614a0957600080fd5b505af1158015614a1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061411591906152c4565b6000808415614ba857835163ffffffff1615614a9d57614a636005600a615aab565b8451614a759063ffffffff1687615b79565b614a7f9190615a45565b9050614a9086846000015183614c83565b614a9a8183615a2d565b91505b602084015163ffffffff1615614af657614ab96005600a615aab565b6020850151614ace9063ffffffff1687615b79565b614ad89190615a45565b9050614ae986846020015183614c83565b614af38183615a2d565b91505b604084015163ffffffff1615614b4f57614b126005600a615aab565b6040850151614b279063ffffffff1687615b79565b614b319190615a45565b9050614b4286846040015183614c83565b614b4c8183615a2d565b91505b606084015163ffffffff1615614ba857614b6b6005600a615aab565b6060850151614b809063ffffffff1687615b79565b614b8a9190615a45565b9050614b9b86846060015183614c83565b614ba58183615a2d565b91505b50949350505050565b6000614c06826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614da09092919063ffffffff16565b8051909150156123cf5780806020019051810190614c249190614fe6565b6123cf5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610cf6565b600080846001600160a01b031663a9059cbb8585604051602401614ca89291906155d2565b6040516020818303038152906040529060e01b6020820180516001600160e01b038381831617835250505050604051614ce191906154f8565b6000604051808303816000865af19150503d8060008114614d1e576040519150601f19603f3d011682016040523d82523d6000602084013e614d23565b606091505b5091509150818015614d4d575080511580614d4d575080806020019051810190614d4d9190614fe6565b614d995760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006044820152606401610cf6565b5050505050565b6060614daf8484600085614db9565b90505b9392505050565b606082471015614e1a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610cf6565b6001600160a01b0385163b614e715760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610cf6565b600080866001600160a01b03168587604051614e8d91906154f8565b60006040518083038185875af1925050503d8060008114614eca576040519150601f19603f3d011682016040523d82523d6000602084013e614ecf565b606091505b5091509150614edf828286614eea565b979650505050505050565b60608315614ef9575081614db2565b825115614f095782518084602001fd5b8160405162461bcd60e51b8152600401610cf691906157c9565b803563ffffffff81168114611cfc57600080fd5b600060208284031215614f48578081fd5b8135614db281615c22565b60008060408385031215614f65578081fd5b8235614f7081615c22565b91506020830135614f8081615c22565b809150509250929050565b60008060008060808587031215614fa0578182fd5b8435614fab81615c22565b93506020850135614fbb81615c22565b92506040850135614fcb81615c22565b91506060850135614fdb81615c22565b939692955090935050565b600060208284031215614ff7578081fd5b8151614db281615c37565b600060208284031215615013578081fd5b8151614db281615c22565b600080600060608486031215615032578081fd5b833560078110615040578182fd5b9250602084013561505081615c22565b9150604084013561506081615c22565b809150509250925092565b60006020828403121561507c578081fd5b8135614db281615c45565b600080600083850360c081121561509c578182fd5b84356150a781615c45565b93506080601f19820112156150ba578182fd5b506150c560806159ef565b6150d160208601614f23565b81526150df60408601614f23565b60208201526150f060608601614f23565b604082015261510160808601614f23565b6060820152915060a084013561506081615c22565b60008082840360a0811215615129578283fd5b6080811215615136578283fd5b5061514160806159ef565b833561514c81615c22565b8152602084013561515c81615c22565b6020820152604084013561516f81615c22565b6040820152606084013561518281615c22565b606082015291506080830135614f8081615c22565b6000608082840312156151a8578081fd5b6151b260806159ef565b82516151bd81615c45565b80825250602083015160208201526040830151604082015260608301516151e381615c37565b60608201529392505050565b600060408284031215615200578081fd5b61520a60406159ef565b82518152602083015160208201528091505092915050565b6000610140808385031215615235578182fd5b61523e816159ef565b9050825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015260e083015160e08201526101008084015181830152506101208084015181830152508091505092915050565b6000602082840312156152bd578081fd5b5035919050565b6000602082840312156152d5578081fd5b5051919050565b600080604083850312156152ee578182fd5b823591506020830135614f8081615c22565b60008060008060808587031215615315578182fd5b84359350602085013561532781615c22565b9250604085013561533781615c37565b9396929550929360600135925050565b60008060408385031215615359578182fd5b82359150602083013560048110614f80578182fd5b60008060408385031215615380578182fd5b50508035926020909101359150565b600080604083850312156153a1578182fd5b505080516020909101519092909150565b600080600080608085870312156153c7578182fd5b8435935060208501359250604085013561533781615c22565b600080600080608085870312156153f5578182fd5b8435935060208501359250604085013561533781615c37565b6004811061541e5761541e615c0c565b9052565b6007811061541e5761541e615c0c565b6013811061541e5761541e615c0c565b805163ffffffff908116835260208083015182169084015260408083015182169084015260609182015116910152565b80516001600160a01b03908116835260208083015182169084015260408083015182169084015260609182015116910152565b805182526020808201518051828501529081015160408401526123cf565b8051825260208082015180518285015290810151604084015250604081015180516060840152602081015160808401526123cf565b6000825161550a818460208701615baf565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03948516815292841660208401529083166040830152909116606082015260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03989098168852602088019690965260408701949094526060860192909252608085015260a084015260c083015260e08201526101000190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b03851681526020810184905260e0810161560f6040830185615442565b82151560c083015295945050505050565b602080825282518282018190526000919060409081850190868401855b8281101561566c578151805185528681015187860152850151858501526060909301929085019060010161563d565b5091979650505050505050565b6001600160a01b038b168152602081018a905260408101899052606081018890526080810187905260a081018690526102c081016156ba60c08301876154a5565b6156c86101208301866154c3565b6156d66101c08301856154c3565b6156e46102608301846154a5565b9b9a5050505050505050505050565b606081016157018286615422565b6001600160a01b03938416602083015291909216604090920191909152919050565b606081016157318286615422565b6001600160a01b0393909316602082015260400152919050565b602081016122d18284615432565b60c081016157678286615432565b83602083015261228e6040830184615442565b60a081016157888285615432565b614db26020830184615442565b60c081016157a38286615432565b6157b06020830185615442565b6001600160a01b039290921660a0919091015292915050565b60006020825282518060208401526157e8816040850160208701615baf565b601f01601f19169190910160400192915050565b60208082526017908201527631b0b63632b91034b9903737ba103a34329037bbb732b960491b604082015260600190565b60208082526010908201526f496e76616c69642063616c6c6572203160801b604082015260600190565b608081016122d18284615472565b60a081016158738285615472565b6001600160a01b039290921660809190910152919050565b82815260a08101614db26020830184615472565b97885260208801969096526001600160a01b039490941660408701526060860192909252608085015260a084015260c083015260e08201526101000190565b8981526020810189905261012081016158fa604083018a61540e565b6001600160a01b03979097166060820152608081019590955260a085019390935260c084019190915260e0830152610100909101529392505050565b9485526020850193909352604084019190915260608301521515608082015260a00190565b9283526020830191909152604082015260600190565b948552602085019390935260408401919091526060830152608082015260a00190565b8151815260208083015190820152604081016122d1565b82815260408101614db2602083018461540e565b600060c082019050878252866020830152856040830152846060830152836080830152614edf60a083018461540e565b604051601f8201601f191681016001600160401b0381118282101715615a2557634e487b7160e01b600052604160045260246000fd5b604052919050565b60008219821115615a4057615a40615bf6565b500190565b600082615a6057634e487b7160e01b81526012600452602481fd5b500490565b80825b6001808611615a775750615aa2565b818704821115615a8957615a89615bf6565b80861615615a9657918102915b9490941c938002615a68565b94509492505050565b60006122ce6000198484600082615ac457506001614db2565b81615ad157506000614db2565b8160018114615ae75760028114615af157615b1e565b6001915050614db2565b60ff841115615b0257615b02615bf6565b6001841b915084821115615b1857615b18615bf6565b50614db2565b5060208310610133831016604e8410600b8410161715615b51575081810a83811115615b4c57615b4c615bf6565b614db2565b615b5e8484846001615a65565b808604821115615b7057615b70615bf6565b02949350505050565b6000816000190483118215151615615b9357615b93615bf6565b500290565b600082821015615baa57615baa615bf6565b500390565b60005b83811015615bca578181015183820152602001615bb2565b83811115613f425750506000910152565b6000600019821415615bef57615bef615bf6565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0381168114613b6b57600080fd5b8015158114613b6b57600080fd5b60138110613b6b57600080fdfe496e76616c696420706f6f6c2069640000000000000000000000000000000000584f46c60af19681376031579adb04a2416e54ee5505351c2a8435e3766026eaafbef49f2e149ae20a201034ffbdc25c493050d9aaa4b9a80d992cfc57821512a26469706673582212204e087cf993abc9cf16cab131a4ea57015c3ac5af9919a3b450eab6d86e85fa3e64736f6c63430008030033";

type CrossFarmConstructorParams =
  | [linkLibraryAddresses: CrossFarmLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrossFarmConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class CrossFarm__factory extends ContractFactory {
  constructor(...args: CrossFarmConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        CrossFarm__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: CrossFarmLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$70a8301df1591ea57daa3a3395102354b6\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/FarmLibrary.sol:FarmLibrary"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$88bebae22a3ad6e62b56c303176513ecf8\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/WireLibrary.sol:WireLibrary"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    crss: string,
    _crssPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrossFarm> {
    return super.deploy(
      crss,
      _crssPerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<CrossFarm>;
  }
  getDeployTransaction(
    crss: string,
    _crssPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      crss,
      _crssPerBlock,
      _startBlock,
      overrides || {}
    );
  }
  attach(address: string): CrossFarm {
    return super.attach(address) as CrossFarm;
  }
  connect(signer: Signer): CrossFarm__factory {
    return super.connect(signer) as CrossFarm__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrossFarmInterface {
    return new utils.Interface(_abi) as CrossFarmInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrossFarm {
    return new Contract(address, _abi, signerOrProvider) as CrossFarm;
  }
}

export interface CrossFarmLibraryAddresses {
  ["contracts/libraries/FarmLibrary.sol:FarmLibrary"]: string;
  ["contracts/libraries/WireLibrary.sol:WireLibrary"]: string;
}
