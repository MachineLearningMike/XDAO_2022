/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XCrssToken, XCrssTokenInterface } from "../XCrssToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum SessionType",
        name: "_sessionType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "develop",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "buyback",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidity",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "treasury",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct FeeRates",
        name: "_feeRates",
        type: "tuple",
      },
    ],
    name: "SetFeeRates",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "develop",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyback",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidity",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct FeeStores",
        name: "_feeStores",
        type: "tuple",
      },
    ],
    name: "SetFeeStores",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum NodeType",
        name: "nodeType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "SetNode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DELEGATION_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromBlock",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegator",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrentVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPriorVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "informOfPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextNode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prevNode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "safeCakeTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SessionType",
        name: "_sessionType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "develop",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "buyback",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidity",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "treasury",
            type: "uint32",
          },
        ],
        internalType: "struct FeeRates",
        name: "_feeRates",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setFeeRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "develop",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyback",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidity",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
        ],
        internalType: "struct FeeStores",
        name: "_feeStores",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setFeeStores",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NodeType",
        name: "nodeType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_prevNode",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nextNode",
        type: "address",
      },
    ],
    name: "wire",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200295438038062002954833981016040819052620000349162000222565b8181620000413362000077565b81516200005690600d906020850190620000c9565b5080516200006c90600e906020840190620000c9565b5050505050620002dc565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000d79062000289565b90600052602060002090601f016020900481019282620000fb576000855562000146565b82601f106200011657805160ff191683800117855562000146565b8280016001018555821562000146579182015b828111156200014657825182559160200191906001019062000129565b506200015492915062000158565b5090565b5b8082111562000154576000815560010162000159565b600082601f83011262000180578081fd5b81516001600160401b03808211156200019d576200019d620002c6565b604051601f8301601f19908116603f01168101908282118183101715620001c857620001c8620002c6565b81604052838152602092508683858801011115620001e4578485fd5b8491505b83821015620002075785820183015181830184015290820190620001e8565b838211156200021857848385830101525b9695505050505050565b6000806040838503121562000235578182fd5b82516001600160401b03808211156200024c578384fd5b6200025a868387016200016f565b9350602085015191508082111562000270578283fd5b506200027f858286016200016f565b9150509250929050565b600181811c908216806200029e57607f821691505b60208210811415620002c057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61266880620002ec6000396000f3fe608060405234801561001057600080fd5b50600436106101a15760003560e01c806306fdde03146101a6578063095ea7b3146101c457806318160ddd146101e757806320606b70146101f957806323b872dd1461020e578063249dfad71461022157806328fd8cda14610241578063313ce56714610256578063395093511461026557806340c10f1914610278578063587cde1e1461028b5780635c19a95c1461029e57806361612939146102b157806365715c56146102c45780636fcfff45146102d757806370a0823114610312578063715018a614610325578063782d6fe11461032d5780637ecebe0014610340578063893d20e8146103605780638da5cb5b1461036857806390e3677f14610370578063928879d61461038357806395d89b41146103965780639dc29fac1461039e578063a2e6ddcc146103b1578063a457c2d7146103c4578063a9059cbb146103d7578063b4b5ea57146103ea578063b8d05b11146103fd578063c3cda52014610410578063dd62ed3e14610423578063e7a324dc14610436578063f1127ed81461044b578063f2fde38b146104a2575b600080fd5b6101ae6104b5565b6040516101bb9190612357565b60405180910390f35b6101d76101d2366004612028565b610547565b60405190151581526020016101bb565b600c545b6040519081526020016101bb565b6101eb60008051602061259f83398151915281565b6101d761021c366004611fed565b610561565b600054610234906001600160a01b031681565b6040516101bb9190612272565b61025461024f3660046121cf565b610585565b005b604051601281526020016101bb565b6101d7610273366004612028565b6106ab565b610254610286366004612028565b6106cd565b610234610299366004611f4e565b610726565b6102546102ac366004611f4e565b610747565b6102546102bf366004611f9a565b610754565b600154610234906001600160a01b031681565b6102fd6102e5366004611f4e565b60116020526000908152604090205463ffffffff1681565b60405163ffffffff90911681526020016101bb565b6101eb610320366004611f4e565b61084b565b610254610866565b6101eb61033b366004612028565b6108a1565b6101eb61034e366004611f4e565b60126020526000908152604090205481565b610234610b06565b610234610b15565b61025461037e366004611f68565b610b24565b6102546103913660046120f8565b610bad565b6101ae610d4a565b6102546103ac366004612028565b610d59565b6102546103bf366004612028565b610db3565b6101d76103d2366004612028565b610f76565b6101d76103e5366004612028565b610ff1565b6101eb6103f8366004611f4e565b610fff565b61025461040b36600461213f565b611074565b61025461041e366004612051565b611132565b6101eb610431366004611f68565b6113dc565b6101eb6000805160206125bf83398151915281565b6104866104593660046120af565b60106020908152600092835260408084209091529082529020805460019091015463ffffffff9091169082565b6040805163ffffffff90931683526020830191909152016101bb565b6102546104b0366004611f4e565b611407565b6060600d80546104c49061251c565b80601f01602080910402602001604051908101604052809291908181526020018280546104f09061251c565b801561053d5780601f106105125761010080835404028352916020019161053d565b820191906000526020600020905b81548152906001019060200180831161052057829003601f168201915b5050505050905090565b6000336105558185856114a4565b60019150505b92915050565b60003361056f8582856115c8565b61057a85858561163c565b506001949350505050565b6000546001600160a01b03163314806105b657506105a1610b06565b6001600160a01b0316336001600160a01b0316145b6105db5760405162461bcd60e51b81526004016105d2906123df565b60405180910390fd5b6001600160a01b03811630146106a75760006001600160a01b038216156106025781610604565b305b6001549091506001600160a01b0316156106a5576001546040805163147ec66d60e11b815285516001600160a01b039081166004830152602087015181166024830152918601518216604482015260608601518216606482015283821660848201529116906328fd8cda9060a401600060405180830381600087803b15801561068c57600080fd5b505af11580156106a0573d6000803e3d6000fd5b505050505b505b5050565b6000336105558185856106be83836113dc565b6106c89190612471565b6114a4565b6005546001600160a01b031633146106f75760405162461bcd60e51b81526004016105d290612409565b6107018282611809565b6001600160a01b038083166000908152600f60205260408120546106a79216836118ea565b6001600160a01b038082166000908152600f6020526040902054165b919050565b6107513382611a49565b50565b6000546001600160a01b03163314806107855750610770610b06565b6001600160a01b0316336001600160a01b0316145b6107a15760405162461bcd60e51b81526004016105d2906123df565b6001600160a01b03811630146108455760006001600160a01b038216156107c857816107ca565b305b600154604051636161293960e01b81526001600160a01b038881166004830152878116602483015286811660448301528084166064830152929350911690636161293990608401600060405180830381600087803b15801561082b57600080fd5b505af115801561083f573d6000803e3d6000fd5b50505050505b50505050565b6001600160a01b03166000908152600a602052604090205490565b3361086f610b15565b6001600160a01b0316146108955760405162461bcd60e51b81526004016105d2906123aa565b61089f6000611ad8565b565b60004382106109025760405162461bcd60e51b815260206004820152602760248201527f435253533a3a6765745072696f72566f7465733a206e6f742079657420646574604482015266195c9b5a5b995960ca1b60648201526084016105d2565b6001600160a01b03831660009081526011602052604090205463ffffffff168061093057600091505061055b565b6001600160a01b038416600090815260106020526040812084916109556001856124f7565b63ffffffff908116825260208201929092526040016000205416116109be576001600160a01b0384166000908152601060205260408120906109986001846124f7565b63ffffffff1663ffffffff1681526020019081526020016000206001015491505061055b565b6001600160a01b038416600090815260106020908152604080832083805290915290205463ffffffff168310156109f957600091505061055b565b600080610a076001846124f7565b90505b8163ffffffff168163ffffffff161115610acf5760006002610a2c84846124f7565b610a3691906124b1565b610a4090836124f7565b6001600160a01b038816600090815260106020908152604080832063ffffffff8086168552908352928190208151808301909252805490931680825260019093015491810191909152919250871415610aa35760200151945061055b9350505050565b805163ffffffff16871115610aba57819350610ac8565b610ac56001836124f7565b92505b5050610a0a565b506001600160a01b038516600090815260106020908152604080832063ffffffff9094168352929052206001015491505092915050565b6000610b10610b15565b905090565b6009546001600160a01b031690565b610b2c610b06565b6001600160a01b0316336001600160a01b031614610b7f5760405162461bcd60e51b815260206004820152601060248201526f496e76616c69642063616c6c6572203360801b60448201526064016105d2565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055565b6000546001600160a01b0316331480610bde5750610bc9610b06565b6001600160a01b0316336001600160a01b0316145b610bfa5760405162461bcd60e51b81526004016105d2906123df565b6001600160a01b03811630146106a55760405163085b199160e11b815273__$88bebae22a3ad6e62b56c303176513ecf8$__906310b6332290610c4690869086906002906004016122cf565b60006040518083038186803b158015610c5e57600080fd5b505af4158015610c72573d6000803e3d6000fd5b505050507fb38e5ed9c964a80c4cf1080ee37772ec4a2552b0d5b9713873d3d6efb38e6fd8838333604051610ca99392919061229f565b60405180910390a160006001600160a01b03821615610cc85781610cca565b305b6001549091506001600160a01b031615610845576001546040516349443ceb60e11b81526001600160a01b039091169063928879d690610d129087908790869060040161229f565b600060405180830381600087803b158015610d2c57600080fd5b505af1158015610d40573d6000803e3d6000fd5b5050505050505050565b6060600e80546104c49061251c565b6005546001600160a01b03163314610d835760405162461bcd60e51b81526004016105d290612409565b610d8d8282611b2a565b6001600160a01b038083166000908152600f60205260408120546106a7921690836118ea565b6005546001600160a01b03163314610ddd5760405162461bcd60e51b81526004016105d290612409565b6002546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610e0e903090600401612272565b60206040518083038186803b158015610e2657600080fd5b505afa158015610e3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5e9190612246565b905080821115610ef25760025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610e9a9086908590600401612286565b602060405180830381600087803b158015610eb457600080fd5b505af1158015610ec8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eec91906120d8565b506106a5565b60025460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610f249086908690600401612286565b602060405180830381600087803b158015610f3e57600080fd5b505af1158015610f52573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084591906120d8565b60003381610f8482866113dc565b905083811015610fe45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105d2565b61057a82868684036114a4565b60003361055581858561163c565b6001600160a01b03811660009081526011602052604081205463ffffffff168061102a57600061106d565b6001600160a01b03831660009081526010602052604081209061104e6001846124f7565b63ffffffff1663ffffffff168152602001908152602001600020600101545b9392505050565b6000546001600160a01b03163314806110a55750611090610b06565b6001600160a01b0316336001600160a01b0316145b6110c15760405162461bcd60e51b81526004016105d2906123df565b6001600160a01b03811630146106a55760006001600160a01b038216156110e857816110ea565b305b6001549091506001600160a01b0316156108455760015460405163b8d05b1160e01b81526001600160a01b039091169063b8d05b1190610d12908790879086906004016122f7565b600060008051602061259f83398151915261114b6104b5565b805190602001206111594690565b60408051602080820195909552808201939093526060830191909152306080808401919091528151808403909101815260a0830182528051908401206000805160206125bf83398151915260c08401526001600160a01b038b1660e084015261010083018a90526101208084018a90528251808503909101815261014084019092528151919093012061190160f01b610160830152610162820183905261018282018190529192506000906101a20160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015611273573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166112e55760405162461bcd60e51b815260206004820152602660248201527f435253533a3a64656c656761746542795369673a20696e76616c6964207369676044820152656e617475726560d01b60648201526084016105d2565b6001600160a01b038116600090815260126020526040812080549161130983612557565b9190505589146113665760405162461bcd60e51b815260206004820152602260248201527f435253533a3a64656c656761746542795369673a20696e76616c6964206e6f6e604482015261636560f01b60648201526084016105d2565b874211156113c55760405162461bcd60e51b815260206004820152602660248201527f435253533a3a64656c656761746542795369673a207369676e617475726520656044820152651e1c1a5c995960d21b60648201526084016105d2565b6113cf818b611a49565b505050505b505050505050565b6001600160a01b039182166000908152600b6020908152604080832093909416825291909152205490565b33611410610b15565b6001600160a01b0316146114365760405162461bcd60e51b81526004016105d2906123aa565b6001600160a01b03811661149b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d2565b61075181611ad8565b6001600160a01b0383166115065760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105d2565b6001600160a01b0382166115675760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105d2565b6001600160a01b038381166000818152600b602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006115d484846113dc565b90506000198114610845578181101561162f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105d2565b61084584848484036114a4565b6001600160a01b0383166116a05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105d2565b6001600160a01b0382166117025760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105d2565b61170d8383836106a5565b6001600160a01b0383166000908152600a6020526040902054818110156117855760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105d2565b6001600160a01b038085166000908152600a60205260408082208585039055918516815290812080548492906117bc908490612471565b92505081905550826001600160a01b0316846001600160a01b03166000805160206125df833981519152846040516117f691815260200190565b60405180910390a36108458484846106a5565b6001600160a01b03821661185f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105d2565b61186b600083836106a5565b80600c600082825461187d9190612471565b90915550506001600160a01b0382166000908152600a6020526040812080548392906118aa908490612471565b90915550506040518181526001600160a01b038316906000906000805160206125df8339815191529060200160405180910390a36106a7600083836106a5565b816001600160a01b0316836001600160a01b03161415801561190c5750600081115b156106a5576001600160a01b038316156119af576001600160a01b03831660009081526011602052604081205463ffffffff16908161194c57600061198f565b6001600160a01b0385166000908152601060205260408120906119706001856124f7565b63ffffffff1663ffffffff168152602001908152602001600020600101545b9050600061199d8285611c79565b90506119ab86848484611cbb565b5050505b6001600160a01b038216156106a5576001600160a01b03821660009081526011602052604081205463ffffffff1690816119ea576000611a2d565b6001600160a01b038416600090815260106020526040812090611a0e6001856124f7565b63ffffffff1663ffffffff168152602001908152602001600020600101545b90506000611a3b8285611e5d565b90506113d485848484611cbb565b6001600160a01b038083166000908152600f602052604081205490911690611a708461084b565b6001600160a01b038581166000818152600f602052604080822080546001600160a01b031916898616908117909155905194955093928616927f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a46108458284836118ea565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216611b8a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105d2565b611b96826000836106a5565b6001600160a01b0382166000908152600a602052604090205481811015611c0a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105d2565b6001600160a01b0383166000908152600a602052604081208383039055600c8054849290611c399084906124e0565b90915550506040518281526000906001600160a01b038516906000805160206125df8339815191529060200160405180910390a36106a5836000846106a5565b600061106d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611eba565b6000611cdf436040518060600160405280603481526020016125ff60349139611ef4565b905060008463ffffffff16118015611d3957506001600160a01b038516600090815260106020526040812063ffffffff831691611d1d6001886124f7565b63ffffffff908116825260208201929092526040016000205416145b15611d82576001600160a01b03851660009081526010602052604081208391611d636001886124f7565b63ffffffff168152602081019190915260400160002060010155611e12565b60408051808201825263ffffffff838116825260208083018681526001600160a01b038a166000908152601083528581208a851682529092529390209151825463ffffffff191691161781559051600191820155611de1908590612489565b6001600160a01b0386166000908152601160205260409020805463ffffffff191663ffffffff929092169190911790555b60408051848152602081018490526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b600080611e6a8385612471565b90508381101561106d5760405162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b60448201526064016105d2565b60008184841115611ede5760405162461bcd60e51b81526004016105d29190612357565b506000611eeb84866124e0565b95945050505050565b600081600160201b8410611f1b5760405162461bcd60e51b81526004016105d29190612357565b509192915050565b80356001600160a01b038116811461074257600080fd5b803563ffffffff8116811461074257600080fd5b600060208284031215611f5f578081fd5b61106d82611f23565b60008060408385031215611f7a578081fd5b611f8383611f23565b9150611f9160208401611f23565b90509250929050565b60008060008060808587031215611faf578182fd5b611fb885611f23565b9350611fc660208601611f23565b9250611fd460408601611f23565b9150611fe260608601611f23565b905092959194509250565b600080600060608486031215612001578283fd5b61200a84611f23565b925061201860208501611f23565b9150604084013590509250925092565b6000806040838503121561203a578182fd5b61204383611f23565b946020939093013593505050565b60008060008060008060c08789031215612069578182fd5b61207287611f23565b95506020870135945060408701359350606087013560ff81168114612095578283fd5b9598949750929560808101359460a0909101359350915050565b600080604083850312156120c1578182fd5b6120ca83611f23565b9150611f9160208401611f3a565b6000602082840312156120e9578081fd5b8151801515811461106d578182fd5b60008060006060848603121561210c578283fd5b83356007811061211a578384fd5b925061212860208501611f23565b915061213660408501611f23565b90509250925092565b600080600083850360c0811215612154578182fd5b843560138110612162578283fd5b93506080601f1982011215612175578182fd5b506121806080612433565b61218c60208601611f3a565b815261219a60408601611f3a565b60208201526121ab60608601611f3a565b60408201526121bc60808601611f3a565b6060820152915061213660a08501611f23565b60008082840360a08112156121e2578283fd5b60808112156121ef578283fd5b506121fa6080612433565b61220384611f23565b815261221160208501611f23565b602082015261222260408501611f23565b604082015261223360608501611f23565b60608201529150611f9160808401611f23565b600060208284031215612257578081fd5b5051919050565b6007811061226e5761226e612588565b9052565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b606081016122ad828661225e565b6001600160a01b03938416602083015291909216604090920191909152919050565b606081016122dd828661225e565b6001600160a01b0393909316602082015260400152919050565b60c081016013851061230b5761230b612588565b84825263ffffffff8085511660208401528060208601511660408401528060408601511660608401528060608601511660808401525060018060a01b03831660a0830152949350505050565b6000602080835283518082850152825b8181101561238357858101830151858201604001528201612367565b818111156123945783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f496e76616c69642063616c6c6572203160801b604082015260600190565b60208082526010908201526f21b937b9b99d102337b93134b23232b760811b604082015260600190565b604051601f8201601f191681016001600160401b038111828210171561246957634e487b7160e01b600052604160045260246000fd5b604052919050565b6000821982111561248457612484612572565b500190565b600063ffffffff8083168185168083038211156124a8576124a8612572565b01949350505050565b600063ffffffff808416806124d457634e487b7160e01b83526012600452602483fd5b92169190910492915050565b6000828210156124f2576124f2612572565b500390565b600063ffffffff8381169083168181101561251457612514612572565b039392505050565b600181811c9082168061253057607f821691505b6020821081141561255157634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561256b5761256b612572565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfe8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adfddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef435253533a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d62657220657863656564732033322062697473a264697066735822122049997f7d27fe16b98124ef57224a331ebec0babf163e52455375dfbf0da9a9ca64736f6c63430008030033";

type XCrssTokenConstructorParams =
  | [linkLibraryAddresses: XCrssTokenLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XCrssTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class XCrssToken__factory extends ContractFactory {
  constructor(...args: XCrssTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        XCrssToken__factory.linkBytecode(linkLibraryAddresses),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: XCrssTokenLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$88bebae22a3ad6e62b56c303176513ecf8\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/WireLibrary.sol:WireLibrary"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XCrssToken> {
    return super.deploy(name, symbol, overrides || {}) as Promise<XCrssToken>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  attach(address: string): XCrssToken {
    return super.attach(address) as XCrssToken;
  }
  connect(signer: Signer): XCrssToken__factory {
    return super.connect(signer) as XCrssToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XCrssTokenInterface {
    return new utils.Interface(_abi) as XCrssTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XCrssToken {
    return new Contract(address, _abi, signerOrProvider) as XCrssToken;
  }
}

export interface XCrssTokenLibraryAddresses {
  ["contracts/libraries/WireLibrary.sol:WireLibrary"]: string;
}
