/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ISessionRegistrar,
  ISessionRegistrarInterface,
} from "../ISessionRegistrar";

const _abi = [
  {
    inputs: [],
    name: "getInnermostSType",
    outputs: [
      {
        internalType: "enum SessionType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOutermostSType",
    outputs: [
      {
        internalType: "enum SessionType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SessionType",
        name: "sessionType",
        type: "uint8",
      },
    ],
    name: "registerSession",
    outputs: [
      {
        components: [
          {
            internalType: "enum SessionType",
            name: "sessionType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "session",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastSession",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOriginAction",
            type: "bool",
          },
        ],
        internalType: "struct SessionParams",
        name: "sessionParams",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unregisterSession",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ISessionRegistrar__factory {
  static readonly abi = _abi;
  static createInterface(): ISessionRegistrarInterface {
    return new utils.Interface(_abi) as ISessionRegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISessionRegistrar {
    return new Contract(address, _abi, signerOrProvider) as ISessionRegistrar;
  }
}
