/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Repay, RepayInterface } from "../Repay";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_crss",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rCrss",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rSyrup",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cakePerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum SessionType",
        name: "_sessionType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "develop",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "buyback",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidity",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "treasury",
            type: "uint32",
          },
        ],
        indexed: false,
        internalType: "struct FeeRates",
        name: "_feeRates",
        type: "tuple",
      },
    ],
    name: "SetFeeRates",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "develop",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyback",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidity",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct FeeStores",
        name: "_feeStores",
        type: "tuple",
      },
    ],
    name: "SetFeeStores",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum NodeType",
        name: "nodeType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "SetNode",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cakePerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "crss",
    outputs: [
      {
        internalType: "contract CrssToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "enterStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUserState",
    outputs: [
      {
        internalType: "uint256",
        name: "_deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pendingCrss",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lpBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "crssBalance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "harvestRepay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "informOfPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "leaveStaking",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrator",
    outputs: [
      {
        internalType: "contract IMigratorChef",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextNode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingCake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accCakePerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prevNode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rCrss",
    outputs: [
      {
        internalType: "contract RCrssToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rSyrup",
    outputs: [
      {
        internalType: "contract RSyrupBar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resume",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SessionType",
        name: "_sessionType",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "develop",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "buyback",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "liquidity",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "treasury",
            type: "uint32",
          },
        ],
        internalType: "struct FeeRates",
        name: "_feeRates",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setFeeRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "develop",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyback",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidity",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasury",
            type: "address",
          },
        ],
        internalType: "struct FeeStores",
        name: "_feeStores",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setFeeStores",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMigratorChef",
        name: "_migrator",
        type: "address",
      },
    ],
    name: "setMigrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum NodeType",
        name: "nodeType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "setNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setUpRepayPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "multiplierNumber",
        type: "uint256",
      },
    ],
    name: "updateMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_crssPerBlock",
        type: "uint256",
      },
    ],
    name: "updatgeCrssPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_prevNode",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nextNode",
        type: "address",
      },
    ],
    name: "wire",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6001601455600060185560c0604052600c60808190526b5a65726f204164647265737360a01b60a09081526200003991601b9190620002a5565b503480156200004757600080fd5b5060405162002e7038038062002e708339810160408190526200006a916200034b565b620000753362000253565b601b6001600160a01b038516620000aa5760405162461bcd60e51b8152600401620000a19190620003af565b60405180910390fd5b50601080546001600160a01b0319166001600160a01b0387811691909117909155601b908516620000f05760405162461bcd60e51b8152600401620000a19190620003af565b50601180546001600160a01b0319166001600160a01b0386811691909117909155601b908416620001365760405162461bcd60e51b8152600401620000a19190620003af565b50601280546001600160a01b03199081166001600160a01b039586161790915560139290925560198190556040805160808101825294841685526103e86020860181815291860192835260006060870181815260168054600181018255925296517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428960049092029182018054909616961695909517909355517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428a840155517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428b83015591517fd833147d7dc355ba459fc788f669e58cfaf9dc25ddcd0702e87d69c7b512428c9091015560185550601a805460ff19169055620004b3565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620002b3906200045d565b90600052602060002090601f016020900481019282620002d7576000855562000322565b82601f10620002f257805160ff191683800117855562000322565b8280016001018555821562000322579182015b828111156200032257825182559160200191906001019062000305565b506200033092915062000334565b5090565b5b8082111562000330576000815560010162000335565b600080600080600060a0868803121562000363578081fd5b855162000370816200049a565b602087015190955062000383816200049a565b604087015190945062000396816200049a565b6060870151608090970151959894975095949392505050565b6000602080835281845483600182811c915080831680620003d157607f831692505b858310811415620003f057634e487b7160e01b87526022600452602487fd5b87860183815260200181801562000410576001811462000422576200044e565b60ff198616825287820196506200044e565b60008b815260209020895b8681101562000448578154848201529085019089016200042d565b83019750505b50949998505050505050505050565b600181811c908216806200047257607f821691505b602082108114156200049457634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b0381168114620004b057600080fd5b50565b6129ad80620004c36000396000f3fe608060405234801561001057600080fd5b50600436106101cd5760003560e01c8063046f7da2146101d25780630755e0b6146101dc578063081e3eda146101f85780631058d281146102005780631175a1dd146102135780631526fe271461022657806317caf6f11461026357806323cf31181461026c578063249dfad71461027f57806328fd8cda1461029f57806341441d3b146102b2578063416ae768146102c5578063454b0608146102f857806348cd4cb11461030b57806351eb05a6146103145780635238ad3b146103275780635312ea8e1461033a5780635c975abb1461034d5780635ffe61461461036a578063616129391461037d578063630b5ba11461039057806365715c5614610398578063715018a6146103ab5780637cd07e47146103b35780638456cb59146103c6578063893d20e8146103ce5780638aa28550146103d65780638da5cb5b146103df5780638dbb1e3a146103e757806390e3677f146103fa578063917bdfd21461040d578063928879d61461042057806393f1a40b14610433578063a67454b31461047a578063b8a4bafb14610482578063b8d05b1114610495578063d1e6ad01146104a8578063f1b6e96c146104bb578063f2fde38b146104ce575b600080fd5b6101da6104e1565b005b6101e560135481565b6040519081526020015b60405180910390f35b6016546101e5565b6101da61020e3660046125e5565b610525565b6101e5610221366004612615565b61069b565b6102396102343660046125e5565b610821565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101ef565b6101e560185481565b6101da61027a36600461234d565b610865565b600054610292906001600160a01b031681565b6040516101ef919061269a565b6101da6102ad36600461250e565b6108b6565b6101da6102c03660046125e5565b6109d3565b6102d86102d336600461234d565b610afe565b6040805194855260208501939093529183015260608201526080016101ef565b6101da6103063660046125e5565b610c74565b6101e560195481565b6101da6103223660046125e5565b610ef3565b601254610292906001600160a01b031681565b6101da6103483660046125e5565b6110f3565b601a5461035a9060ff1681565b60405190151581526020016101ef565b6101da6103783660046125e5565b6111a3565b6101da61038b3660046123bd565b6111d7565b6101da6112ce565b600154610292906001600160a01b031681565b6101da6112f5565b601554610292906001600160a01b031681565b6101da611330565b61029261136e565b6101e560145481565b61029261137d565b6101e56103f5366004612639565b61138c565b6101da610408366004612385565b6113a7565b601154610292906001600160a01b031681565b6101da61042e366004612432565b611430565b610465610441366004612615565b60176020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101ef565b6101da61149f565b6101da6104903660046125e5565b611727565b6101da6104a336600461247f565b61182c565b6101da6104b63660046125e5565b611922565b601054610292906001600160a01b031681565b6101da6104dc36600461234d565b611956565b336104ea61137d565b6001600160a01b0316146105195760405162461bcd60e51b8152600401610510906127b7565b60405180910390fd5b601a805460ff19169055565b6000601660008154811061054957634e487b7160e01b600052603260045260246000fd5b6000918252602080832033845260008051602061295883398151915290915260409092208054600490920290920192508311156105bd5760405162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b6044820152606401610510565b6105c76000610ef3565b600061060182600101546105fb64e8d4a510006105f5876003015487600001546119f390919063ffffffff16565b90611a72565b90611ab1565b90508015610613576106133382611af3565b831561063d5781546106259085611ab1565b8255825461063d906001600160a01b03163386611b5b565b600383015482546106589164e8d4a51000916105f5916119f3565b600183015560405184815260009033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a350505050565b600080601684815481106106bf57634e487b7160e01b600052603260045260246000fd5b600091825260208083208784526017825260408085206001600160a01b038981168752935280852060049485029092016003810154815492516370a0823160e01b815291975092959294929391909116916370a08231916107229130910161269a565b60206040518083038186803b15801561073a57600080fd5b505afa15801561074e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077291906125fd565b905083600201544311801561078657508015155b156107ec57600061079b85600201544361138c565b905060006107c86018546105f588600101546107c2601354876119f390919063ffffffff16565b906119f3565b90506107e76107e0846105f58464e8d4a510006119f3565b8590611bb1565b935050505b61081483600101546105fb64e8d4a510006105f58688600001546119f390919063ffffffff16565b9450505050505b92915050565b6016818154811061083157600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b3361086e61137d565b6001600160a01b0316146108945760405162461bcd60e51b8152600401610510906127b7565b601580546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314806108e757506108d261136e565b6001600160a01b0316336001600160a01b0316145b6109035760405162461bcd60e51b8152600401610510906127ec565b6001600160a01b03811630146109cf5760006001600160a01b0382161561092a578161092c565b305b6001549091506001600160a01b0316156109cd576001546040805163147ec66d60e11b815285516001600160a01b039081166004830152602087015181166024830152918601518216604482015260608601518216606482015283821660848201529116906328fd8cda9060a401600060405180830381600087803b1580156109b457600080fd5b505af11580156109c8573d6000803e3d6000fd5b505050505b505b5050565b600060166000815481106109f757634e487b7160e01b600052603260045260246000fd5b6000918252602080832033845260008051602061295883398151915290915260408320600490920201925090610a2c90610ef3565b805415610a75576000610a6182600101546105fb64e8d4a510006105f5876003015487600001546119f390919063ffffffff16565b90508015610a7357610a733382611af3565b505b8215610aa1578154610a92906001600160a01b0316333086611c0e565b8054610a9e9084611bb1565b81555b60038201548154610abc9164e8d4a51000916105f5916119f3565b600182015560405183815260009033907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a3505050565b60008060008060008060168281548110610b2857634e487b7160e01b600052603260045260246000fd5b600091825260208083208584526017825260408085206001600160a01b038d16865290925290832080549950600490920201925090610b67908961069b565b82546040516370a0823160e01b81529197506001600160a01b0316906370a0823190610b97908b9060040161269a565b60206040518083038186803b158015610baf57600080fd5b505afa158015610bc3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be791906125fd565b6010546040516370a0823160e01b81529196506001600160a01b0316906370a0823190610c18908b9060040161269a565b60206040518083038186803b158015610c3057600080fd5b505afa158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6891906125fd565b93505050509193509193565b6015546001600160a01b0316610cc35760405162461bcd60e51b815260206004820152601460248201527336b4b3b930ba329d1037379036b4b3b930ba37b960611b6044820152606401610510565b600060168281548110610ce657634e487b7160e01b600052603260045260246000fd5b60009182526020822060049182020180546040516370a0823160e01b81529194506001600160a01b0316929183916370a0823191610d269130910161269a565b60206040518083038186803b158015610d3e57600080fd5b505afa158015610d52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7691906125fd565b601554909150610d93906001600160a01b03848116911683611c46565b60155460405163ce5494bb60e01b81526000916001600160a01b03169063ce5494bb90610dc490869060040161269a565b602060405180830381600087803b158015610dde57600080fd5b505af1158015610df2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e169190612369565b6040516370a0823160e01b81529091506001600160a01b038216906370a0823190610e4590309060040161269a565b60206040518083038186803b158015610e5d57600080fd5b505afa158015610e71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9591906125fd565b8214610ed25760405162461bcd60e51b815260206004820152600c60248201526b1b5a59dc985d194e8818985960a21b6044820152606401610510565b83546001600160a01b0319166001600160a01b039190911617909255505050565b601a5460ff1615610f3a5760405162461bcd60e51b815260206004820152601160248201527014995c185e4819985c9b481c185d5cd959607a1b6044820152606401610510565b600060168281548110610f5d57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201905080600201544311610f7e57506110f0565b80546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610fae90309060040161269a565b60206040518083038186803b158015610fc657600080fd5b505afa158015610fda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ffe91906125fd565b9050806110125750436002909101556110f0565b600061102283600201544361138c565b905060006110496018546105f586600101546107c2601354876119f390919063ffffffff16565b6010546012546040516340c10f1960e01b81529293506001600160a01b03918216926340c10f199261108192169085906004016126ae565b600060405180830381600087803b15801561109b57600080fd5b505af11580156110af573d6000803e3d6000fd5b505050506110dd6110d2846105f564e8d4a51000856119f390919063ffffffff16565b600386015490611bb1565b6003850155505043600290920191909155505b50565b60006016828154811061111657634e487b7160e01b600052603260045260246000fd5b6000918252602080832085845260178252604080852033808752935290932080546004909302909301805490945061115b926001600160a01b03919091169190611b5b565b8054604051908152839033907fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959060200160405180910390a360008082556001909101555050565b336111ac61137d565b6001600160a01b0316146111d25760405162461bcd60e51b8152600401610510906127b7565b601455565b6000546001600160a01b031633148061120857506111f361136e565b6001600160a01b0316336001600160a01b0316145b6112245760405162461bcd60e51b8152600401610510906127ec565b6001600160a01b03811630146112c85760006001600160a01b0382161561124b578161124d565b305b600154604051636161293960e01b81526001600160a01b038881166004830152878116602483015286811660448301528084166064830152929350911690636161293990608401600060405180830381600087803b1580156112ae57600080fd5b505af11580156112c2573d6000803e3d6000fd5b50505050505b50505050565b60165460005b818110156109cf576112e581610ef3565b6112ee816128ee565b90506112d4565b336112fe61137d565b6001600160a01b0316146113245760405162461bcd60e51b8152600401610510906127b7565b61132e6000611d59565b565b3361133961137d565b6001600160a01b03161461135f5760405162461bcd60e51b8152600401610510906127b7565b601a805460ff19166001179055565b600061137861137d565b905090565b6009546001600160a01b031690565b6014546000906113a0906107c28486611ab1565b9392505050565b6113af61136e565b6001600160a01b0316336001600160a01b0316146114025760405162461bcd60e51b815260206004820152601060248201526f496e76616c69642063616c6c6572203360801b6044820152606401610510565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055565b6001600160a01b03811630146109cd57600083600681111561146257634e487b7160e01b600052602160045260246000fd5b141561149457600e80546001600160a01b0384166001600160a01b03199182168117909255600f805490911690911790555b6109cd838383611dab565b60115460408051635ec2a20560e11b815290516000926001600160a01b03169163bd85440a916004808301926020929190829003018186803b1580156114e457600080fd5b505afa1580156114f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151c91906125fd565b905060005b818110156109cf5760115460405163dafee77d60e01b8152600481018390526000916001600160a01b03169063dafee77d9060240160206040518083038186803b15801561156e57600080fd5b505afa158015611582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a69190612369565b6001600160a01b038082166000908152600080516020612958833981519152602052604080822060115491516370a0823160e01b815294955093919216906370a08231906115f890869060040161269a565b60206040518083038186803b15801561161057600080fd5b505afa158015611624573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164891906125fd565b601154604051632770a7eb60e21b81529192506001600160a01b031690639dc29fac9061167b90869085906004016126ae565b600060405180830381600087803b15801561169557600080fd5b505af11580156116a9573d6000803e3d6000fd5b50506011546040516340c10f1960e01b81526001600160a01b0390911692506340c10f1991506116df90309085906004016126ae565b600060405180830381600087803b1580156116f957600080fd5b505af115801561170d573d6000803e3d6000fd5b50505091555081905061171f816128ee565b915050611521565b6117316012611f10565b3361173c6000610ef3565b6000601660008154811061176057634e487b7160e01b600052603260045260246000fd5b600091825260208083206001600160a01b03861684526000805160206129588339815191529091526040832060018101546003600490940290920192830154815493955090939264e8d4a51000916117b79161288c565b6117c1919061286c565b6117cb91906128ab565b9050808511156117d9578094505b6117e38486611af3565b6117ed85826128ab565b6003840154835464e8d4a51000916118049161288c565b61180e919061286c565b61181891906128ab565b6001830155611825611ff9565b5050505050565b6000546001600160a01b031633148061185d575061184861136e565b6001600160a01b0316336001600160a01b0316145b6118795760405162461bcd60e51b8152600401610510906127ec565b6001600160a01b03811630146109cd5760006001600160a01b038216156118a057816118a2565b305b6001549091506001600160a01b0316156112c85760015460405163b8d05b1160e01b81526001600160a01b039091169063b8d05b11906118ea9087908790869060040161272d565b600060405180830381600087803b15801561190457600080fd5b505af1158015611918573d6000803e3d6000fd5b5050505050505050565b3361192b61137d565b6001600160a01b0316146119515760405162461bcd60e51b8152600401610510906127b7565b601355565b3361195f61137d565b6001600160a01b0316146119855760405162461bcd60e51b8152600401610510906127b7565b6001600160a01b0381166119ea5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610510565b6110f081611d59565b600082611a025750600061081b565b6000611a0e838561288c565b905082611a1b858361286c565b146113a05760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b6064820152608401610510565b60006113a083836040518060400160405280601a815260200179536166654d6174683a206469766973696f6e206279207a65726f60301b81525061205d565b60006113a083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612094565b601254604051630806a43960e41b81526001600160a01b039091169063806a439090611b2590859085906004016126ae565b600060405180830381600087803b158015611b3f57600080fd5b505af1158015611b53573d6000803e3d6000fd5b505050505050565b6109cd8363a9059cbb60e01b8484604051602401611b7a9291906126ae565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526120c5565b600080611bbe8385612854565b9050838110156113a05760405162461bcd60e51b815260206004820152601b60248201527a536166654d6174683a206164646974696f6e206f766572666c6f7760281b6044820152606401610510565b6040516001600160a01b03808516602483015283166044820152606481018290526112c89085906323b872dd60e01b90608401611b7a565b801580611ccf5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b158015611c9557600080fd5b505afa158015611ca9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ccd91906125fd565b155b611d3a5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610510565b6109cd8363095ea7b360e01b8484604051602401611b7a9291906126ae565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000546001600160a01b0316331480611ddc5750611dc761136e565b6001600160a01b0316336001600160a01b0316145b611df85760405162461bcd60e51b8152600401610510906127ec565b6001600160a01b03811630146109cd5760405163085b199160e11b815273__$88bebae22a3ad6e62b56c303176513ecf8$__906310b6332290611e4490869086906002906004016126f7565b60006040518083038186803b158015611e5c57600080fd5b505af4158015611e70573d6000803e3d6000fd5b505050507fb38e5ed9c964a80c4cf1080ee37772ec4a2552b0d5b9713873d3d6efb38e6fd8838333604051611ea7939291906126c7565b60405180910390a160006001600160a01b03821615611ec65781611ec8565b305b6001549091506001600160a01b0316156112c8576001546040516349443ceb60e11b81526001600160a01b039091169063928879d6906118ea908790879086906004016126c7565b600e54604051630ed4fac360e41b81526001600160a01b039091169063ed4fac3090611f4090849060040161271f565b608060405180830381600087803b158015611f5a57600080fd5b505af1158015611f6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f92919061258f565b8051600a8054909190829060ff19166001836012811115611fc357634e487b7160e01b600052602160045260246000fd5b021790555060208201516001820155604082015160028201556060909101516003909101805460ff191691151591909117905550565b600e60009054906101000a90046001600160a01b03166001600160a01b031663b9d91aea6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561204957600080fd5b505af11580156112c8573d6000803e3d6000fd5b6000818361207e5760405162461bcd60e51b81526004016105109190612784565b50600061208b848661286c565b95945050505050565b600081848411156120b85760405162461bcd60e51b81526004016105109190612784565b50600061208b84866128ab565b600061211a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166121979092919063ffffffff16565b8051909150156109cd57808060200190518101906121389190612418565b6109cd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610510565b60606121a684846000856121ae565b949350505050565b60608247101561220f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610510565b612218856122dd565b6122645760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610510565b600080866001600160a01b03168587604051612280919061267e565b60006040518083038185875af1925050503d80600081146122bd576040519150601f19603f3d011682016040523d82523d6000602084013e6122c2565b606091505b50915091506122d28282866122f0565b979650505050505050565b6001600160a01b0381163b15155b919050565b606083156122ff5750816113a0565b82511561230f5782518084602001fd5b8160405162461bcd60e51b81526004016105109190612784565b805180151581146122eb57600080fd5b803563ffffffff811681146122eb57600080fd5b60006020828403121561235e578081fd5b81356113a081612935565b60006020828403121561237a578081fd5b81516113a081612935565b60008060408385031215612397578081fd5b82356123a281612935565b915060208301356123b281612935565b809150509250929050565b600080600080608085870312156123d2578182fd5b84356123dd81612935565b935060208501356123ed81612935565b925060408501356123fd81612935565b9150606085013561240d81612935565b939692955090935050565b600060208284031215612429578081fd5b6113a082612329565b600080600060608486031215612446578283fd5b833560078110612454578384fd5b9250602084013561246481612935565b9150604084013561247481612935565b809150509250925092565b600080600083850360c0811215612494578384fd5b843561249f8161294a565b93506080601f19820112156124b2578283fd5b506124bd6080612816565b6124c960208601612339565b81526124d760408601612339565b60208201526124e860608601612339565b60408201526124f960808601612339565b6060820152915060a084013561247481612935565b60008082840360a0811215612521578283fd5b608081121561252e578283fd5b506125396080612816565b833561254481612935565b8152602084013561255481612935565b6020820152604084013561256781612935565b6040820152606084013561257a81612935565b6060820152915060808301356123b281612935565b6000608082840312156125a0578081fd5b6125aa6080612816565b82516125b58161294a565b8082525060208301516020820152604083015160408201526125d960608401612329565b60608201529392505050565b6000602082840312156125f6578081fd5b5035919050565b60006020828403121561260e578081fd5b5051919050565b60008060408385031215612627578182fd5b8235915060208301356123b281612935565b6000806040838503121561264b578182fd5b50508035926020909101359150565b6007811061266a5761266a61291f565b9052565b6013811061266a5761266a61291f565b600082516126908184602087016128c2565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b606081016126d5828661265a565b6001600160a01b03938416602083015291909216604090920191909152919050565b60608101612705828661265a565b6001600160a01b0393909316602082015260400152919050565b6020810161081b828461266e565b60c0810161273b828661266e565b63ffffffff8085511660208401528060208601511660408401528060408601511660608401528060608601511660808401525060018060a01b03831660a0830152949350505050565b60006020825282518060208401526127a38160408501602087016128c2565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f496e76616c69642063616c6c6572203160801b604082015260600190565b604051601f8201601f191681016001600160401b038111828210171561284c57634e487b7160e01b600052604160045260246000fd5b604052919050565b6000821982111561286757612867612909565b500190565b60008261288757634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156128a6576128a6612909565b500290565b6000828210156128bd576128bd612909565b500390565b60005b838110156128dd5781810151838201526020016128c5565b838111156112c85750506000910152565b600060001982141561290257612902612909565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03811681146110f057600080fd5b601381106110f057600080fdfed840e16649f6b9a295d95876f4633d3a6b10b55e8162971cf78afd886d5ec89ba2646970667358221220a449b27af7bbf32cc26db9c846639a43ad95dd15b73fde59a2884c8fb2a1b46664736f6c63430008030033";

type RepayConstructorParams =
  | [linkLibraryAddresses: RepayLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RepayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Repay__factory extends ContractFactory {
  constructor(...args: RepayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Repay__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: RepayLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$88bebae22a3ad6e62b56c303176513ecf8\\$__", "g"),
      linkLibraryAddresses["contracts/libraries/WireLibrary.sol:WireLibrary"]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _crss: string,
    _rCrss: string,
    _rSyrup: string,
    _cakePerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Repay> {
    return super.deploy(
      _crss,
      _rCrss,
      _rSyrup,
      _cakePerBlock,
      _startBlock,
      overrides || {}
    ) as Promise<Repay>;
  }
  getDeployTransaction(
    _crss: string,
    _rCrss: string,
    _rSyrup: string,
    _cakePerBlock: BigNumberish,
    _startBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _crss,
      _rCrss,
      _rSyrup,
      _cakePerBlock,
      _startBlock,
      overrides || {}
    );
  }
  attach(address: string): Repay {
    return super.attach(address) as Repay;
  }
  connect(signer: Signer): Repay__factory {
    return super.connect(signer) as Repay__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RepayInterface {
    return new utils.Interface(_abi) as RepayInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Repay {
    return new Contract(address, _abi, signerOrProvider) as Repay;
  }
}

export interface RepayLibraryAddresses {
  ["contracts/libraries/WireLibrary.sol:WireLibrary"]: string;
}
