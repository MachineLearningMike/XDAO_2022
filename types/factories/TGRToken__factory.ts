/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TGRToken, TGRTokenInterface } from "../TGRToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lp_reward",
    outputs: [
      {
        internalType: "uint256",
        name: "latestTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decayRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accDecayPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sum_balances",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_burn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRound",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pulse_lp_reward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pulse_user_burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pulse_vote_burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "user_burn",
    outputs: [
      {
        internalType: "uint256",
        name: "latestTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decayRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accDecayPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sum_balances",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_burn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRound",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vote_burn",
    outputs: [
      {
        internalType: "uint256",
        name: "latestTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decayRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accDecayPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sum_balances",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_burn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRound",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200242638038062002426833981016040819052620000349162000795565b6200003f336200036e565b602480546001600160a01b0319166001600160a01b038316179055620000623390565b602080546001600160a01b03929092166001600160a01b03199283161781556021805483167370997970c51812dc3a010c7d01b50e0d17dc79c8179055602280548316733c44cdddb6a900fa2b585dd299e03d12fa4293bc1790556023805483167390f79bf6eb2c4f870365e785982e1f101e93b9061790556004805483167397713c3c752f3bb80cbfaacc6830a36a72eb6e97908117909155600580548416733924a2cf72d190023667609dd91e70ed11127d78179055600680549093167302eed5ac83f1c3d1624c0437c9e682e83e95bcff179092556040805161010081018252600080825260029382018490526102b29282019290925260608101939093526080830181905260a0830181905260c083015260e0820190620001889042620007dd565b90528051600755602080820151600855604080830151600955606080840151600a80546001600160a01b0319166001600160a01b03928316179055608080860151600b5560a080870151600c5560c080880151600d5560e097880151600e55855161010081018752600080825260029882018990526046978201979097526006549094169484019490945290820184905281018390529081019190915291820190620002359042620007dd565b90528051600f55602080820151601055604080830151601155606080840151601280546001600160a01b0319166001600160a01b0390921691909117905560808085015160135560a08086015160145560c08087015160155560e0968701516016558451610100810186526000808252600497820188905261030996820196909652938401859052918301849052820183905281019190915291820190620002de9042620007dd565b90528051601755602081015160185560408101516019556060810151601a80546001600160a01b0319166001600160a01b039092169190911790556080810151601b5560a0810151601c5560c0810151601d5560e00151601e5562000367620003443390565b620003526012600a620008fd565b6200036190620f42406200090e565b620003be565b50620009bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620004145760405162461bcd60e51b81526004016200040b919062000930565b60405180910390fd5b50806002600082825462000429919062000988565b909155506200043d90508282600162000482565b6040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6200048d836200060c565b1562000596576200049e836200065d565b80620004d0576001600160a01b038316600090815260036020526040902054620004ca908390620009a3565b620004f6565b6001600160a01b038316600090815260036020526040902054620004f690839062000988565b6001600160a01b038416600090815260036020526040902055806200052b57601c5462000525908390620009a3565b6200053b565b601c546200053b90839062000988565b601c55601b546001600160a01b03841660009081526003602052604090205464e8d4a51000916200056c916200090e565b620005789190620007dd565b6001600160a01b0384166000908152601f6020526040902055505050565b80620005c8576001600160a01b038316600090815260036020526040902054620005c2908390620009a3565b620005ee565b6001600160a01b038316600090815260036020526040902054620005ee90839062000988565b6001600160a01b038416600090815260036020526040902055505050565b6004546000906001600160a01b038381169116148015906200063c57506005546001600160a01b03838116911614155b80156200065757506006546001600160a01b03838116911614155b92915050565b6001600160a01b0381166000908152601f6020908152604080832054601b54600390935290832054909164e8d4a51000916200069a91906200090e565b620006a69190620007dd565b620006b29190620009a3565b9050801562000791576001600160a01b03821660009081526003602052604081208054839290620006e5908490620009a3565b925050819055508060026000828254620007009190620009a3565b9091555050601c80548291906000906200071c908490620009a3565b9091555050601d805482919060009062000738908490620009a3565b9091555050601b546001600160a01b03831660009081526003602052604090205464e8d4a51000916200076b916200090e565b620007779190620007dd565b6001600160a01b0383166000908152601f60205260409020555b5050565b600060208284031215620007a857600080fd5b81516001600160a01b0381168114620007c057600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600082620007fb57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b8085111562000841578160001904821115620008255762000825620007c7565b808516156200083357918102915b93841c939080029062000805565b509250929050565b6000826200085a5750600162000657565b81620008695750600062000657565b81600181146200088257600281146200088d57620008ad565b600191505062000657565b60ff841115620008a157620008a1620007c7565b50506001821b62000657565b5060208310610133831016604e8410600b8410161715620008d2575081810a62000657565b620008de838362000800565b8060001904821115620008f557620008f5620007c7565b029392505050565b6000620007c060ff84168362000849565b60008160001904831182151516156200092b576200092b620007c7565b500290565b600060208083528351808285015260005b818110156200095f5785810183015185820160400152820162000941565b8181111562000972576000604083870101525b50601f01601f1916929092016040019392505050565b600082198211156200099e576200099e620007c7565b500190565b600082821015620009b857620009b8620007c7565b500390565b611a5980620009cd6000396000f3fe6080604052600436106101855760003560e01c80638da5cb5b116100d1578063a9059cbb1161008a578063e729a45511610064578063e729a4551461052b578063ed2deb8b14610540578063f2fde38b14610555578063fc58ee8b1461057557600080fd5b8063a9059cbb146104b0578063d5abeb01146104d0578063dd62ed3e146104e557600080fd5b80638da5cb5b146103c057806395d89b41146103e85780639dc29fac14610414578063a13c1f6714610434578063a150da2a14610470578063a457c2d71461049057600080fd5b80633660777d1161013e5780636c93564f116101185780636c93564f1461033a57806370a0823114610376578063715018a61461039657806373957289146103ab57600080fd5b80633660777d1461027b57806339509351146102fa57806340c10f191461031a57600080fd5b806306fdde0314610191578063086a606c146101d5578063095ea7b3146101ec57806318160ddd1461021c57806323b872dd1461023f578063313ce5671461025f57600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506040805180820190915260098152682a23a9102a37b5b2b760b91b60208201525b6040516101cc91906116f6565b60405180910390f35b3480156101e157600080fd5b506101ea610595565b005b3480156101f857600080fd5b5061020c610207366004611762565b6105e1565b60405190151581526020016101cc565b34801561022857600080fd5b506102316105f8565b6040519081526020016101cc565b34801561024b57600080fd5b5061020c61025a36600461178c565b610607565b34801561026b57600080fd5b50604051601281526020016101cc565b34801561028757600080fd5b50600f546010546011546012546013546014546015546016546102b7979695946001600160a01b03169392919088565b604080519889526020890197909752958701949094526001600160a01b039092166060860152608085015260a084015260c083015260e0820152610100016101cc565b34801561030657600080fd5b5061020c610315366004611762565b6106bd565b34801561032657600080fd5b506101ea610335366004611762565b6106d1565b34801561034657600080fd5b50601754601854601954601a54601b54601c54601d54601e546102b7979695946001600160a01b03169392919088565b34801561038257600080fd5b506102316103913660046117c8565b610778565b3480156103a257600080fd5b506101ea610783565b3480156103b757600080fd5b506101ea6107b9565b3480156103cc57600080fd5b506000546040516001600160a01b0390911681526020016101cc565b3480156103f457600080fd5b506040805180820190915260038152622a23a960e91b60208201526101bf565b34801561042057600080fd5b506101ea61042f366004611762565b610850565b34801561044057600080fd5b50600754600854600954600a54600b54600c54600d54600e546102b7979695946001600160a01b03169392919088565b34801561047c57600080fd5b5061020c61048b36600461178c565b610884565b34801561049c57600080fd5b5061020c6104ab366004611762565b61090b565b3480156104bc57600080fd5b5061020c6104cb366004611762565b610918565b3480156104dc57600080fd5b50610231610925565b3480156104f157600080fd5b506102316105003660046117e3565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561053757600080fd5b506101ea610942565b34801561054c57600080fd5b506101ea610998565b34801561056157600080fd5b506101ea6105703660046117c8565b610a34565b34801561058157600080fd5b506101ea610590366004611762565b610acc565b6008546000906105a5904261182c565b600e549091508111156105de57600e546000906105c390839061184e565b600e839055905060006105d66007610b00565b505042600755505b50565b60006105ee338484610ce3565b5060015b92915050565b6000610602610ddb565b905090565b60006001600160a01b03841633146106a8576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156106925760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b6106a685336106a1868561184e565b610ce3565b505b6106b3848484610ded565b5060019392505050565b60006106ca338484610e03565b9392505050565b6000546001600160a01b031633146106fb5760405162461bcd60e51b815260040161068990611865565b6107076012600a61197e565b610715906302faf08061198d565b8161071e610ddb565b61072891906119ac565b111561076a5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b6044820152606401610689565b6107748282610e8a565b5050565b60006105f282610f3e565b6000546001600160a01b031633146107ad5760405162461bcd60e51b815260040161068990611865565b6107b76000610fe4565b565b6107c1611034565b6023546107d6906001600160a01b0316610778565b6022546107eb906001600160a01b0316610778565b602154610800906001600160a01b0316610778565b602054610815906001600160a01b0316610778565b61081f91906119ac565b61082991906119ac565b61083391906119ac565b601d54601c54610843919061184e565b146107b7576107b76119c4565b6000546001600160a01b0316331461087a5760405162461bcd60e51b815260040161068990611865565b6107748282611100565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b0385166108d15760405162461bcd60e51b815260040161068991906116f6565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546106b390859085906106a190869061184e565b60006106ca338484610884565b60006105ee338484610ded565b6109316012600a61197e565b61093f906302faf08061198d565b81565b600061094e600f610b00565b6012546001600160a01b03166000818152600360205260409020549192506109919164e8d4a510009061098290859061198d565b61098c919061182c565b611100565b5042600f55565b60006109a46017610b00565b905080156105de57601d54601c546000916109be9161184e565b9050600064e8d4a510006109d2848461198d565b6109dc919061182c565b905080601760060160008282546109f391906119ac565b9091555050601c54610a0a8264e8d4a5100061198d565b610a14919061182c565b601b8054600090610a269084906119ac565b909155505042601755505050565b6000546001600160a01b03163314610a5e5760405162461bcd60e51b815260040161068990611865565b6001600160a01b038116610ac35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610689565b6105de81610fe4565b6000546001600160a01b03163314610af65760405162461bcd60e51b815260040161068990611865565b610774828261120a565b600080826001015442610b13919061182c565b90508260070154811115610cdd576000836007015482610b33919061184e565b6007850183905542855564e8d4a510009350905060058111610bf5576002840154600090610b636005600a6119da565b610b6d919061184e565b9050806000610b7e6005600a6119da565b905060015b84811015610bc157610b95848461198d565b9250610ba36005600a6119da565b610bad908361198d565b915080610bb9816119e6565b915050610b83565b5080610bd28364e8d4a5100061198d565b610bdc919061182c565b610beb9064e8d4a5100061184e565b9550505050610cdb565b602454600285015460009182916001600160a01b0390911690635aff34dc90610c206005600a6119da565b610c2a919061184e565b610c366005600a6119da565b6040516001600160e01b031960e085901b1681526004810192909252602482015260448101869052600160648201526084016040805180830381865afa158015610c84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca891906119ff565b909250905080610cbd8364e8d4a5100061198d565b610cc7919061182c565b610cd69064e8d4a5100061184e565b945050505b505b50919050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610d2d5760405162461bcd60e51b815260040161068991906116f6565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610d785760405162461bcd60e51b815260040161068991906116f6565b506001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b601d546002546000916106029161184e565b8015610dfe57610dfe8383836112be565b505050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610e505760405162461bcd60e51b815260040161068991906116f6565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546106b390859085906106a19086906119ac565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610ed45760405162461bcd60e51b815260040161068991906116f6565b508060026000828254610ee791906119ac565b90915550610ef9905082826001611417565b6040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000610f4982611586565b15610fc4576001600160a01b0382166000908152601f6020908152604080832054601b54600390935290832054909164e8d4a5100091610f89919061198d565b610f93919061182c565b610f9d919061184e565b6001600160a01b0384166000908152600360205260409020549091506106ca90829061184e565b506001600160a01b0381166000908152600360205260409020545b919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6002546006546001600160a01b039081166000908152600360205260408082205460055484168352818320546004549094168352912054601c5491929161107b91906119ac565b61108591906119ac565b61108f91906119ac565b1461109c5761109c6119c4565b601c546023546001600160a01b0390811660009081526003602090815260408083205460225485168452818420546021548616855282852054935490951684529220549192916110ec91906119ac565b6110f691906119ac565b61084391906119ac565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b03831661114a5760405162461bcd60e51b815260040161068991906116f6565b50600061115683610f3e565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906111a25760405162461bcd60e51b815260040161068991906116f6565b506111af83836000611417565b81600260008282546111c1919061184e565b909155506111cc9050565b6040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610dce565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166112545760405162461bcd60e51b815260040161068991906116f6565b50600061126083610f3e565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906112ac5760405162461bcd60e51b815260040161068991906116f6565b506112b983836000611417565b6111cc565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0384166113085760405162461bcd60e51b815260040161068991906116f6565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166113535760405162461bcd60e51b815260040161068991906116f6565b50600061135f84610f3e565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906113ab5760405162461bcd60e51b815260040161068991906116f6565b506113b884836000611417565b6113c483836001611417565b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161140991815260200190565b60405180910390a350505050565b61142083611586565b156115165761142e836115d2565b8061145c576001600160a01b03831660009081526003602052604090205461145790839061184e565b611480565b6001600160a01b0383166000908152600360205260409020546114809083906119ac565b6001600160a01b038416600090815260036020526040902055806114b157601c546114ac90839061184e565b6114bf565b601c546114bf9083906119ac565b601c55601b546001600160a01b03841660009081526003602052604090205464e8d4a51000916114ee9161198d565b6114f8919061182c565b6001600160a01b0384166000908152601f6020526040902055505050565b80611544576001600160a01b03831660009081526003602052604090205461153f90839061184e565b611568565b6001600160a01b0383166000908152600360205260409020546115689083906119ac565b6001600160a01b038416600090815260036020526040902055505050565b6004546000906001600160a01b038381169116148015906115b557506005546001600160a01b03838116911614155b80156105f25750506006546001600160a01b039081169116141590565b6001600160a01b0381166000908152601f6020908152604080832054601b54600390935290832054909164e8d4a510009161160d919061198d565b611617919061182c565b611621919061184e565b90508015610774576001600160a01b0382166000908152600360205260408120805483929061165190849061184e565b92505081905550806002600082825461166a919061184e565b9091555050601c805482919060009061168490849061184e565b9091555050601d805482919060009061169e90849061184e565b9091555050601b546001600160a01b03831660009081526003602052604090205464e8d4a51000916116cf9161198d565b6116d9919061182c565b6001600160a01b0383166000908152601f60205260409020555050565b600060208083528351808285015260005b8181101561172357858101830151858201604001528201611707565b81811115611735576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610fdf57600080fd5b6000806040838503121561177557600080fd5b61177e8361174b565b946020939093013593505050565b6000806000606084860312156117a157600080fd5b6117aa8461174b565b92506117b86020850161174b565b9150604084013590509250925092565b6000602082840312156117da57600080fd5b6106ca8261174b565b600080604083850312156117f657600080fd5b6117ff8361174b565b915061180d6020840161174b565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60008261184957634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561186057611860611816565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181815b808511156118d55781600019048211156118bb576118bb611816565b808516156118c857918102915b93841c939080029061189f565b509250929050565b6000826118ec575060016105f2565b816118f9575060006105f2565b816001811461190f576002811461191957611935565b60019150506105f2565b60ff84111561192a5761192a611816565b50506001821b6105f2565b5060208310610133831016604e8410600b8410161715611958575081810a6105f2565b611962838361189a565b806000190482111561197657611976611816565b029392505050565b60006106ca60ff8416836118dd565b60008160001904831182151516156119a7576119a7611816565b500290565b600082198211156119bf576119bf611816565b500190565b634e487b7160e01b600052600160045260246000fd5b60006106ca83836118dd565b6000600182016119f8576119f8611816565b5060010190565b60008060408385031215611a1257600080fd5b50508051602090910151909290915056fea264697066735822122021026343ae67c1a4c1e5f61423d1fcf51fa1801362d257c9731ff00032774bf864736f6c634300080e0033";

export class TGRToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TGRToken> {
    return super.deploy(_analyticMath, overrides || {}) as Promise<TGRToken>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): TGRToken {
    return super.attach(address) as TGRToken;
  }
  connect(signer: Signer): TGRToken__factory {
    return super.connect(signer) as TGRToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TGRTokenInterface {
    return new utils.Interface(_abi) as TGRTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TGRToken {
    return new Contract(address, _abi, signerOrProvider) as TGRToken;
  }
}
