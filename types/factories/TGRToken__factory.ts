/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TGRToken, TGRTokenInterface } from "../TGRToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_analyticMath",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "_decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "bury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkForConsistency",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lp_reward",
    outputs: [
      {
        internalType: "uint256",
        name: "latestTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decayRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accDecayPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sum_balances",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_burn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRound",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pulse_lp_reward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pulse_user_burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pulse_vote_burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "user_burn",
    outputs: [
      {
        internalType: "uint256",
        name: "latestTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decayRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accDecayPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sum_balances",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_burn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRound",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vote_burn",
    outputs: [
      {
        internalType: "uint256",
        name: "latestTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decayRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "accDecayPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sum_balances",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pending_burn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "latestRound",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200257838038062002578833981016040819052620000349162000795565b6200003f336200036e565b602480546001600160a01b0319166001600160a01b038316179055620000623390565b602080546001600160a01b03929092166001600160a01b03199283161781556021805483167370997970c51812dc3a010c7d01b50e0d17dc79c8179055602280548316733c44cdddb6a900fa2b585dd299e03d12fa4293bc1790556023805483167390f79bf6eb2c4f870365e785982e1f101e93b9061790556004805483167397713c3c752f3bb80cbfaacc6830a36a72eb6e97908117909155600580548416733924a2cf72d190023667609dd91e70ed11127d78179055600680549093167302eed5ac83f1c3d1624c0437c9e682e83e95bcff179092556040805161010081018252600080825260029382018490526102b29282019290925260608101939093526080830181905260a0830181905260c083015260e0820190620001889042620007dd565b90528051600755602080820151600855604080830151600955606080840151600a80546001600160a01b0319166001600160a01b03928316179055608080860151600b5560a080870151600c5560c080880151600d5560e097880151600e55855161010081018752600080825260029882018990526046978201979097526006549094169484019490945290820184905281018390529081019190915291820190620002359042620007dd565b90528051600f55602080820151601055604080830151601155606080840151601280546001600160a01b0319166001600160a01b0390921691909117905560808085015160135560a08086015160145560c08087015160155560e0968701516016558451610100810186526000808252600497820188905261030996820196909652938401859052918301849052820183905281019190915291820190620002de9042620007dd565b90528051601755602081015160185560408101516019556060810151601a80546001600160a01b0319166001600160a01b039092169190911790556080810151601b5560a0810151601c5560c0810151601d5560e00151601e5562000367620003443390565b620003526012600a620008fd565b6200036190620f42406200090e565b620003be565b50620009bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316620004145760405162461bcd60e51b81526004016200040b919062000930565b60405180910390fd5b50806002600082825462000429919062000988565b909155506200043d90508282600162000482565b6040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6200048d836200060c565b1562000596576200049e836200065d565b80620004d0576001600160a01b038316600090815260036020526040902054620004ca908390620009a3565b620004f6565b6001600160a01b038316600090815260036020526040902054620004f690839062000988565b6001600160a01b038416600090815260036020526040902055806200052b57601c5462000525908390620009a3565b6200053b565b601c546200053b90839062000988565b601c55601b546001600160a01b03841660009081526003602052604090205464e8d4a51000916200056c916200090e565b620005789190620007dd565b6001600160a01b0384166000908152601f6020526040902055505050565b80620005c8576001600160a01b038316600090815260036020526040902054620005c2908390620009a3565b620005ee565b6001600160a01b038316600090815260036020526040902054620005ee90839062000988565b6001600160a01b038416600090815260036020526040902055505050565b6004546000906001600160a01b038381169116148015906200063c57506005546001600160a01b03838116911614155b80156200065757506006546001600160a01b03838116911614155b92915050565b6001600160a01b0381166000908152601f6020908152604080832054601b54600390935290832054909164e8d4a51000916200069a91906200090e565b620006a69190620007dd565b620006b29190620009a3565b9050801562000791576001600160a01b03821660009081526003602052604081208054839290620006e5908490620009a3565b925050819055508060026000828254620007009190620009a3565b9091555050601c80548291906000906200071c908490620009a3565b9091555050601d805482919060009062000738908490620009a3565b9091555050601b546001600160a01b03831660009081526003602052604090205464e8d4a51000916200076b916200090e565b620007779190620007dd565b6001600160a01b0383166000908152601f60205260409020555b5050565b600060208284031215620007a857600080fd5b81516001600160a01b0381168114620007c057600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600082620007fb57634e487b7160e01b600052601260045260246000fd5b500490565b600181815b8085111562000841578160001904821115620008255762000825620007c7565b808516156200083357918102915b93841c939080029062000805565b509250929050565b6000826200085a5750600162000657565b81620008695750600062000657565b81600181146200088257600281146200088d57620008ad565b600191505062000657565b60ff841115620008a157620008a1620007c7565b50506001821b62000657565b5060208310610133831016604e8410600b8410161715620008d2575081810a62000657565b620008de838362000800565b8060001904821115620008f557620008f5620007c7565b029392505050565b6000620007c060ff84168362000849565b60008160001904831182151516156200092b576200092b620007c7565b500290565b600060208083528351808285015260005b818110156200095f5785810183015185820160400152820162000941565b8181111562000972576000604083870101525b50601f01601f1916929092016040019392505050565b600082198211156200099e576200099e620007c7565b500190565b600082821015620009b857620009b8620007c7565b500390565b611bab80620009cd6000396000f3fe6080604052600436106101855760003560e01c80638da5cb5b116100d1578063a9059cbb1161008a578063e729a45511610064578063e729a4551461052b578063ed2deb8b14610540578063f2fde38b14610555578063fc58ee8b1461057557600080fd5b8063a9059cbb146104b0578063d5abeb01146104d0578063dd62ed3e146104e557600080fd5b80638da5cb5b146103c057806395d89b41146103e85780639dc29fac14610414578063a13c1f6714610434578063a150da2a14610470578063a457c2d71461049057600080fd5b80633660777d1161013e5780636c93564f116101185780636c93564f1461033a57806370a0823114610376578063715018a61461039657806373957289146103ab57600080fd5b80633660777d1461027b57806339509351146102fa57806340c10f191461031a57600080fd5b806306fdde0314610191578063086a606c146101d5578063095ea7b3146101ec57806318160ddd1461021c57806323b872dd1461023f578063313ce5671461025f57600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506040805180820190915260098152682a23a9102a37b5b2b760b91b60208201525b6040516101cc919061185e565b60405180910390f35b3480156101e157600080fd5b506101ea610595565b005b3480156101f857600080fd5b5061020c6102073660046118ca565b6105e1565b60405190151581526020016101cc565b34801561022857600080fd5b506102316105f8565b6040519081526020016101cc565b34801561024b57600080fd5b5061020c61025a3660046118f4565b610607565b34801561026b57600080fd5b50604051601281526020016101cc565b34801561028757600080fd5b50600f546010546011546012546013546014546015546016546102b7979695946001600160a01b03169392919088565b604080519889526020890197909752958701949094526001600160a01b039092166060860152608085015260a084015260c083015260e0820152610100016101cc565b34801561030657600080fd5b5061020c6103153660046118ca565b6106bd565b34801561032657600080fd5b506101ea6103353660046118ca565b6106d1565b34801561034657600080fd5b50601754601854601954601a54601b54601c54601d54601e546102b7979695946001600160a01b03169392919088565b34801561038257600080fd5b50610231610391366004611930565b610778565b3480156103a257600080fd5b506101ea610783565b3480156103b757600080fd5b506101ea6107b9565b3480156103cc57600080fd5b506000546040516001600160a01b0390911681526020016101cc565b3480156103f457600080fd5b506040805180820190915260038152622a23a960e91b60208201526101bf565b34801561042057600080fd5b506101ea61042f3660046118ca565b6108c9565b34801561044057600080fd5b50600754600854600954600a54600b54600c54600d54600e546102b7979695946001600160a01b03169392919088565b34801561047c57600080fd5b5061020c61048b3660046118f4565b6108fd565b34801561049c57600080fd5b5061020c6104ab3660046118ca565b610984565b3480156104bc57600080fd5b5061020c6104cb3660046118ca565b610991565b3480156104dc57600080fd5b5061023161099e565b3480156104f157600080fd5b5061023161050036600461194b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561053757600080fd5b506101ea6109bb565b34801561054c57600080fd5b506101ea610a11565b34801561056157600080fd5b506101ea610570366004611930565b610aad565b34801561058157600080fd5b506101ea6105903660046118ca565b610b45565b6008546000906105a59042611994565b600e549091508111156105de57600e546000906105c39083906119b6565b600e839055905060006105d66007610b79565b505042600755505b50565b60006105ee338484610d5c565b5060015b92915050565b6000610602610e54565b905090565b60006001600160a01b03841633146106a8576001600160a01b0384166000908152600160209081526040808320338452909152902054828110156106925760405162461bcd60e51b815260206004820152601a60248201527f5472616e73666572206578636565647320616c6c6f77616e636500000000000060448201526064015b60405180910390fd5b6106a685336106a186856119b6565b610d5c565b505b6106b3848484610e66565b5060019392505050565b60006106ca338484610e77565b9392505050565b6000546001600160a01b031633146106fb5760405162461bcd60e51b8152600401610689906119cd565b6107076012600a611ae6565b610715906302faf080611af5565b8161071e610e54565b6107289190611b14565b111561076a5760405162461bcd60e51b8152602060048201526011602482015270457863656564204d617820537570706c7960781b6044820152606401610689565b6107748282610efe565b5050565b60006105f282610fb2565b6000546001600160a01b031633146107ad5760405162461bcd60e51b8152600401610689906119cd565b6107b76000611058565b565b6107c16110a8565b601d54601c546000916107d3916119b6565b6023549091506000906107ee906001600160a01b0316610778565b602254610803906001600160a01b0316610778565b602154610818906001600160a01b0316610778565b60205461082d906001600160a01b0316610778565b6108379190611b14565b6108419190611b14565b61084b9190611b14565b90506000818310156108685761086183836119b6565b9050610875565b61087282846119b6565b90505b82610882826103e8611af5565b106108c45760405162461bcd60e51b81526020600482015260126024820152716572726f72206578636565647320302e312560701b6044820152606401610689565b505050565b6000546001600160a01b031633146108f35760405162461bcd60e51b8152600401610689906119cd565b6107748282611268565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b03851661094a5760405162461bcd60e51b8152600401610689919061185e565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546106b390859085906106a19086906119b6565b60006106ca3384846108fd565b60006105ee338484610e66565b6109aa6012600a611ae6565b6109b8906302faf080611af5565b81565b60006109c7600f610b79565b6012546001600160a01b0316600081815260036020526040902054919250610a0a9164e8d4a51000906109fb908590611af5565b610a059190611994565b611268565b5042600f55565b6000610a1d6017610b79565b905080156105de57601d54601c54600091610a37916119b6565b9050600064e8d4a51000610a4b8484611af5565b610a559190611994565b90508060176006016000828254610a6c9190611b14565b9091555050601c54610a838264e8d4a51000611af5565b610a8d9190611994565b601b8054600090610a9f908490611b14565b909155505042601755505050565b6000546001600160a01b03163314610ad75760405162461bcd60e51b8152600401610689906119cd565b6001600160a01b038116610b3c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610689565b6105de81611058565b6000546001600160a01b03163314610b6f5760405162461bcd60e51b8152600401610689906119cd565b6107748282611372565b600080826001015442610b8c9190611994565b90508260070154811115610d56576000836007015482610bac91906119b6565b6007850183905542855564e8d4a510009350905060058111610c6e576002840154600090610bdc6005600a611b2c565b610be691906119b6565b9050806000610bf76005600a611b2c565b905060015b84811015610c3a57610c0e8484611af5565b9250610c1c6005600a611b2c565b610c269083611af5565b915080610c3281611b38565b915050610bfc565b5080610c4b8364e8d4a51000611af5565b610c559190611994565b610c649064e8d4a510006119b6565b9550505050610d54565b602454600285015460009182916001600160a01b0390911690635aff34dc90610c996005600a611b2c565b610ca391906119b6565b610caf6005600a611b2c565b6040516001600160e01b031960e085901b1681526004810192909252602482015260448101869052600160648201526084016040805180830381865afa158015610cfd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d219190611b51565b909250905080610d368364e8d4a51000611af5565b610d409190611994565b610d4f9064e8d4a510006119b6565b945050505b505b50919050565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038416610da65760405162461bcd60e51b8152600401610689919061185e565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610df15760405162461bcd60e51b8152600401610689919061185e565b506001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b601d54600254600091610602916119b6565b80156108c4576108c4838383611426565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526000906001600160a01b038516610ec45760405162461bcd60e51b8152600401610689919061185e565b506001600160a01b038085166000908152600160209081526040808320938716835292905220546106b390859085906106a1908690611b14565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b038316610f485760405162461bcd60e51b8152600401610689919061185e565b508060026000828254610f5b9190611b14565b90915550610f6d90508282600161157f565b6040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000610fbd826116ee565b15611038576001600160a01b0382166000908152601f6020908152604080832054601b54600390935290832054909164e8d4a5100091610ffd9190611af5565b6110079190611994565b61101191906119b6565b6001600160a01b0384166000908152600360205260409020549091506106ca9082906119b6565b506001600160a01b0381166000908152600360205260409020545b919050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6002546006546001600160a01b039081166000908152600360205260408082205460055484168352818320546004549094168352912054601c549192916110ef9190611b14565b6110f99190611b14565b6111039190611b14565b146111855760405162461bcd60e51b815260206004820152604660248201527f73756d5f62616c616e636573202b205f62616c5b74677266746d5d202b205f6260448201527f616c5b74677268747a202b205f62616c5b766f74657320213d205f746f74616c606482015265537570706c7960d01b608482015260a401610689565b601c546023546001600160a01b0390811660009081526003602090815260408083205460225485168452818420546021548616855282852054935490951684529220549192916111d59190611b14565b6111df9190611b14565b6111e99190611b14565b146107b75760405162461bcd60e51b815260206004820152604360248201527f5f62616c5b61646d696e5d202b205f62616c5b616c6963655d202b205f62616c60448201527f5b626f625d202b205f62616c5b6361726f6c5d20213d2073756d5f62616c616e60648201526263657360e81b608482015260a401610689565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166112b25760405162461bcd60e51b8152600401610689919061185e565b5060006112be83610fb2565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b8152509061130a5760405162461bcd60e51b8152600401610689919061185e565b506113178383600061157f565b816002600082825461132991906119b6565b909155506113349050565b6040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610e47565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166113bc5760405162461bcd60e51b8152600401610689919061185e565b5060006113c883610fb2565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906114145760405162461bcd60e51b8152600401610689919061185e565b506114218383600061157f565b611334565b60408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0384166114705760405162461bcd60e51b8152600401610689919061185e565b5060408051808201909152600c81526b5a65726f206164647265737360a01b60208201526001600160a01b0383166114bb5760405162461bcd60e51b8152600401610689919061185e565b5060006114c784610fb2565b9050818110156040518060400160405280600f81526020016e457863656564732062616c616e636560881b815250906115135760405162461bcd60e51b8152600401610689919061185e565b506115208483600061157f565b61152c8383600161157f565b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161157191815260200190565b60405180910390a350505050565b611588836116ee565b1561167e576115968361173a565b806115c4576001600160a01b0383166000908152600360205260409020546115bf9083906119b6565b6115e8565b6001600160a01b0383166000908152600360205260409020546115e8908390611b14565b6001600160a01b0384166000908152600360205260409020558061161957601c546116149083906119b6565b611627565b601c54611627908390611b14565b601c55601b546001600160a01b03841660009081526003602052604090205464e8d4a510009161165691611af5565b6116609190611994565b6001600160a01b0384166000908152601f6020526040902055505050565b806116ac576001600160a01b0383166000908152600360205260409020546116a79083906119b6565b6116d0565b6001600160a01b0383166000908152600360205260409020546116d0908390611b14565b6001600160a01b038416600090815260036020526040902055505050565b6004546000906001600160a01b0383811691161480159061171d57506005546001600160a01b03838116911614155b80156105f25750506006546001600160a01b039081169116141590565b6001600160a01b0381166000908152601f6020908152604080832054601b54600390935290832054909164e8d4a51000916117759190611af5565b61177f9190611994565b61178991906119b6565b90508015610774576001600160a01b038216600090815260036020526040812080548392906117b99084906119b6565b9250508190555080600260008282546117d291906119b6565b9091555050601c80548291906000906117ec9084906119b6565b9091555050601d80548291906000906118069084906119b6565b9091555050601b546001600160a01b03831660009081526003602052604090205464e8d4a510009161183791611af5565b6118419190611994565b6001600160a01b0383166000908152601f60205260409020555050565b600060208083528351808285015260005b8181101561188b5785810183015185820160400152820161186f565b8181111561189d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461105357600080fd5b600080604083850312156118dd57600080fd5b6118e6836118b3565b946020939093013593505050565b60008060006060848603121561190957600080fd5b611912846118b3565b9250611920602085016118b3565b9150604084013590509250925092565b60006020828403121561194257600080fd5b6106ca826118b3565b6000806040838503121561195e57600080fd5b611967836118b3565b9150611975602084016118b3565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b6000826119b157634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156119c8576119c861197e565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181815b80851115611a3d578160001904821115611a2357611a2361197e565b80851615611a3057918102915b93841c9390800290611a07565b509250929050565b600082611a54575060016105f2565b81611a61575060006105f2565b8160018114611a775760028114611a8157611a9d565b60019150506105f2565b60ff841115611a9257611a9261197e565b50506001821b6105f2565b5060208310610133831016604e8410600b8410161715611ac0575081810a6105f2565b611aca8383611a02565b8060001904821115611ade57611ade61197e565b029392505050565b60006106ca60ff841683611a45565b6000816000190483118215151615611b0f57611b0f61197e565b500290565b60008219821115611b2757611b2761197e565b500190565b60006106ca8383611a45565b600060018201611b4a57611b4a61197e565b5060010190565b60008060408385031215611b6457600080fd5b50508051602090910151909290915056fea2646970667358221220499b26cbb11fd22b0a19dfe1b8d13df7a5047a3e73809a03b26d06e2195e9a8464736f6c634300080e0033";

export class TGRToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TGRToken> {
    return super.deploy(_analyticMath, overrides || {}) as Promise<TGRToken>;
  }
  getDeployTransaction(
    _analyticMath: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_analyticMath, overrides || {});
  }
  attach(address: string): TGRToken {
    return super.attach(address) as TGRToken;
  }
  connect(signer: Signer): TGRToken__factory {
    return super.connect(signer) as TGRToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TGRTokenInterface {
    return new utils.Interface(_abi) as TGRTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TGRToken {
    return new Contract(address, _abi, signerOrProvider) as TGRToken;
  }
}
